[{"title":"Полезные ссылки (rpi, tinkerboard, linux, arm)","url":"/1970/01/rpi-tinkerboard-linux-arm/","content":"<p>Полезные ссылки. Raspberry Pi, Tinker Board, Linux, ARM:  </p>\n<ul>\n<li><a href=\"https://www.asus.com/uk/Single-Board-Computer/Tinker-Board-S/HelpDesk_Download/\">Tinker Board Debian</a></li>\n<li><a href=\"https://libreelec.tv/downloads_new/rockchip/\">LibreELEC</a></li>\n<li><a href=\"https://www.jeremymorgan.com/tutorials/raspberry-pi/raspberry-pi-how-to-svn-server/\">Raspberry Pi how to: Set up a SVN Server</a></li>\n<li><a href=\"https://www.howtogeek.com/683971/how-to-use-a-raspberry-pi-as-a-proxy-server-with-privoxy/\">How to Use a Raspberry Pi as a Proxy Server (with Privoxy)</a></li>\n<li><a href=\"https://www.raspberrypi.org/documentation/configuration/external-storage.md\">External storage configuration</a></li>\n<li><a href=\"https://pimylifeup.com/raspberry-pi-plex-server/\">How to Setup a Raspberry Pi Plex Server</a></li>\n</ul>\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["arm","Linux","rpi","tinkerboard","полезные ссылки"]},{"title":"Полезные ссылки (EOSIO)","url":"/1970/01/eosio/","content":"<div style=\"text-align: left;\">Полезные ссылки. EOSIO:</div>\n\n<ul>\n<li><a href=\"https://developers.eos.io/\">EOSIO Developer Portal</a></li>\n<li><a href=\"https://hackernoon.com/how-to-build-a-simple-front-end-for-your-eos-smart-contract-3f9289e8146c\">How to  build a simple Front End for your EOS smart contract</a></li>\n</ul>\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["полезные ссылки","EOSIO"]},{"title":"Howto: запустить приложение на node.js в виде сервиса (linux)","url":"/1970/08/howto-nodejs-linux/","content":"<p>1. Создаем файл ~&#x2F;myapp.service:</p>\n<p>[Unit]</p>\n<p>Description&#x3D;My App</p>\n<p>After&#x3D;network-online.target</p>\n<p>[Service]</p>\n<p>Restart&#x3D;on-failure</p>\n<p>WorkingDirectory&#x3D;&#x2F;var&#x2F;mayapp</p>\n<p>ExecStart&#x3D;&#x2F;usr&#x2F;bin&#x2F;node &#x2F;var&#x2F;myapp&#x2F;index.js</p>\n<p>[Install]</p>\n<p>WantedBy&#x3D;multi-user.target</p>\n<p>2. cp ~&#x2F;myapp.service &#x2F;etc&#x2F;systemd&#x2F;system</p>\n<p>3. systemctl start myapp.service</p>\n<p>4. systemctl enable myapp.service</p>\n<p>5. journalctl -u myapp</p>\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["howto","Node.js"]},{"title":"Oracle SQL: INSERT WHEN","url":"/2010/10/oracle-insert-when/","content":"<p>В Oracle SQL есть интересная конструкция “INSERT WHEN…”, о которой не все знают.  </p>\n<p><a href=\"http://www.oracle.com/pls/db10g/search?remark=quick_search&word=INSERT\">INSERT</a><br><a href=\"http://www.oracle.com/pls/db10g/search?remark=quick_search&word=WHEN\">WHEN</a> ([Condition]) <a href=\"http://www.oracle.com/pls/db10g/search?remark=quick_search&word=THEN\">THEN</a><br><a href=\"http://www.oracle.com/pls/db10g/search?remark=quick_search&word=INTO\">INTO</a> [TableName] ([ColumnName])<br><a href=\"http://www.oracle.com/pls/db10g/search?remark=quick_search&word=VALUES\">VALUES</a> ([<a href=\"http://www.oracle.com/pls/db10g/search?remark=quick_search&word=VALUES\">VALUES</a>])<br><a href=\"http://www.oracle.com/pls/db10g/search?remark=quick_search&word=ELSE\">ELSE</a><br><a href=\"http://www.oracle.com/pls/db10g/search?remark=quick_search&word=INTO\">INTO</a> [TableName] ([ColumnName])<br><a href=\"http://www.oracle.com/pls/db10g/search?remark=quick_search&word=VALUES\">VALUES</a> ([<a href=\"http://www.oracle.com/pls/db10g/search?remark=quick_search&word=VALUES\">VALUES</a>])<br><a href=\"http://www.oracle.com/pls/db10g/search?remark=quick_search&word=SELECT\">SELECT</a> [ColumnName] <a href=\"http://www.oracle.com/pls/db10g/search?remark=quick_search&word=FROM\">FROM</a> [TableName];</p>\n<p>Во первых, эта конструкция позволяет с помощью одной каманды INSERT вставлять данные в разные таблицы.  </p>\n<p>Во вторых, попробуем решить следующую задачу: пусть имеется таблица VTEST с полем A VARCHAR2(10) и нужно  написать команду INSERT, которая будет вставлять значение ‘AAA’, отсутствующее в этой таблице (если такое значение уже есть, то новую запись создавать не нужно). Решение этой задачи может выглядеть примерно так:  </p>\n<p>INSERT INTO VTEST (A)<br>  SELECT ‘AAA’ FROM dual<br>    WHERE NOT EXISTS (SELECT * FROM VTEST WHERE A&#x3D;’AAA’)  </p>\n<p>Такая конструкция, конечно, работает. Но плохо в ней то, что значение ‘AAA’ фигурирует дважды: в SELECT ‘AAA’ FROM dual и в SELECT * FROM VTEST WHERE A&#x3D;’AAA’.  </p>\n<p>А вот так выглядит та же операция, но с использованием INSERT WHEN:  </p>\n<p>INSERT<br>  WHEN NOT EXISTS (SELECT * FROM VTEST WHERE A&#x3D;A0)<br>   THEN INTO VTEST (A) VALUES (A0)<br>  SELECT ‘AAA’ A0 FROM dual  </p>\n<p>Здесь ‘AAA’ присутствует только 1 раз.  </p>\n<div style=\"margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;\">===</div>\n\n<p>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["INSERT","Oracle","SQL","WHEN"]},{"title":"Oracle PL/SQL: Обработка ошибок","url":"/2010/10/oracle-plsql/","content":"<p>Создадим пакет и в нем тестовую процедуру, которая будет генерировать исключение (спецификацию пакета я опускаю, т.к. она очевидна):  </p>\n<p>  create or replace package body VTESTPKG is</p>\n<p>    procedure Test1</p>\n<p>    is</p>\n<p>    begin</p>\n<p>      raise NO_DATA_FOUND;</p>\n<p>    end Test1;</p>\n<p>  end VTESTPKG;</p>\n<p>Теперь, вызовем VTESTPKG.Test1 и запишем текст исключения в output:</p>\n<p>  begin</p>\n<p>    VTESTPKG.Test1;</p>\n<p>  exception</p>\n<p>    when others then</p>\n<p>      dbms_output.put_line(sqlerrm);</p>\n<p>  end;</p>\n<p>Результат будет выглядеть так:</p>\n<p>ORA-01403: данные не найдены</p>\n<p>Код и текст ошибки в SQLERRM есть, однако нам бы очень хотелось увидеть место возникновения ошибки - в идеале номер строки и стек вызовов. Ниже приведен код функции ERR_WHENCE, которая возвращает место возникновения ошибки, и стандартный обработчик ошибок RaiseError, который я использую при обработке всех ошибок в моем коде на PL&#x2F;SQL.</p>\n<p>  function ERR_WHENCE return varchar2</p>\n<p>  is</p>\n<p>    l_back_trace varchar2(4096) default DBMS_UTILITY.FORMAT_ERROR_BACKTRACE;</p>\n<p>    l_pos integer;</p>\n<p>  begin</p>\n<p>    if substr(l_back_trace, length(l_back_trace), 1) &#x3D; chr(10)</p>\n<p>    then</p>\n<p>      l_back_trace :&#x3D; substr(l_back_trace, 1, length(l_back_trace)-1);</p>\n<p>    end if;</p>\n<p>    l_pos :&#x3D; instr(l_back_trace, chr(10), -1);</p>\n<p>    if l_pos &gt; 0 then</p>\n<p>      l_back_trace :&#x3D; substr(l_back_trace, l_pos+1);</p>\n<p>    end if;</p>\n<p>    return l_back_trace || chr(10);</p>\n<p>  end ERR_WHENCE;</p>\n<p>  procedure RaiseError(</p>\n<p>    error_source varchar2,</p>\n<p>    error_message varchar2 default ERR_WHENCE || sqlerrm,</p>\n<p>    error_code number default -20001</p>\n<p>  )</p>\n<p>  is</p>\n<p>  begin    </p>\n<p>    if not error_source is null then</p>\n<p>      raise_application_error(</p>\n<p>        error_code, ‘error in ‘ || error_source || chr(10) || error_message);</p>\n<p>    else</p>\n<p>      raise_application_error(</p>\n<p>        error_code, error_message);</p>\n<p>    end if;</p>\n<p>  end RaiseError;</p>\n<p>Для демонстрации использования создадим процедуры Test2 и Test3, в которых используется обработчик ошибок RaiseError:</p>\n<p>  procedure Test2</p>\n<p>  is</p>\n<p>  begin</p>\n<p>    raise NO_DATA_FOUND;</p>\n<p>  exception</p>\n<p>    when others then</p>\n<p>      RaiseError(‘Test2’);</p>\n<p>  end Test2;</p>\n<p>  procedure Test3</p>\n<p>  is</p>\n<p>  begin    </p>\n<p>    Test2;</p>\n<p>  exception</p>\n<p>    when others then</p>\n<p>      RaiseError(‘Test3’);</p>\n<p>  end Test3;</p>\n<p>Результат (в SQLERRM) вызова Test2:</p>\n<p>ORA-20001: error in Test2</p>\n<p>ORA-06512: на  “AIS.VTESTPKG”, line 44</p>\n<p>ORA-01403: данные не найдены</p>\n<p>Результат (в SQLERRM) вызова Test3:</p>\n<p>ORA-20001: error in Test3</p>\n<p>ORA-06512: на  “AIS.VTESTPKG”, line 53</p>\n<p>ORA-20001: error in Test2</p>\n<p>ORA-06512: на  “AIS.VTESTPKG”, line 44</p>\n<p>ORA-01403: данные не найдены</p>\n<div style=\"margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;\">===</div>\n\n<p>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["Oracle","PL/SQL","обработка ошибок"]},{"title":"Failed to start Qt Designer","url":"/2010/11/failed-to-start-qt-designer/","content":"<p>Столкнулся с проблемой - в NetBeans после обновления перестал запускаться Qt Designer с формулировкой: “Failed to start Qt Designer. Make sure it is installed and added to PATH”.  </p>\n<p>Лечится в терминале командой:  </p>\n<p>export PATH&#x3D;$PATH:&#x2F;Developer&#x2F;Applications&#x2F;Qt&#x2F;Designer.app&#x2F;Contents&#x2F;MacOS  </p>\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["Designer","Mac","NetBeans","Qt"]},{"title":"Schematron и XSD","url":"/2010/11/schematron-xsd/","content":"<p>Коротко про схематрон я написал в <a href=\"http://blog.coolsoftware.ru/2010/11/schematron.html\">предыдущей статье</a>. Здесь же речь пойдет об объединении схематрон-схемы и схемы <a href=\"http://en.wikipedia.org/wiki/xsd\">XSD</a>.  </p>\n<p>XSD-схема замечательно работает, когда необходимо провести <em>форматный контроль</em> <a href=\"http://ru.wikipedia.org/wiki/Xml\">XML</a> файла. В нем есть все необходимые инструменты, чтобы проверить <em>структуру</em> XML-файла и соответствие данных определенным <em>типам</em>. Однако <em>логический и арифметический контроль</em> с помощью XSD-схемы осуществить нельзя. Для этого лучше всего подходит схематрон.  </p>\n<p>Однако, хранить две отдельных схемы (XSD и Schematron) в разных файлах неудобно. К тому же, существующие механизмы обработки XML-файлов (<a href=\"http://ru.wikipedia.org/wiki/Document_Object_Model\">DOM</a>- и <a href=\"http://ru.wikipedia.org/wiki/SAX\">SAX</a>-парсеры) не умеют работать со схемами Schematron, а дважды проверять один и тот же XML по разным схемам не рационально (потребуется дважды “отпарсить” весь XML-файл).  </p>\n<p>Предлагается задавать правила проверки на языке Schematron в подэлементах <strong><a href=\"xs:appinfo\">xs:appinfo</a></strong> элементов <strong><a href=\"xs:annotation\">xs:annotation</a></strong> XSD-схемы.  </p>\n<p>Пример:  </p>\n<p>&amp;#60;?xml version&#x3D;”1.0”?&amp;#62;<br>&lt;xs:schema  xmlns:xs&#x3D;”<a href=\"http://www.w3.org/2001/XMLSchema&quot;\">http://www.w3.org/2001/XMLSchema&quot;</a> xmlns:sch&#x3D;”<a href=\"http://www.ascc.net/xml/schematron&quot;&gt;\">http://www.ascc.net/xml/schematron&quot;&gt;</a><br>  &lt;xs:element name&#x3D;”Root”&gt;<br>    <a href=\"xs:annotation\">xs:annotation</a><br>      <a href=\"xs:appinfo\">xs:appinfo</a><br>        &lt;sch:pattern name&#x3D;”DocumentChecker”&gt;<br>          &lt;sch:rule context&#x3D;”Person”&gt;<br>            &lt;sch:assert test&#x3D;”@birthYear&lt;1990”&gt;Birth year should be less than 1990.</sch:assert><br>          </sch:rule><br>        </sch:pattern><br>      </xs:appinfo><br>    </xs:annotation><br>  </xs:element><br></xs:schema>  </p>\n<p>В этом примере мы видим <em>утверждение</em> на языке Schematron <strong>&lt;sch:assert test&#x3D;”@birthYear&lt;1990”&gt;Birth year should be less than 1990.</sch:assert></strong>, которое должно проверяться в контексте XML-узла <strong>Person</strong> (<strong>&lt;sch:rule context&#x3D;”Person”&gt;</strong>).  </p>\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["Schematron","XML","XSD"]},{"title":"Пример использования SAX-парсера на Java","url":"/2010/11/sax-java/","content":"<p>В статье про <a href=\"http://blog.coolsoftware.ru/2010/11/sax.html\">SAX-парсер</a> я рассказал что это такое и пообещал привести примеры не только на Visual Basic, но и на других языках программирования, в частности на Java. Ниже приведен такой пример - класс VXMLChecker, который умеет проверять XML-текст и XML-файл на соответствие XSD-схеме. Для этого у него есть два публичных метода: checkXML и checkFile.  </p>\n<style type=\"text/css\"></style>  \n\n<p><span class=\"kw1\">package</span> <span class=\"co2\">VXMLParseUtils</span><span class=\"sy0\">;</span><br><span class=\"Apple-style-span\" style=\"color: green; font-size: x-small; font-style: italic; font-weight: bold;\">&#x2F;**</span><br><span class=\"Apple-style-span\" style=\"color: #003030; font-family: 'Courier New', Courier, monospace; font-size: x-small;\"></span><br><span class=\"Apple-style-span\" style=\"color: green; font-size: x-small; font-style: italic; font-weight: bold;\"> *</span><br> * @author Vitaly (<a href=\"http://blog.coolsoftware.ru/\">http://blog.coolsoftware.ru/</a>)<br><span class=\"Apple-style-span\" style=\"color: green; font-size: x-small; font-style: italic; font-weight: bold;\"> *&#x2F;</span>  </p>\n<p><span class=\"kw1\">import</span> <span class=\"co2\">java.io.*</span><span class=\"sy0\">;</span>  </p>\n<p><span class=\"kw1\">import</span> <span class=\"co2\">javax.xml.parsers.SAXParserFactory</span><span class=\"sy0\">;</span><br><span class=\"kw1\">import</span> <span class=\"co2\">javax.xml.parsers.SAXParser</span><span class=\"sy0\">;</span><br><span class=\"kw1\">import</span> <span class=\"co2\">javax.xml.parsers.ParserConfigurationException</span><span class=\"sy0\">;</span>  </p>\n<p><span class=\"kw1\">import</span> <span class=\"co2\">org.xml.sax.helpers.DefaultHandler</span><span class=\"sy0\">;</span><br><span class=\"kw1\">import</span> <span class=\"co2\">org.xml.sax.InputSource</span><span class=\"sy0\">;</span><br><span class=\"kw1\">import</span> <span class=\"co2\">org.xml.sax.SAXException</span><span class=\"sy0\">;</span>  </p>\n<p><span class=\"kw1\">import</span> <span class=\"co2\">org.xml.sax.SAXParseException</span><span class=\"sy0\">;</span><br><span class=\"kw1\">import</span> <span class=\"co2\">org.xml.sax.Locator</span><span class=\"sy0\">;</span><br><span class=\"kw1\">import</span> <span class=\"co2\">org.xml.sax.Attributes</span><span class=\"sy0\">;</span><br><span class=\"kw1\">import</span> <span class=\"co2\">org.xml.sax.XMLReader</span><span class=\"sy0\">;</span>  </p>\n<p><span class=\"kw1\">public</span> <span class=\"kw1\">class</span> VXMLChecker <span class=\"kw1\">extends</span> DefaultHandler <span class=\"br0\">{</span><br>    <span class=\"kw4\">boolean</span> m_bOutLog<span class=\"sy0\">;</span><br>    Locator m_Locator<span class=\"sy0\">;</span><br>    <a href=\"http://www.google.com/search?hl=en&q=allinurl:string+java.sun.com&btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> m_sErrorString<span class=\"sy0\">;</span><br><span class=\"Apple-style-span\" style=\"color: #000020; font-size: x-small;\">   </span><br>    <span class=\"kw1\">public</span> VXMLChecker<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br>        m_bOutLog <span class=\"sy0\">&#x3D;</span> <span class=\"kw2\">true</span><span class=\"sy0\">;</span><br>        m_Locator <span class=\"sy0\">&#x3D;</span> <span class=\"kw2\">null</span><span class=\"sy0\">;</span><br>        m_sErrorString <span class=\"sy0\">&#x3D;</span> <span class=\"st0\">“”</span><span class=\"sy0\">;</span><br>    <span class=\"br0\">}</span>  </p>\n<p>    <span class=\"co1\">&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;</span><br>    <span class=\"co1\">&#x2F;&#x2F; content handlers</span><br>    <span class=\"co1\">&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;</span>  </p>\n<p>    <span class=\"kw1\">public</span> <span class=\"kw4\">void</span> setDocumentLocator <span class=\"br0\">(</span>Locator locator<span class=\"br0\">)</span><br>    <span class=\"br0\">{</span><br>    m_Locator <span class=\"sy0\">&#x3D;</span> locator<span class=\"sy0\">;</span><br>    <span class=\"br0\">}</span>  </p>\n<p>    <span class=\"kw1\">public</span> <span class=\"kw4\">void</span> startDocument <span class=\"br0\">(</span><span class=\"br0\">)</span><br>    <span class=\"kw1\">throws</span> SAXException<br>    <span class=\"br0\">{</span><br>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>m_bOutLog<span class=\"br0\">)</span> <a href=\"http://www.google.com/search?hl=en&q=allinurl:system+java.sun.com&btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">“startDocument”</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br>    <span class=\"br0\">}</span>  </p>\n<p>    <span class=\"kw1\">public</span> <span class=\"kw4\">void</span> endDocument <span class=\"br0\">(</span><span class=\"br0\">)</span><br>    <span class=\"kw1\">throws</span> SAXException<br>    <span class=\"br0\">{</span><br>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>m_bOutLog<span class=\"br0\">)</span> <a href=\"http://www.google.com/search?hl=en&q=allinurl:system+java.sun.com&btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">“endDocument”</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br>    <span class=\"br0\">}</span>  </p>\n<p>    <span class=\"kw1\">public</span> <span class=\"kw4\">void</span> endPrefixMapping <span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&q=allinurl:string+java.sun.com&btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> prefix<span class=\"br0\">)</span><br>    <span class=\"kw1\">throws</span> SAXException<br>    <span class=\"br0\">{</span><br>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>m_bOutLog<span class=\"br0\">)</span> <a href=\"http://www.google.com/search?hl=en&q=allinurl:system+java.sun.com&btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">“endPrefixMapping: “</span><span class=\"sy0\">+</span>prefix<span class=\"br0\">)</span><span class=\"sy0\">;</span><br>    <span class=\"br0\">}</span>  </p>\n<p>    <span class=\"kw1\">public</span> <span class=\"kw4\">void</span> startElement <span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&q=allinurl:string+java.sun.com&btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> uri, <a href=\"http://www.google.com/search?hl=en&q=allinurl:string+java.sun.com&btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> localName,<br>                  <a href=\"http://www.google.com/search?hl=en&q=allinurl:string+java.sun.com&btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> qName, <a href=\"http://www.google.com/search?hl=en&q=allinurl:attributes+java.sun.com&btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Attributes</span></a> attributes<span class=\"br0\">)</span><br>    <span class=\"kw1\">throws</span> SAXException<br>    <span class=\"br0\">{</span><br>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>m_bOutLog<span class=\"br0\">)</span> <a href=\"http://www.google.com/search?hl=en&q=allinurl:system+java.sun.com&btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">“startElement: “</span><span class=\"sy0\">+</span>uri<span class=\"sy0\">+</span><span class=\"st0\">“,”</span><span class=\"sy0\">+</span>localName<span class=\"sy0\">+</span><span class=\"st0\">“,”</span><span class=\"sy0\">+</span>qName<span class=\"br0\">)</span><span class=\"sy0\">;</span><br>    <span class=\"br0\">}</span>  </p>\n<p>    <span class=\"kw1\">public</span> <span class=\"kw4\">void</span> endElement <span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&q=allinurl:string+java.sun.com&btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> uri, <a href=\"http://www.google.com/search?hl=en&q=allinurl:string+java.sun.com&btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> localName, <a href=\"http://www.google.com/search?hl=en&q=allinurl:string+java.sun.com&btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> qName<span class=\"br0\">)</span><br>    <span class=\"kw1\">throws</span> SAXException<br>    <span class=\"br0\">{</span><br>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>m_bOutLog<span class=\"br0\">)</span> <a href=\"http://www.google.com/search?hl=en&q=allinurl:system+java.sun.com&btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">“endElement: “</span><span class=\"sy0\">+</span>uri<span class=\"sy0\">+</span><span class=\"st0\">“,”</span><span class=\"sy0\">+</span>localName<span class=\"sy0\">+</span><span class=\"st0\">“,”</span><span class=\"sy0\">+</span>qName<span class=\"br0\">)</span><span class=\"sy0\">;</span><br>    <span class=\"br0\">}</span>  </p>\n<p>    <span class=\"kw1\">public</span> <span class=\"kw4\">void</span> characters <span class=\"br0\">(</span><span class=\"kw4\">char</span> ch<span class=\"br0\">[</span><span class=\"br0\">]</span>, <span class=\"kw4\">int</span> start, <span class=\"kw4\">int</span> length<span class=\"br0\">)</span><br>    <span class=\"kw1\">throws</span> SAXException<br>    <span class=\"br0\">{</span><br>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>m_bOutLog<span class=\"br0\">)</span> <a href=\"http://www.google.com/search?hl=en&q=allinurl:system+java.sun.com&btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">“characters: “</span><span class=\"sy0\">+</span><span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&q=allinurl:string+java.sun.com&btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a><span class=\"br0\">(</span>ch, start, length<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br>    <span class=\"br0\">}</span>  </p>\n<p>    <span class=\"kw1\">public</span> <span class=\"kw4\">void</span> ignorableWhitespace <span class=\"br0\">(</span><span class=\"kw4\">char</span> ch<span class=\"br0\">[</span><span class=\"br0\">]</span>, <span class=\"kw4\">int</span> start, <span class=\"kw4\">int</span> length<span class=\"br0\">)</span><br>    <span class=\"kw1\">throws</span> SAXException<br>    <span class=\"br0\">{</span><br>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>m_bOutLog<span class=\"br0\">)</span> <a href=\"http://www.google.com/search?hl=en&q=allinurl:system+java.sun.com&btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">“ignorableWhitespace: “</span><span class=\"sy0\">+</span><span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&q=allinurl:string+java.sun.com&btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a><span class=\"br0\">(</span>ch, start, length<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br>    <span class=\"br0\">}</span>  </p>\n<p>    <span class=\"kw1\">public</span> <span class=\"kw4\">void</span> processingInstruction <span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&q=allinurl:string+java.sun.com&btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> target, <a href=\"http://www.google.com/search?hl=en&q=allinurl:string+java.sun.com&btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> data<span class=\"br0\">)</span><br>    <span class=\"kw1\">throws</span> SAXException<br>    <span class=\"br0\">{</span><br>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>m_bOutLog<span class=\"br0\">)</span> <a href=\"http://www.google.com/search?hl=en&q=allinurl:system+java.sun.com&btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">“processingInstruction: “</span><span class=\"sy0\">+</span>target<span class=\"sy0\">+</span><span class=\"st0\">“,”</span><span class=\"sy0\">+</span>data<span class=\"br0\">)</span><span class=\"sy0\">;</span><br>    <span class=\"br0\">}</span>  </p>\n<p>    <span class=\"kw1\">public</span> <span class=\"kw4\">void</span> skippedEntity <span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&q=allinurl:string+java.sun.com&btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> name<span class=\"br0\">)</span><br>    <span class=\"kw1\">throws</span> SAXException<br>    <span class=\"br0\">{</span><br>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>m_bOutLog<span class=\"br0\">)</span> <a href=\"http://www.google.com/search?hl=en&q=allinurl:system+java.sun.com&btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">“skippedEntity: “</span><span class=\"sy0\">+</span>name<span class=\"br0\">)</span><span class=\"sy0\">;</span><br>    <span class=\"br0\">}</span>  </p>\n<p>    <span class=\"co1\">&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;</span><br>    <span class=\"co1\">&#x2F;&#x2F; error handlers</span><br>    <span class=\"co1\">&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;</span><br>    <span class=\"kw1\">public</span> <span class=\"kw4\">void</span> warning <span class=\"br0\">(</span>SAXParseException e<span class=\"br0\">)</span><br>        <span class=\"kw1\">throws</span> SAXException<br>    <span class=\"br0\">{</span><br>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>m_bOutLog<span class=\"br0\">)</span> <a href=\"http://www.google.com/search?hl=en&q=allinurl:system+java.sun.com&btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">“warning: “</span><span class=\"sy0\">+</span>e.<span class=\"me1\">getMessage</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br>    <span class=\"br0\">}</span>  </p>\n<p>    <span class=\"kw1\">public</span> <span class=\"kw4\">void</span> error <span class=\"br0\">(</span>SAXParseException e<span class=\"br0\">)</span><br>        <span class=\"kw1\">throws</span> SAXException<br>    <span class=\"br0\">{</span><br>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>m_bOutLog<span class=\"br0\">)</span> <a href=\"http://www.google.com/search?hl=en&q=allinurl:system+java.sun.com&btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">“error: “</span><span class=\"sy0\">+</span>e.<span class=\"me1\">getMessage</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br>        <a href=\"http://www.google.com/search?hl=en&q=allinurl:string+java.sun.com&btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> sAddErrorString <span class=\"sy0\">&#x3D;</span> “[XMLChecker2.error] SAXParseException thrown:<span class=\"es0\">\\n</span>“ <span class=\"sy0\">+</span> e.<span class=\"me1\">getMessage</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br>        m_sErrorString <span class=\"sy0\">&#x3D;</span> m_sErrorString <span class=\"sy0\">+</span> “<span class=\"es0\">\\n</span>“ <span class=\"sy0\">+</span> sAddErrorString<span class=\"sy0\">;</span><br>    <span class=\"br0\">}</span>  </p>\n<p>    <span class=\"kw1\">public</span> <span class=\"kw4\">void</span> fatalError <span class=\"br0\">(</span>SAXParseException e<span class=\"br0\">)</span><br>        <span class=\"kw1\">throws</span> SAXException<br>    <span class=\"br0\">{</span><br>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>m_bOutLog<span class=\"br0\">)</span> <a href=\"http://www.google.com/search?hl=en&q=allinurl:system+java.sun.com&btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">“fatal error: “</span><span class=\"sy0\">+</span>e.<span class=\"me1\">getMessage</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br>        <a href=\"http://www.google.com/search?hl=en&q=allinurl:string+java.sun.com&btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> sAddErrorString <span class=\"sy0\">&#x3D;</span> “[XMLChecker2.fatalError] SAXParseException thrown:<span class=\"es0\">\\n</span>“ <span class=\"sy0\">+</span> e.<span class=\"me1\">getMessage</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br>        m_sErrorString <span class=\"sy0\">&#x3D;</span> m_sErrorString <span class=\"sy0\">+</span> “<span class=\"es0\">\\n</span>“ <span class=\"sy0\">+</span> sAddErrorString<span class=\"sy0\">;</span><br>        <span class=\"kw1\">throw</span> e<span class=\"sy0\">;</span><br>    <span class=\"br0\">}</span><br>    <span class=\"co1\">&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;</span><br><span class=\"Apple-style-span\" style=\"color: #000020; font-size: x-small;\">   </span><br>    <span class=\"kw1\">public</span> <span class=\"kw4\">boolean</span> parseXML<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&q=allinurl:reader+java.sun.com&btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Reader</span></a> xmlReader, <a href=\"http://www.google.com/search?hl=en&q=allinurl:reader+java.sun.com&btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Reader</span></a> xsdReader<span class=\"br0\">)</span><br>        <span class=\"kw1\">throws</span> <a href=\"http://www.google.com/search?hl=en&q=allinurl:ioexception+java.sun.com&btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">IOException</span></a>, SAXException, ParserConfigurationException<br>    <span class=\"br0\">{</span><br>        <span class=\"kw4\">boolean</span> bRes <span class=\"sy0\">&#x3D;</span> <span class=\"kw2\">false</span><span class=\"sy0\">;</span>  </p>\n<p>        m_sErrorString <span class=\"sy0\">&#x3D;</span> <span class=\"st0\">“”</span><span class=\"sy0\">;</span>  </p>\n<p>        SAXParserFactory saxFactory <span class=\"sy0\">&#x3D;</span> SAXParserFactory.<span class=\"me1\">newInstance</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br>        SAXParser parser <span class=\"sy0\">&#x3D;</span> saxFactory.<span class=\"me1\">newSAXParser</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br>        XMLReader reader <span class=\"sy0\">&#x3D;</span> parser.<span class=\"me1\">getXMLReader</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>  </p>\n<p>        reader.<span class=\"me1\">setContentHandler</span><span class=\"br0\">(</span><span class=\"kw1\">this</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br>        reader.<span class=\"me1\">setErrorHandler</span><span class=\"br0\">(</span><span class=\"kw1\">this</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>  </p>\n<p>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>xsdReader <span class=\"sy0\">!&#x3D;</span> <span class=\"kw2\">null</span><span class=\"br0\">)</span><br>        <span class=\"br0\">{</span><br>            reader.<span class=\"me1\">setProperty</span><span class=\"br0\">(</span><br>                <span class=\"st0\">“<a href=\"http://java.sun.com/xml/jaxp/properties/schemaLanguage&quot;\">http://java.sun.com/xml/jaxp/properties/schemaLanguage&quot;</a></span>,<br>                <span class=\"st0\">“<a href=\"http://www.w3.org/2001/XMLSchema&quot;\">http://www.w3.org/2001/XMLSchema&quot;</a></span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br>            reader.<span class=\"me1\">setProperty</span><span class=\"br0\">(</span><br>                <span class=\"st0\">“<a href=\"http://java.sun.com/xml/jaxp/properties/schemaSource&quot;\">http://java.sun.com/xml/jaxp/properties/schemaSource&quot;</a></span>,<br>                <span class=\"kw1\">new</span> InputSource<span class=\"br0\">(</span>xsdReader<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br>            reader.<span class=\"me1\">setFeature</span><span class=\"br0\">(</span><span class=\"st0\">“<a href=\"http://xml.org/sax/features/validation&quot;\">http://xml.org/sax/features/validation&quot;</a></span>, <span class=\"kw2\">true</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br>        <span class=\"br0\">}</span><br>        <span class=\"kw1\">try</span><br>        <span class=\"br0\">{</span><br>            reader.<span class=\"me1\">parse</span><span class=\"br0\">(</span><span class=\"kw1\">new</span> InputSource<span class=\"br0\">(</span>xmlReader<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br>        <span class=\"br0\">}</span><br>        <span class=\"kw1\">catch</span> <span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&q=allinurl:exception+java.sun.com&btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Exception</span></a> e<span class=\"br0\">)</span><br>        <span class=\"br0\">{</span><br>            <span class=\"kw1\">if</span> <span class=\"br0\">(</span>m_bOutLog<span class=\"br0\">)</span> <a href=\"http://www.google.com/search?hl=en&q=allinurl:system+java.sun.com&btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">“parse failed: “</span><span class=\"sy0\">+</span>e.<span class=\"me1\">getMessage</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br>            <span class=\"kw1\">if</span> <span class=\"br0\">(</span>m_sErrorString.<span class=\"me1\">length</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">&lt;&#x3D;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> m_sErrorString <span class=\"sy0\">&#x3D;</span> e.<span class=\"me1\">getMessage</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br>        <span class=\"br0\">}</span><br>        bRes <span class=\"sy0\">&#x3D;</span> <span class=\"br0\">(</span>m_sErrorString.<span class=\"me1\">length</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">&#x3D;&#x3D;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>  </p>\n<p>        <span class=\"kw1\">return</span> bRes<span class=\"sy0\">;</span><br>    <span class=\"br0\">}</span>  </p>\n<p>    <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <a href=\"http://www.google.com/search?hl=en&q=allinurl:string+java.sun.com&btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> checkXML<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&q=allinurl:string+java.sun.com&btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> XmlText, <a href=\"http://www.google.com/search?hl=en&q=allinurl:string+java.sun.com&btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> SchemaFileName<span class=\"br0\">)</span><br>        <span class=\"kw1\">throws</span> <a href=\"http://www.google.com/search?hl=en&q=allinurl:classnotfoundexception+java.sun.com&btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">ClassNotFoundException</span></a>, <a href=\"http://www.google.com/search?hl=en&q=allinurl:ioexception+java.sun.com&btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">IOException</span></a>, SAXException<br>    <span class=\"br0\">{</span><br>        VXMLChecker checker <span class=\"sy0\">&#x3D;</span> <span class=\"kw1\">new</span> VXMLChecker<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br>        <a href=\"http://www.google.com/search?hl=en&q=allinurl:reader+java.sun.com&btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Reader</span></a> xmlReader <span class=\"sy0\">&#x3D;</span> <span class=\"kw2\">null</span><span class=\"sy0\">;</span><br>        <a href=\"http://www.google.com/search?hl=en&q=allinurl:reader+java.sun.com&btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Reader</span></a> xsdReader <span class=\"sy0\">&#x3D;</span> <span class=\"kw2\">null</span><span class=\"sy0\">;</span><br>        <span class=\"kw1\">try</span><br>        <span class=\"br0\">{</span><br>            xmlReader <span class=\"sy0\">&#x3D;</span> <span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&q=allinurl:stringreader+java.sun.com&btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">StringReader</span></a><span class=\"br0\">(</span>XmlText<span class=\"br0\">)</span><span class=\"sy0\">;</span><br>            xsdReader <span class=\"sy0\">&#x3D;</span> <span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&q=allinurl:filereader+java.sun.com&btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">FileReader</span></a><span class=\"br0\">(</span>SchemaFileName<span class=\"br0\">)</span><span class=\"sy0\">;</span><br>            checker.<span class=\"me1\">parseXML</span><span class=\"br0\">(</span>xmlReader, xsdReader<span class=\"br0\">)</span><span class=\"sy0\">;</span><br>        <span class=\"br0\">}</span><br>        <span class=\"kw1\">catch</span><span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&q=allinurl:exception+java.sun.com&btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Exception</span></a> e<span class=\"br0\">)</span><br>        <span class=\"br0\">{</span><br>            <span class=\"kw1\">if</span> <span class=\"br0\">(</span>xmlReader <span class=\"sy0\">!&#x3D;</span> <span class=\"kw2\">null</span><span class=\"br0\">)</span> xmlReader.<span class=\"me1\">close</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br>            <span class=\"kw1\">if</span> <span class=\"br0\">(</span>xsdReader <span class=\"sy0\">!&#x3D;</span> <span class=\"kw2\">null</span><span class=\"br0\">)</span> xsdReader.<span class=\"me1\">close</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br>            <span class=\"kw1\">return</span> e.<span class=\"me1\">getMessage</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br>        <span class=\"br0\">}</span><br>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>xmlReader <span class=\"sy0\">!&#x3D;</span> <span class=\"kw2\">null</span><span class=\"br0\">)</span> xmlReader.<span class=\"me1\">close</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>xsdReader <span class=\"sy0\">!&#x3D;</span> <span class=\"kw2\">null</span><span class=\"br0\">)</span> xsdReader.<span class=\"me1\">close</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br>        <span class=\"kw1\">return</span> checker.<span class=\"me1\">m_sErrorString</span><span class=\"sy0\">;</span><br>    <span class=\"br0\">}</span>  </p>\n<p>    <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <a href=\"http://www.google.com/search?hl=en&q=allinurl:string+java.sun.com&btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> checkFile<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&q=allinurl:string+java.sun.com&btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> XmlFileName, <a href=\"http://www.google.com/search?hl=en&q=allinurl:string+java.sun.com&btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> SchemaFileName<span class=\"br0\">)</span><br>        <span class=\"kw1\">throws</span> <a href=\"http://www.google.com/search?hl=en&q=allinurl:classnotfoundexception+java.sun.com&btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">ClassNotFoundException</span></a>, <a href=\"http://www.google.com/search?hl=en&q=allinurl:ioexception+java.sun.com&btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">IOException</span></a>, SAXException<br>    <span class=\"br0\">{</span><br>        VXMLChecker checker <span class=\"sy0\">&#x3D;</span> <span class=\"kw1\">new</span> VXMLChecker<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br>        <a href=\"http://www.google.com/search?hl=en&q=allinurl:reader+java.sun.com&btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Reader</span></a> xmlReader <span class=\"sy0\">&#x3D;</span> <span class=\"kw2\">null</span><span class=\"sy0\">;</span><br>        <a href=\"http://www.google.com/search?hl=en&q=allinurl:reader+java.sun.com&btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Reader</span></a> xsdReader <span class=\"sy0\">&#x3D;</span> <span class=\"kw2\">null</span><span class=\"sy0\">;</span><br>        <span class=\"kw1\">try</span><br>        <span class=\"br0\">{</span><br>            xmlReader <span class=\"sy0\">&#x3D;</span> <span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&q=allinurl:filereader+java.sun.com&btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">FileReader</span></a><span class=\"br0\">(</span>XmlFileName<span class=\"br0\">)</span><span class=\"sy0\">;</span><br>            xsdReader <span class=\"sy0\">&#x3D;</span> <span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&q=allinurl:filereader+java.sun.com&btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">FileReader</span></a><span class=\"br0\">(</span>SchemaFileName<span class=\"br0\">)</span><span class=\"sy0\">;</span><br>            checker.<span class=\"me1\">parseXML</span><span class=\"br0\">(</span>xmlReader, xsdReader<span class=\"br0\">)</span><span class=\"sy0\">;</span><br>        <span class=\"br0\">}</span><br>        <span class=\"kw1\">catch</span><span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&q=allinurl:exception+java.sun.com&btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Exception</span></a> e<span class=\"br0\">)</span><br>        <span class=\"br0\">{</span><br>            <span class=\"kw1\">if</span> <span class=\"br0\">(</span>xmlReader <span class=\"sy0\">!&#x3D;</span> <span class=\"kw2\">null</span><span class=\"br0\">)</span> xmlReader.<span class=\"me1\">close</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br>            <span class=\"kw1\">if</span> <span class=\"br0\">(</span>xsdReader <span class=\"sy0\">!&#x3D;</span> <span class=\"kw2\">null</span><span class=\"br0\">)</span> xsdReader.<span class=\"me1\">close</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br>            <span class=\"kw1\">return</span> e.<span class=\"me1\">getMessage</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br>        <span class=\"br0\">}</span><br>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>xmlReader <span class=\"sy0\">!&#x3D;</span> <span class=\"kw2\">null</span><span class=\"br0\">)</span> xmlReader.<span class=\"me1\">close</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>xsdReader <span class=\"sy0\">!&#x3D;</span> <span class=\"kw2\">null</span><span class=\"br0\">)</span> xsdReader.<span class=\"me1\">close</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br>        <span class=\"kw1\">return</span> checker.<span class=\"me1\">m_sErrorString</span><span class=\"sy0\">;</span><br>    <span class=\"br0\">}</span><br><span class=\"Apple-style-span\" style=\"color: #009900; font-size: x-small;\">}</span>  </p>\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["XML","XSD","Java","SAX","пример"]},{"title":"SAX-парсер","url":"/2010/11/sax/","content":"<p>В заметке <a href=\"http://blog.coolsoftware.ru/2010/11/schematron-xsd.html\">Schematron и XSD</a> я вскользь упомянул про SAX-парсер и то, что с его помощью можно проверить XML-файл на соответствие XSD-схеме. Здесь я постараюсь описать это подробнее на примере SAX-парсера от Microsoft.  </p>\n<p>Итак, способ разбора XML-файла с помощью SAX-парсера является <em>событийно-ориентированным</em>. Это означает, что приложение, которое  использует SAX-парсер, получает от него уведомления о начале и об окончании XML-элементов, атрибутах, тексте внутри XML-узлов, ошибках разбора и т.д. - в том порядке, в котором SAX-парсер встретил их в XML-файле. При этом, SAX-парсер не сохраняет в памяти разобранные элементы, в отличие от интерфейса DOM,  для которого строится и хранится в памяти объектная модель всего XML. Это делает SAX-парсер пригодным для потоковой обработки (например, для проверки или для загрузки куда-либо) XML-файлов любого размера.  </p>\n<p>Посмотрим на пример использования SAX-парсера в Visual Basic 6.0 (примеры на Java, C# обязательно будут в след. статьях).  </p>\n<p>Для начала в нашем проекте на VB нам необходимо подключить Reference “Microsoft XML, v6.0”.  </p>\n<p><a href=\"http://4.bp.blogspot.com/_f8rnAFN0nXA/TNwcxJ9QElI/AAAAAAAABqA/iRHwkSMsoMU/s1600/ProjectReferences1.png\"><img src=\"http://4.bp.blogspot.com/_f8rnAFN0nXA/TNwcxJ9QElI/AAAAAAAABqA/iRHwkSMsoMU/s400/ProjectReferences1.png\"></a></p>\n<p>Затем нам необходимо создать ClassModule - класс объекта, который будет принимать уведомления от SAX-парсера. Назовем его MySAXReader. Он должен реализовывать интерфейсы MSXML2.IVBSAXContentHandler и MSXML2.IVBSAXErrorHandler.  </p>\n<p><span class=\"Apple-style-span\" style=\"color: #351c75;\">Implements</span> MSXML2.IVBSAXContentHandler<br><span class=\"Apple-style-span\" style=\"color: #351c75;\">Implements</span> MSXML2.IVBSAXErrorHandler  </p>\n<p><span class=\"Apple-style-span\" style=\"color: #351c75;\">Private Sub</span> IVBSAXContentHandler_endElement(strNamespaceURI<span class=\"Apple-style-span\" style=\"color: #351c75;\"> As String</span>, _</p>\n<p>strLocalName<span class=\"Apple-style-span\" style=\"color: #351c75;\"> As String</span>, strQName<span class=\"Apple-style-span\" style=\"color: #351c75;\"> As String</span>)</p>\n<p>    <span class=\"Apple-style-span\" style=\"color: #351c75;\">Debug.Print</span> “endElement: “ &amp; strLocalName</p>\n<p><span class=\"Apple-style-span\" style=\"color: #351c75;\">End Sub</span></p>\n<p><span class=\"Apple-style-span\" style=\"color: #351c75;\">Private Sub</span> IVBSAXContentHandler_startElement(strNamespaceURI<span class=\"Apple-style-span\" style=\"color: #351c75;\"> As String</span>, _</p>\n<p>strLocalName<span class=\"Apple-style-span\" style=\"color: #351c75;\"> As String</span>, strQName<span class=\"Apple-style-span\" style=\"color: #351c75;\"> As String</span>, <span class=\"Apple-style-span\" style=\"color: #351c75;\">ByVal</span> oAttributes <span class=\"Apple-style-span\" style=\"color: #351c75;\">As</span> MSXML2.IVBSAXAttributes)</p>\n<p>    <span class=\"Apple-style-span\" style=\"color: #351c75;\">Debug.Print</span> “startElement: “ &amp; strLocalName</p>\n<p><span class=\"Apple-style-span\" style=\"color: #351c75;\">End Sub</span></p>\n<p><span class=\"Apple-style-span\" style=\"color: #351c75;\">Private Sub</span> IVBSAXErrorHandler_error(<span class=\"Apple-style-span\" style=\"color: #351c75;\">ByVal</span> oLocator <span class=\"Apple-style-span\" style=\"color: #351c75;\">As</span> MSXML2.IVBSAXLocator, _<br>strErrorMessage <span class=\"Apple-style-span\" style=\"color: #351c75;\">As String</span>, <span class=\"Apple-style-span\" style=\"color: #351c75;\">ByVal</span> nErrorCode <span class=\"Apple-style-span\" style=\"color: #351c75;\">As Long</span>)  </p>\n<p>    <span class=\"Apple-style-span\" style=\"color: #351c75;\">Debug.Assert</span> “error: “ &amp; strErrorMessage</p>\n<p><span class=\"Apple-style-span\" style=\"color: #351c75;\">End Sub</span></p>\n<div style=\"margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;\"></div> <div style=\"margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;\"></div>\n\n<p>Методы IVBSAXContentHandler_startElement и IVBSAXContentHandler_endElement будут вызываться SAX-парсером в начале и в конце XML-элемента соответственно. В этих методах, а также в других методах интерфейсов MSXML2.IVBSAXContentHandler и MSXML2.IVBSAXErrorHandler, нужно реализовывать логику приложения. Это может быть, например, загрузка значений в базу данных. Или запись ошибок в лог.  </p>\n<p>Теперь сделаем у нашего класса публичный метод, который будет осуществлять обработку XML-файла, а заодно и проверку его по XSD-схеме. Вот код:  </p>\n<p><span class=\"Apple-style-span\" style=\"color: #351c75;\">Public Sub</span> VerifyFile(<span class=\"Apple-style-span\" style=\"color: #351c75;\">ByVal</span> sXmlFileName <span class=\"Apple-style-span\" style=\"color: #351c75;\">As</span> <span class=\"Apple-style-span\" style=\"color: #351c75;\">String</span>, <span class=\"Apple-style-span\" style=\"color: #351c75;\">ByVal</span> sSchemaFileName <span class=\"Apple-style-span\" style=\"color: #351c75;\">As</span> <span class=\"Apple-style-span\" style=\"color: #351c75;\">String</span>)<br>    <span class=\"Apple-style-span\" style=\"color: #351c75;\">Dim</span> oSaxReader <span class=\"Apple-style-span\" style=\"color: #351c75;\">As</span> MSXML2.SAXXMLReader60<br>    <span class=\"Apple-style-span\" style=\"color: #351c75;\">Dim</span> oSC <span class=\"Apple-style-span\" style=\"color: #351c75;\">As</span> MSXML2.XMLSchemaCache60<br>    <span class=\"Apple-style-span\" style=\"color: #351c75;\">Set</span> oSaxReader &#x3D; CreateObject(“MSXML2.SAXXMLReader.6.0”) ‘<span class=\"Apple-style-span\" style=\"color: #38761d;\">создаем объект SAXXMLReader</span><br>    <span class=\"Apple-style-span\" style=\"color: #351c75;\">Set</span> oSaxReader.contentHandler &#x3D; Me <span class=\"Apple-style-span\" style=\"color: #38761d;\">‘Обработчик событий SAX-паресера -</span><br>                                                               <span class=\"Apple-style-span\" style=\"color: #38761d;\">‘объект, реализующий интерфейс IVBSAXContentHandler</span><br>    <span class=\"Apple-style-span\" style=\"color: #351c75;\">Set</span> oSaxReader.errorHandler &#x3D; Me <span class=\"Apple-style-span\" style=\"color: #38761d;\">‘Обработчик ошибок  -</span><br>                                                           <span class=\"Apple-style-span\" style=\"color: #38761d;\"> ‘объект, реализующий интерфейс IVBSAXErrorHandler</span><br>    <span class=\"Apple-style-span\" style=\"color: #351c75;\">Set</span> oSC &#x3D; CreateObject(“MSXML2.XMLSchemaCache.6.0”) <span class=\"Apple-style-span\" style=\"color: #38761d;\">‘Кэш XSD-схем</span><br>    oSC.Add “”, sSchemaFileName <span class=\"Apple-style-span\" style=\"color: #38761d;\">‘Добавляем в кэш имя файла нашей XSD-схемы</span><br>    oSaxReader.putFeature “schema-validation”, <span class=\"Apple-style-span\" style=\"color: #351c75;\">True</span> <span class=\"Apple-style-span\" style=\"color: #38761d;\">‘Включаем проверку по схеме</span><br>    oSaxReader.putFeature “exhaustive-errors”, <span class=\"Apple-style-span\" style=\"color: #351c75;\">True</span> <span class=\"Apple-style-span\" style=\"color: #38761d;\">‘Включаем проверку всех ошибок</span><br>    oSaxReader.putProperty “schemas”, oSC <span class=\"Apple-style-span\" style=\"color: #38761d;\">‘Связываем SAXXMLReader и XMLSchemaCache</span><br>    oSaxReader.parseURL sXmlFileName <span class=\"Apple-style-span\" style=\"color: #38761d;\">‘Запускаем SAX-парсер</span><br><span class=\"Apple-style-span\" style=\"color: #351c75;\">End Sub</span>  </p>\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["XSD","SAX","парсер"]},{"title":"Схематрон (Schematron)","url":"/2010/11/schematron/","content":"<p>Схематрон - это язык для проверки правильности утверждений о данных в формате <a href=\"http://ru.wikipedia.org/wiki/XML\">XML</a>.  </p>\n<p>Разработан Rick Jelliffe из Academia Sinica Computing Centre (<a href=\"http://xml.ascc.net/resource/schematron/schematron.html\">http://xml.ascc.net/resource/schematron/schematron.html</a>).</p>\n<p>Валидация XML-файла по схематрон-схеме подобна трансформации этого XML-файла в соответствии с преобразованием на языке <a href=\"http://ru.wikipedia.org/wiki/XSLT\">XSLT</a> (e<strong>X</strong>tensible <strong>S</strong>tylesheet <strong>L</strong>anguage <strong>T</strong>ransformations). На выходе получается текст, который по-сути является протоколом проверки.</p>\n<div style=\"margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;\">На самом деле, любую схематрон-схему можно преобразовать в XSLT. Это свойство схематрона как раз и является самым главным его достоинством.</div>\n\n<div style=\"margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;\">Пример схематрон-схемы приведен ниже:</div>\n\n<div style=\"margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;\">&#60;?xml version=\"1.0\" encoding=\"US-ASCII\"?&#62;</div> <div style=\"margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;\"><sch:schema xmlns:sch=\"http://www.ascc.net/xml/schematron\"></div> <div style=\"margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;\"> <sch:title>Example Schematron Schema</sch:title></div> <div style=\"margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;\"> <sch:pattern name=\"dog\\_pattern\"></div> <div style=\"margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;\">   <sch:rule context=\"dog\"></div> <div style=\"margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;\">    <sch:assert test=\"count(ear) = 2\">A 'dog' element should contain two 'ear' elements.</sch:assert></div> <div style=\"margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;\">    <sch:report test=\"bone\">This dog has a bone.</sch:report></div> <div style=\"margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;\">   </sch:rule></div> <div style=\"margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;\">  </sch:pattern></div> <div style=\"margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;\"></sch:schema></div>\n\n<div style=\"margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;\">Давайте разберем, что здесь что.</div>\n\n<p>Тег <strong><a href=\"sch:schema\">sch:schema</a></strong> - <em>схема</em>, корневой тег схематрона.</p>\n<p>Внутри тега схемы располагаются  <em>название схемы</em> - тег <strong><a href=\"sch:title\">sch:title</a></strong>, и <em>шаблоны</em> - теги <strong><a href=\"sch:pattern\">sch:pattern</a></strong>. Атрибут шаблона <strong>name</strong> задает имя шаблона (в нашем примере: “dog_pattern”).</p>\n<p>Шаблон состоит из <em>правил</em> - тег <strong><a href=\"sch:rule\">sch:rule</a></strong>. Каждое правило применяется к узлу проверяемого по схематрон-схеме XML-файла, путь к которому (XPath) задается атрибутом <strong>context</strong>.</p>\n<p>Правило состоит из <em>утверждений</em> (<strong><a href=\"sch:assert\">sch:assert</a></strong>) и <em>сообщений</em> (<strong><a href=\"sch:report\">sch:report</a></strong>), которые имеют атрибут <strong>test</strong> - <em>условие</em>, формулируемое на языке XPath. Разница между ними в том, что если <em>условие</em> в <em>сообщении</em> истинно (в примере: <strong>test&#x3D;”bone”</strong>), то в выходной файл пишется текст <em>сообщения</em> (<strong>This dog has a bone.</strong>), а текст <em>утверждения</em> (<strong>A ‘dog’ element should contain two ‘ear’ elements.</strong>) пишется в выходной файл только если <em>условие</em> НЕ выполнено (<strong>test&#x3D;”count(ear) &#x3D; 2”</strong>).</p>\n<div style=\"font: 12.0px Helvetica; margin: 0.0px 0.0px 0.0px 0.0px;\"></div> <div style=\"font-family: Times; font-size: medium; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;\">===</div>\n\n<p>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["Schematron","XML","Схематрон"]},{"title":"Google App Engine","url":"/2011/06/google-app-engine/","content":"<p>Согласно <a href=\"http://ru.wikipedia.org/wiki/Google_App_Engine\">Вики</a>: <strong>Google App Engine</strong> — сервис <a href=\"http://ru.wikipedia.org/wiki/%D0%A5%D0%BE%D1%81%D1%82%D0%B8%D0%BD%D0%B3\" title=\"Хостинг\">хостинга</a> сайтов и <a href=\"http://ru.wikipedia.org/wiki/%D0%92%D0%B5%D0%B1-%D0%BF%D1%80%D0%B8%D0%BB%D0%BE%D0%B6%D0%B5%D0%BD%D0%B8%D0%B5\" title=\"Веб-приложение\">web-приложений</a> на серверах <a href=\"http://ru.wikipedia.org/wiki/Google\" title=\"Google\">Google</a> с бесплатным именем <a href=\"http://appspot.com/\">&lt;имя_сайта&gt;.appspot.com</a>, либо с <a href=\"http://ru.wikipedia.org/wiki/%D0%94%D0%BE%D0%BC%D0%B5%D0%BD%D0%BD%D0%BE%D0%B5_%D0%B8%D0%BC%D1%8F\" title=\"Доменное имя\">собственным именем</a>, задействованным<a href=\"http://ru.wikipedia.org/wiki/Google_App_Engine#cite_note-0\">[1]</a> с помощью <a href=\"http://www.google.com/a/help/intl/ru/\">служб Google</a></p>\n<p>Отличная, оказывается, штука. Установил плагин Google под эклипс, за пять минут создал и задеплоил простейшее приложение: <a href=\"http://coolsoftware-test.appspot.com/\">http://coolsoftware-test.appspot.com/</a>.</p>\n<p>Update. Немного шаманства с ДНС и приложение доступно на домене coolsoftware.ru: <a href=\"http://testapp.coolsoftware.ru/\">http://testapp.coolsoftware.ru/</a></p>\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["google"]},{"title":"Android: Hello World","url":"/2011/07/android-hello-world/","content":"<p>Как создать HelloWorld для андроида написано тут: <a href=\"http://developer.android.com/resources/tutorials/hello-world.html\">http://developer.android.com/resources/tutorials/hello-world.html</a></p>\n<p>У меня при старте сразу вывалилась ошибка:</p>\n<p>invalid command-line parameter: Files.<br>Hint: use ‘@foo’ to launch a virtual device named ‘foo’.</p>\n<p>please use -help for more information</p>\n<p>Причина - эмулятор андроида не любит длинные пути к SDK (у меня: c:\\program files (x86)\\Android\\android-sdk). Заработало, когда заменил путь на короткий: C:\\Progra~2\\Android\\android-sdk.</p>\n<p>=&#x3D;&#x3D;</p>\n<p>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["google","android"]},{"title":"Google Plugin for Eclipse","url":"/2011/07/google-plugin-for-eclipse/","content":"<p>Для последней версии Eclipse (Indigo) нужно устанавливать правильную версию Google Plugin:</p>\n<p><span class=\"Apple-style-span\" style=\"color: rgb(0, 112, 0); line-height:16px;\"><a href=\"http://dl.google.com/eclipse/plugin/3.7\">http://dl.google.com/eclipse/plugin/3.7</a></span>  </p>\n<p>(<a href=\"http://code.google.com/intl/ru/eclipse/docs/download.html\">http://code.google.com/intl/ru/eclipse/docs/download.html</a>)</p>\n<p>Если устанавливать неверную версию, то будет выдаваться сообщение типа такого:</p>\n<p>Cannot complete the install because one or more required items could not be found.<br>Software being installed: Google App Engine Java SDK 1.3.4 1.3.4.v201005212032 (com.google.appengine.eclipse.sdkbundle.e35.feature.1.3.4.feature.group 1.3.4.v201005212032)<br>Missing requirement: Google Plugin for Eclipse 3.5 1.3.2.v201003242055 (com.google.gdt.eclipse.suite.e35.feature.feature.group 1.3.2.v201003242055) requires ‘org.eclipse.platform.feature.group [3.5.0,3.6.0)’ but it could not be found<br>Cannot satisfy dependency:<br>  From: Google App Engine Java SDK 1.3.4 1.3.4.v201005212032 (com.google.appengine.eclipse.sdkbundle.e35.feature.1.3.4.feature.group 1.3.4.v201005212032)<br>   To: com.google.gdt.eclipse.suite.e35.feature.feature.group 1.3.2</p>\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["google","eclipse","plugin"]},{"title":"Classic ASP и Microsoft Access Databases (MDB) на IIS 7 и 64-битной системе","url":"/2011/10/classic-asp-microsoft-access-databases/","content":"<p>64-битного драйвера MDB в природе не существует, поэтому есть проблема доступа к MDB из 64-битных приложений. В частности из ASP-приложений под IIS. Проблема решается разрешением 32-битных приложений в настройках IIS:</p>\n<p><a href=\"http://4.bp.blogspot.com/-lFFmOmiO7rc/TqmFSbJH-OI/AAAAAAAAAAQ/bOD6YS40yTg/s1600/x64-asp-mdb.png\"><img src=\"http://4.bp.blogspot.com/-lFFmOmiO7rc/TqmFSbJH-OI/AAAAAAAAAAQ/bOD6YS40yTg/s400/x64-asp-mdb.png\"></a></p>\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["32","64","ASP","Driver","IIS","MDB Access"]},{"title":"How to use external dll in c++ builder","url":"/2011/10/how-to-use-external-dll-in-c-builder/","content":"<p>1. Создаем либу: implib dllname.lib dllname.dll</p>\n<p>2. Добавляем созданную либу к проекту: <span class=\"Apple-style-span\" style=\"background-color: #efefef; font-family: verdana, geneva, lucida, 'lucida grande', arial, helvetica, sans-serif; font-size: 14px;\">Project-&gt;AddToProject</span>  </p>\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["builder","cpp","dll","lib"]},{"title":"Active Server Pages","url":"/2011/11/active-server-pages/","content":"<p>Пара замечаний про конфигурирование IIS.</p>\n<p>1. Если при попытке обратиться к динамической странице (ASP) на вашем сервере IIS выдается ошибка “HTTP Error 404 - File or Directory not found” (при этом статические страницы нормально выдаются), то нужно включить “Active Server Pages” в настройках “Web Service Extensions”.</p>\n<p><img src=\"http://2.bp.blogspot.com/--SVi8IGF318/TrPwdyCpbDI/AAAAAAAAAAw/65t8BSC9TYM/s400/turn-on-asp.png\"></p>\n<p>2. При обращении из ASP к базе Access (MDB): если SELECT выполняется нормально, а при попытке добавить, удалить или отредактировать записи выдаются сообщения “В операции должен использоваться обновляемый запрос.”, “Невозможно удаление записей из указанных таблиц.”, то нужно дать права пользователю, от имени которого выполняется сайт (IUSR или что-то похожее), на файл базы MDB и на каталог, в котором этот файл расположен (права на создание&#x2F;удаление&#x2F;изменение).</p>\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["ASP","IIS","404","Active Server Pages"]},{"title":"Вызов кода на C# из программы на Delphi","url":"/2011/11/c-delphi/","content":"<p>Обычно решают противоположную задачу - вызов внешних модулей (DLL, COM), написанных на C++, Delphi и т.п., из программы на C#. У меня же возникла необходимость вызвать из программы написанной на Delphi функцию библиотеки, написанной на C#. В этом посте я расскажу о том, как это делается.  </p>\n<p>Итак, нужно сделать на C# COM объект, к которому затем мы сможем обращаться из нашей программы на Delphi.  </p>\n<ol>\n<li><p>В Visual Studio создаем новый проект New&#x2F;Project&#x2F;Visual C#&#x2F;Class Library.</p>\n</li>\n<li><p>В свойствах проекта на вкладке Application жмем кнопку “Assembly Information” и отмечаем “Make assembly COM-visible”.<br><img src=\"http://2.bp.blogspot.com/-1gmRXzGe_ZY/TsoXPYjY4dI/AAAAAAAAABE/E75IOweSZvM/s400/20111121-1.png\"></p>\n</li>\n<li><p>В свойствах проекта на вкладке Build отмечаем Register for COM interop.<br><img src=\"http://1.bp.blogspot.com/-83aanUd2-cQ/TsoYg4wxbdI/AAAAAAAAABQ/F4vyxSQ6jW4/s400/20111121-2.png\"></p>\n</li>\n<li><p>Для регистрации библиотеки вместо regsvr32 нужно использовать regasm. Вызов будет типа такого:  </p>\n<p>regasm.exe vcomclasslibrary.dll &#x2F;tlb:vcomclasslibrary.tlb  </p>\n<p>regasm.exe обычно расположен тут:  </p>\n<p>c:\\Windows\\Microsoft.NET\\Framework\\v2.0.50727\\  </p>\n</li>\n<li><p>Код на C#:  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">using System;</span><br><span class=\"line\">using System.Drawing;</span><br><span class=\"line\">using System.Runtime.InteropServices;</span><br><span class=\"line\">namespace VCOMClassLibrary</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"> [ComVisible(true)]</span><br><span class=\"line\"> public interface IVCOMInterface</span><br><span class=\"line\"> &#123;</span><br><span class=\"line\">   string LoadImageFromStream(System.IO.Stream stream);</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> [ComVisible(true), ClassInterface(ClassInterfaceType.None)]</span><br><span class=\"line\"> public class VCOMClass : IVCOMInterface</span><br><span class=\"line\"> &#123;</span><br><span class=\"line\">   public string LoadImageFromStream(System.IO.Stream stream)</span><br><span class=\"line\">   &#123;</span><br><span class=\"line\">     Image img = Image.FromStream(stream);</span><br><span class=\"line\">     //put code to load image here</span><br><span class=\"line\">     return &quot;OK&quot;;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>В проекте на Delphi импортируем VCOMClassLibrary (Project&#x2F;Import Type Library). Пример вызова (в котором я заодно показал как передавать Stream):  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">procedure TForm1.Button1Click(Sender: TObject);</span><br><span class=\"line\">var</span><br><span class=\"line\"> cls: IVCOMInterface;</span><br><span class=\"line\"> Stream: IStream;</span><br><span class=\"line\"> FileStream: TFileStream;</span><br><span class=\"line\">begin</span><br><span class=\"line\"> cls := CreateComObject(CLASS_VCOMClass) as IVCOMInterface;</span><br><span class=\"line\"> FileStream := TFileStream.Create(&#x27;c:\\temp\\1.jpg&#x27;, fmOpenRead);</span><br><span class=\"line\"> Stream := TStreamAdapter.Create(FileStream, soOwned) as IStream;</span><br><span class=\"line\"> cls.LoadImageFromStream(Stream);</span><br><span class=\"line\"> FileStream.Free;</span><br><span class=\"line\">end;</span><br></pre></td></tr></table></figure></li>\n</ol>\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["dll","C#","COM","delphi"]},{"title":"Google code highlight","url":"/2011/11/google-code-highlight/","content":"<p>Подключил подсветку кода от гугла (<a href=\"http://google-code-prettify.googlecode.com/\">http://google-code-prettify.googlecode.com</a>).  </p>\n<p>Проверка:  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">#include &lt;QtCore&gt;</span><br><span class=\"line\">#include &lt;QtGui&gt;</span><br><span class=\"line\">int main(int argc, char* argv[]) &#123;</span><br><span class=\"line\">    QApplication app(argc, argv);</span><br><span class=\"line\">    QDialog *dialog = new QDialog;</span><br><span class=\"line\">    QLabel *label = new QLabel(dialog);</span><br><span class=\"line\">    label-&gt;setText(&quot;&lt;font color=red&gt;Hello, World!&lt;/font&gt;&quot;);</span><br><span class=\"line\">    dialog-&gt;show();</span><br><span class=\"line\">    return app.exec();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>Вроде работает. К Blogger-у подключается просто:<br>в шаблоне (Дизайн-&gt;Изменить HTML) перед <strong></head></strong> добавляем:  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;link href=&quot;http://google-code-prettify.googlecode.com/svn/trunk/src/prettify.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;/&gt;</span><br><span class=\"line\">&lt;script src=&quot;http://google-code-prettify.googlecode.com/svn/trunk/src/prettify.js&quot; type=&quot;text/javascript&quot;/&gt;</span><br></pre></td></tr></table></figure>\n\n<p>Затем к тегу <strong><body></strong> нужно добавить: <strong>onload&#x3D;”prettyPrint()”</strong>  </p>\n<p>Использовать так:  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;pre class=&quot;prettyprint&quot;&gt;</span><br><span class=\"line\">    // put your code here</span><br><span class=\"line\">&lt;/pre&gt;</span><br></pre></td></tr></table></figure>\n\n<p>Можно указать явным образом язык, например <strong>lang-html</strong>:  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;pre class=&quot;prettyprint lang-html&quot;&gt;</span><br><span class=\"line\">  The lang-* class specifies the language file extensions.</span><br><span class=\"line\">  File extensions supported by default include</span><br><span class=\"line\">    &quot;bsh&quot;, &quot;c&quot;, &quot;cc&quot;, &quot;cpp&quot;, &quot;cs&quot;, &quot;csh&quot;, &quot;cyc&quot;, &quot;cv&quot;, &quot;htm&quot;, </span><br><span class=\"line\">    &quot;html&quot;, &quot;java&quot;, &quot;js&quot;, &quot;m&quot;, &quot;mxml&quot;, &quot;perl&quot;, &quot;pl&quot;, &quot;pm&quot;, </span><br><span class=\"line\">    &quot;py&quot;, &quot;rb&quot;, &quot;sh&quot;, &quot;xhtml&quot;, &quot;xml&quot;, &quot;xsl&quot;.</span><br><span class=\"line\">&lt;/pre&gt;</span><br></pre></td></tr></table></figure>\n\n<p>PS. Гугловский Highlighter похоже Delphi не поддерживает. Поэтому я его удалил, а вместо него подключил highlight.js.<br>Сделал я это так:  </p>\n<p>1. Скачал <a href=\"http://softwaremaniacs.org/soft/highlight/download/\">HIGHLIGHT.JS</a> (при этом выбрал нужный мне Delphi).<br>2. Файлы highlight.js, highlight.pack.js и стили styles&#x2F;*.css из скачанного архива разместил в google apps.<br>3. В шаблоне Blogger-а (Дизайн-&gt;Изменить HTML) перед </head> добавил:  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;link href=&#x27;http://testapp.coolsoftware.ru/styles/default.css&#x27; rel=&#x27;stylesheet&#x27;/&gt;</span><br><span class=\"line\">&lt;script src=&#x27;http://testapp.coolsoftware.ru/highlight.pack.js&#x27;&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">hljs.initHighlightingOnLoad();</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>Чтобы использовать подсветку синтаксиса, нужно заключать код в <strong><pre><code class=\"delphi\">...</code></pre></strong>. Пример:  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">type</span><br><span class=\"line\">  TMyObject = class(TObject)</span><br><span class=\"line\">  private</span><br><span class=\"line\">    FStr: String;</span><br><span class=\"line\">  public</span><br><span class=\"line\">    constructor Create;  </span><br><span class=\"line\">  end;</span><br><span class=\"line\">&#123; TMyObject &#125;</span><br><span class=\"line\">constructor TMyObject.Create;</span><br><span class=\"line\">begin</span><br><span class=\"line\">  FStr := &#x27;Hello, world!&#x27;;</span><br><span class=\"line\">end;</span><br></pre></td></tr></table></figure>","tags":["google","code","highlight"]},{"title":"Быстрая загрузка данных в Sqlite","url":"/2011/11/sqlite/","content":"<p>Sqlite замечательная локальная база данных. Не требует установки, легко встраивается в приложения благодаря API. Шустрая благодаря тому, что данные не гоняются ни по сети, ни даже между процессами. У меня загрузка листа в миллион записей в Sqlite занимает порядка 30 секунд. Для сравнения - та же самая процедура загружает те же данные в локальный MySQL в 10 раз дольше.<br>Однако, для того, чтобы загрузка данных в Sqlite происходила с максимально возможной скоростью нужно использовать две вещи:  </p>\n<p>1. <strong>Параметризованный Sql</strong>, типа такого: INSERT INTO `table1` (`A`, `B`) VALUES (:param1, :param2). В начале процедуры загрузки выполнять “prepare” (Sqlite3_Prepare_v2). Перед вставкой “биндить” переменные с помощью sqlite3_bind_text, sqlite3_bind_int64 и т.п.,<br>а затем выполнять вставку вызовом функции sqlite3_step.  </p>\n<p>2. <strong>Транзакции</strong>: вставлять данные большими порциями, например, по 1000 записей. Перед вставкой очередной порции выполнять BEGIN TRANSACTION. В конце вставки - COMMIT TRANSACTION. Если этого не делать, то после каждой операции вставки данные будут немедленно сбрасываться на диск, что замедлит процесс во много раз.  </p>\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["fast insert","sqlite","tuning","быстрая вставка"]},{"title":"Проверка серверного сертификата SSL в Delphi","url":"/2011/11/ssl-delphi/","content":"<p>Понадобилось мне осуществить проверку серверного сертификата в моей программе на Delphi. Эта программа была написана довольно давно, на Delphi 7 с использованием Indy 9.  </p>\n<p>Вот как выглядит проверка сертификата:  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">var</span><br><span class=\"line\">  IdHTTP: TIdHTTP;</span><br><span class=\"line\">  IdSSLIOHandlerSocket: TIdSSLIOHandlerSocket;</span><br><span class=\"line\">begin</span><br><span class=\"line\">  IdHTTP := TIdHTTP.Create(nil);</span><br><span class=\"line\">  IdSSLIOHandlerSocket := TIdSSLIOHandlerSocket.Create(nil);</span><br><span class=\"line\">  IdHTTP.IOHandler := IdSSLIOHandlerSocket;</span><br><span class=\"line\">  with IdSSLIOHandlerSocket do</span><br><span class=\"line\">  begin</span><br><span class=\"line\">    SSLOptions.Method := sslvSSLv23;</span><br><span class=\"line\">    SSLOptions.Mode := sslmClient;</span><br><span class=\"line\">    SSLOptions.VerifyMode := [sslvrfPeer];</span><br><span class=\"line\">    SSLOptions.VerifyDepth := 10;</span><br><span class=\"line\">  end;</span><br><span class=\"line\">  IdHTTP.Get(&#x27;https://www.google.com&#x27;);</span><br><span class=\"line\">  FreeAndNil(IdHTTP); </span><br><span class=\"line\">  FreeAndNil(IdSSLIOHandlerSocket);</span><br><span class=\"line\">end;</span><br></pre></td></tr></table></figure>\n\n<p>Если попробовать выполнить выше приведенный код, то результат будет всегда такой: <strong>Error connecting with SSL.</strong>  </p>\n<p>Проблема тут в том, что в Indy используется OpenSSL, который не умеет работать с хранилищем сертификатов Windows и не может проверить подписан ли сертификат, полученный от сервера, одним из доверенных корневых сертификатов из этого хранилища.  </p>\n<p>Посмотрим в исходник модуля IdSSLOpenSSL. В нем есть такая функция:  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">function VerifyCallback(Ok: Integer; ctx: PX509_STORE_CTX): Integer; cdecl;</span><br><span class=\"line\">var</span><br><span class=\"line\">  hcert: PX509;</span><br><span class=\"line\">  Certificate: TIdX509;</span><br><span class=\"line\">  hSSL: PSSL;</span><br><span class=\"line\">  IdSSLSocket: TIdSSLSocket;</span><br><span class=\"line\"> // str: String;</span><br><span class=\"line\">  VerifiedOK: Boolean;</span><br><span class=\"line\">  Depth: Integer;</span><br><span class=\"line\"> // Error: Integer;</span><br><span class=\"line\">begin</span><br><span class=\"line\">  LockVerifyCB.Enter;</span><br><span class=\"line\">  try</span><br><span class=\"line\">    VerifiedOK := True;</span><br><span class=\"line\">    try</span><br><span class=\"line\">      hcert := IdSslX509StoreCtxGetCurrentCert(ctx);</span><br><span class=\"line\">      hSSL := IdSslX509StoreCtxGetAppData(ctx);</span><br><span class=\"line\">      Certificate := TIdX509.Create(hcert);</span><br><span class=\"line\">      if hSSL &lt;&gt; nil then begin</span><br><span class=\"line\">        IdSSLSocket := TIdSSLSocket(IdSslGetAppData(hSSL));</span><br><span class=\"line\">      end</span><br><span class=\"line\">      else begin</span><br><span class=\"line\">        Result := Ok;</span><br><span class=\"line\">        exit;</span><br><span class=\"line\">      end;</span><br><span class=\"line\">      //Error :=</span><br><span class=\"line\">      IdSslX509StoreCtxGetError(ctx);</span><br><span class=\"line\">      //</span><br><span class=\"line\">      Depth := IdSslX509StoreCtxGetErrorDepth(ctx);</span><br><span class=\"line\">     // str := Format(&#x27;Certificate: %s&#x27;, [Certificate.Subject.OneLine]);    &#123;Do not Localize&#125;</span><br><span class=\"line\">     // str := IdSSLSocket.GetSessionIDAsString;</span><br><span class=\"line\">     // ShowMessage(str);</span><br><span class=\"line\">      if (IdSSLSocket.fParent is TIdSSLIOHandlerSocket) then begin</span><br><span class=\"line\">        VerifiedOK := TIdSSLIOHandlerSocket(IdSSLSocket.fParent).DoVerifyPeer(Certificate);</span><br><span class=\"line\">      end;</span><br><span class=\"line\">      if (IdSSLSocket.fParent is TIdServerIOHandlerSSL) then begin</span><br><span class=\"line\">        VerifiedOK := TIdServerIOHandlerSSL(IdSSLSocket.fParent).DoVerifyPeer(Certificate);</span><br><span class=\"line\">      end;</span><br><span class=\"line\">      if not ((Ok&gt;0) and (IdSSLSocket.fSSLContext.VerifyDepth&gt;=Depth)) then begin</span><br><span class=\"line\">        Ok := 0;</span><br><span class=\"line\">        &#123;if Error = OPENSSL_X509_V_OK then begin</span><br><span class=\"line\">          Error := OPENSSL_X509_V_ERR_CERT_CHAIN_TOO_LONG;</span><br><span class=\"line\">        end;&#125;</span><br><span class=\"line\">      end;</span><br><span class=\"line\">      FreeAndNil(Certificate);</span><br><span class=\"line\">    except</span><br><span class=\"line\">    end;</span><br><span class=\"line\">    if VerifiedOK and (Ok &gt; 0) then begin</span><br><span class=\"line\">      Result := 1;</span><br><span class=\"line\">    end</span><br><span class=\"line\">    else begin</span><br><span class=\"line\">      Result := 0;</span><br><span class=\"line\">    end;</span><br><span class=\"line\">  //  Result := Ok; // testing</span><br><span class=\"line\">  finally</span><br><span class=\"line\">    LockVerifyCB.Leave;</span><br><span class=\"line\">  end;</span><br><span class=\"line\">end;</span><br></pre></td></tr></table></figure>\n\n<p>Эта callback-функция вызывается при проверке сертификата библиотекой OpenSSL, и для того, чтобы не случилось ошибки “Error connecting with SSL” она должна возвращать значение Result &#x3D; 1. Видно, что VerifyCallback возвращает Result &#x3D; 1 только в том случае, когда Ok &gt; 0. А параметр Ok для последнего сертификата в цепочке проверяемых всегда будет &#x3D; 0, т.к. корневой сертификат, с помощью которого его можно проверить, не определен.  </p>\n<p>Таким образом, задача в следующем: проверить - подписан ли последний в цепочке сертификат одним из доверенных корневых (ROOT) сертификатов в хранилище Windows, и если подписан, то присвоить Ok &#x3D; 1.  </p>\n<p>К сожалению, при проектировании Indy 9 было допущено много ошибок, и для того, чтобы решить поставленную задачу, придется вносить изменения в код модуля IdSSLOpenSSL, а затем перекомпилировать пакет<br>Indy70.dpk.  </p>\n<p>Внесем следующие изменения:  </p>\n<p>1. Изменим определение события TVerifyPeerEvent на следующее:  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">TVerifyPeerEvent = function(Certificate: TIdX509; Error: Integer; var Ok: Integer): Boolean of object;</span><br></pre></td></tr></table></figure>\n\n<p>2. Изменим определение метода DoVerifyPeer в классах TIdSSLIOHandlerSocket и TIdServerIOHandlerSSL на следующее:  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">function DoVerifyPeer(Certificate: TIdX509; Error: Integer; var Ok: Integer): Boolean; virtual;</span><br></pre></td></tr></table></figure>\n\n<p>3. Изменим реализации метода DoVerifyPeer в классах TIdSSLIOHandlerSocket и TIdServerIOHandlerSSL на следующие:  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">function TIdServerIOHandlerSSL.DoVerifyPeer(Certificate: TIdX509;</span><br><span class=\"line\">  Error: Integer; var Ok: Integer): Boolean;</span><br><span class=\"line\">begin</span><br><span class=\"line\">  Result := True;</span><br><span class=\"line\">  if Assigned(fOnVerifyPeer) then</span><br><span class=\"line\">    Result := fOnVerifyPeer(Certificate, Error, Ok);</span><br><span class=\"line\">end;</span><br><span class=\"line\">function TIdSSLIOHandlerSocket.DoVerifyPeer(Certificate: TIdX509;</span><br><span class=\"line\">  Error: Integer; var Ok: Integer): Boolean;</span><br><span class=\"line\">begin</span><br><span class=\"line\">  Result := True;</span><br><span class=\"line\">  if Assigned(fOnVerifyPeer) then</span><br><span class=\"line\">    Result := fOnVerifyPeer(Certificate, Error, Ok);</span><br><span class=\"line\">end;</span><br></pre></td></tr></table></figure>\n\n<p>4. Добавим public-свойство X509 классу TIdX509:  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">property X509: PX509 read FX509;</span><br></pre></td></tr></table></figure>\n\n<p>5. Изменим функцию VerifyCallback на следующую:  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">function VerifyCallback(Ok: Integer; ctx: PX509_STORE_CTX): Integer; cdecl;</span><br><span class=\"line\">var</span><br><span class=\"line\">  hcert: PX509;</span><br><span class=\"line\">  Certificate: TIdX509;</span><br><span class=\"line\">  hSSL: PSSL;</span><br><span class=\"line\">  IdSSLSocket: TIdSSLSocket;</span><br><span class=\"line\"> // str: String;</span><br><span class=\"line\">  VerifiedOK: Boolean;</span><br><span class=\"line\">  Depth: Integer;</span><br><span class=\"line\">  Error: Integer;</span><br><span class=\"line\">begin</span><br><span class=\"line\">  LockVerifyCB.Enter;</span><br><span class=\"line\">  try</span><br><span class=\"line\">    VerifiedOK := True;</span><br><span class=\"line\">    try</span><br><span class=\"line\">      hcert := IdSslX509StoreCtxGetCurrentCert(ctx);</span><br><span class=\"line\">      hSSL := IdSslX509StoreCtxGetAppData(ctx);</span><br><span class=\"line\">      Certificate := TIdX509.Create(hcert);</span><br><span class=\"line\">      if hSSL &lt;&gt; nil then begin</span><br><span class=\"line\">        IdSSLSocket := TIdSSLSocket(IdSslGetAppData(hSSL));</span><br><span class=\"line\">      end</span><br><span class=\"line\">      else begin</span><br><span class=\"line\">        Result := Ok;</span><br><span class=\"line\">        exit;</span><br><span class=\"line\">      end;</span><br><span class=\"line\">      Error :=</span><br><span class=\"line\">      IdSslX509StoreCtxGetError(ctx);</span><br><span class=\"line\">      //</span><br><span class=\"line\">      Depth := IdSslX509StoreCtxGetErrorDepth(ctx);</span><br><span class=\"line\">     // str := Format(&#x27;Certificate: %s&#x27;, [Certificate.Subject.OneLine]);    &#123;Do not Localize&#125;</span><br><span class=\"line\">     // str := IdSSLSocket.GetSessionIDAsString;</span><br><span class=\"line\">     // ShowMessage(str);</span><br><span class=\"line\">      if (IdSSLSocket.fParent is TIdSSLIOHandlerSocket) then begin</span><br><span class=\"line\">        VerifiedOK := TIdSSLIOHandlerSocket(IdSSLSocket.fParent).DoVerifyPeer(Certificate, Error, Ok);</span><br><span class=\"line\">      end;</span><br><span class=\"line\">      if (IdSSLSocket.fParent is TIdServerIOHandlerSSL) then begin</span><br><span class=\"line\">        VerifiedOK := TIdServerIOHandlerSSL(IdSSLSocket.fParent).DoVerifyPeer(Certificate, Error, Ok);</span><br><span class=\"line\">      end;</span><br><span class=\"line\">      if not ((Ok&gt;0) and (IdSSLSocket.fSSLContext.VerifyDepth&gt;=Depth)) then begin</span><br><span class=\"line\">        Ok := 0;</span><br><span class=\"line\">        &#123;if Error = OPENSSL_X509_V_OK then begin</span><br><span class=\"line\">          Error := OPENSSL_X509_V_ERR_CERT_CHAIN_TOO_LONG;</span><br><span class=\"line\">        end;&#125;</span><br><span class=\"line\">      end;</span><br><span class=\"line\">      FreeAndNil(Certificate);</span><br><span class=\"line\">    except</span><br><span class=\"line\">    end;</span><br><span class=\"line\">    if VerifiedOK and (Ok &gt; 0) then begin</span><br><span class=\"line\">      Result := 1;</span><br><span class=\"line\">    end</span><br><span class=\"line\">    else begin</span><br><span class=\"line\">      Result := 0;</span><br><span class=\"line\">    end;</span><br><span class=\"line\">  //  Result := Ok; // testing</span><br><span class=\"line\">  finally</span><br><span class=\"line\">    LockVerifyCB.Leave;</span><br><span class=\"line\">  end;</span><br><span class=\"line\">end;</span><br></pre></td></tr></table></figure>\n\n<p>Теперь нужно перекомпилировать Indy70.dpk.  </p>\n<p>В результате наших изменений обработчик события OnVerifyPeer получает два дополнительных параметра: Error - код ошибки проверки сертификата (это может быть, например, OPENSSL_X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLY) и параметр Ok, который можно изменить. Ниже приведена реализация обработчика:  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">function TForm1.SSLIOHandlerVerifyPeer(ThePeerCert: TIdX509; Error: Integer; var Ok: Integer): Boolean;</span><br><span class=\"line\">var</span><br><span class=\"line\">  LBIO: PBIO;</span><br><span class=\"line\">  LLen: Integer;</span><br><span class=\"line\">  LStr: String;</span><br><span class=\"line\">  hStore: HCERTSTORE;</span><br><span class=\"line\">  pCert, pIssuer: PCCERT_CONTEXT;</span><br><span class=\"line\">  dwFlags: DWORD;</span><br><span class=\"line\">begin</span><br><span class=\"line\">  //Result := False;</span><br><span class=\"line\">  //</span><br><span class=\"line\">  if (Ok = 0)</span><br><span class=\"line\">  then begin</span><br><span class=\"line\">    hStore := nil;</span><br><span class=\"line\">    pCert := nil;</span><br><span class=\"line\">    pIssuer := nil;</span><br><span class=\"line\">    LBIO := BIO_new(BIO_s_mem());</span><br><span class=\"line\">    try</span><br><span class=\"line\">      i2d_X509_bio(LBIO, ThePeerCert.X509);</span><br><span class=\"line\">      LLen := BIO_ctrl_pending(LBIO);</span><br><span class=\"line\">      SetLength(LStr, LLen);</span><br><span class=\"line\">      BIO_read(LBIO, @LStr[1], LLen);</span><br><span class=\"line\">      BIO_free(LBIO);</span><br><span class=\"line\">      LBIO := nil;</span><br><span class=\"line\">      hStore := CertOpenSystemStore(0, &#x27;ROOT&#x27;);</span><br><span class=\"line\">      if hStore &lt;&gt; nil then</span><br><span class=\"line\">      begin</span><br><span class=\"line\">        pCert := CertCreateCertificateContext(</span><br><span class=\"line\">          PKCS_7_ASN_ENCODING or X509_ASN_ENCODING, @LStr[1], LLen);</span><br><span class=\"line\">        if pCert &lt;&gt; nil then</span><br><span class=\"line\">        begin</span><br><span class=\"line\">          dwFlags := CERT_STORE_REVOCATION_FLAG or</span><br><span class=\"line\">                     CERT_STORE_SIGNATURE_FLAG or</span><br><span class=\"line\">                     CERT_STORE_TIME_VALIDITY_FLAG;</span><br><span class=\"line\">          pIssuer := CertGetIssuerCertificateFromStore(</span><br><span class=\"line\">                       hStore, pCert, nil, @dwFlags);</span><br><span class=\"line\">          if pIssuer &lt;&gt; nil then</span><br><span class=\"line\">          begin</span><br><span class=\"line\">            Ok := 1;</span><br><span class=\"line\">            CertFreeCertificateContext(pIssuer);</span><br><span class=\"line\">            pIssuer := nil;</span><br><span class=\"line\">          end;</span><br><span class=\"line\">          CertFreeCertificateContext(pCert);</span><br><span class=\"line\">          pCert := nil;</span><br><span class=\"line\">        end;</span><br><span class=\"line\">        CertCloseStore(hStore, 0);</span><br><span class=\"line\">        hStore := nil;</span><br><span class=\"line\">      end;</span><br><span class=\"line\">    finally</span><br><span class=\"line\">      if LBIO &lt;&gt; nil then</span><br><span class=\"line\">        BIO_free(LBIO);</span><br><span class=\"line\">      if pIssuer &lt;&gt; nil then</span><br><span class=\"line\">        CertFreeCertificateContext(pIssuer);</span><br><span class=\"line\">      if pCert &lt;&gt; nil then</span><br><span class=\"line\">        CertFreeCertificateContext(pCert);</span><br><span class=\"line\">      if hStore &lt;&gt; nil then</span><br><span class=\"line\">        CertCloseStore(hStore, 0);</span><br><span class=\"line\">    end;</span><br><span class=\"line\">  end;</span><br><span class=\"line\">  //</span><br><span class=\"line\">  Result := (Ok &gt; 0);</span><br><span class=\"line\">end;</span><br></pre></td></tr></table></figure>\n\n<p>В этом обработчике использованы функции OpenSSL и СryptoAPI, объявления которых можно найти в libeay32.pas и wcrypt2.pas. Собственно, из-за необходимости подключения этих модулей я и вынес проверку в обработчик события OnVerifyPeer, вместо того, чтобы сделать все в функции VerifyCallback.  </p>\n<p>Подключаем обработчик SSLIOHandlerVerifyPeer к IdSSLIOHandlerSocket и окончательно получаем загрузку страницы по протоколу https: с проверкой серверного сертификата:  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">var</span><br><span class=\"line\">  IdHTTP: TIdHTTP;</span><br><span class=\"line\">  IdSSLIOHandlerSocket: TIdSSLIOHandlerSocket;</span><br><span class=\"line\">begin</span><br><span class=\"line\">  IdHTTP := TIdHTTP.Create(nil);</span><br><span class=\"line\">  IdSSLIOHandlerSocket := TIdSSLIOHandlerSocket.Create(nil);</span><br><span class=\"line\">  IdHTTP.IOHandler := IdSSLIOHandlerSocket;</span><br><span class=\"line\">  with IdSSLIOHandlerSocket do</span><br><span class=\"line\">  begin</span><br><span class=\"line\">    SSLOptions.Method := sslvSSLv23;</span><br><span class=\"line\">    SSLOptions.Mode := sslmClient;</span><br><span class=\"line\">    SSLOptions.VerifyMode := [sslvrfPeer];</span><br><span class=\"line\">    SSLOptions.VerifyDepth := 10;</span><br><span class=\"line\">    OnVerifyPeer := SSLIOHandlerVerifyPeer;</span><br><span class=\"line\">  end;</span><br><span class=\"line\">  IdHTTP.Get(&#x27;https://www.google.com&#x27;);</span><br><span class=\"line\">  FreeAndNil(IdHTTP); </span><br><span class=\"line\">  FreeAndNil(IdSSLIOHandlerSocket);</span><br><span class=\"line\">end;</span><br></pre></td></tr></table></figure>\n\n<p>PS. <a href=\"http://blog.coolsoftware.ru/2012/07/enhanced-security.html\">Проверка серверного сертификата и Enhanced Security</a>  </p>\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["delphi","certificate","cryptoapi","indy","ssl","проверка"]},{"title":"Свой ГСЧ","url":"/2012/02/blog-post/","content":"<p>Стандартный генератор случайных чисел (ГСЧ) в C++ - функция rand(). Он работает по так-называемому <a href=\"http://ru.wikipedia.org/wiki/%D0%9B%D0%B8%D0%BD%D0%B5%D0%B9%D0%BD%D1%8B%D0%B9_%D0%BA%D0%BE%D0%BD%D0%B3%D1%80%D1%83%D1%8D%D0%BD%D1%82%D0%BD%D1%8B%D0%B9_%D0%BC%D0%B5%D1%82%D0%BE%D0%B4\">конгруэнтному линейному алгоритму</a>. Для инициализации генератора используется srand(seed).  </p>\n<p>У этого генератора есть несколько неприятных особенностей.</p>\n<p>1. Он более-менее сносно работает, когда в своей программе вы генерируете небольшое количество независимых между собой случайных величин. Но когда с помощью одного и того же датчика генерируется с десяток различных переменных (A, B, C, D, E, F, G, H, I, J), то последовательность псевдослучайных значений, например, переменной A: A1, A2, A3, A4, A5, … уже не будет выглядеть как случайная.</p>\n<p>2. Требуется производить инициализацию счетчика с помощью функции srand(seed) в каждом потоке, в котором вызывается rand().</p>\n<p>В общем, столкнувшись на практике со странностями работы стандартного ГСЧ, я решил написать свой. Основные требования - скорость работы и возможность обращаться к одному и тому же ГСЧ из разных потоков. И вот, что у меня получилось:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">class CRnd</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  private:</span><br><span class=\"line\">    unsigned long m_iran;</span><br><span class=\"line\">  public:</span><br><span class=\"line\">    void Init(unsigned long seed);</span><br><span class=\"line\">    unsigned long Rand();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">void CRnd::Init(unsigned long seed)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  m_iran = seed;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">unsigned long CRnd::Rand()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  unsigned long old_iran = m_iran;</span><br><span class=\"line\">  unsigned long new_iran, cur_iran;</span><br><span class=\"line\">  for (;;)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    new_iran = 1664525L*old_iran+1013904223L;</span><br><span class=\"line\">    cur_iran = InterlockedCompareExchange((volatile long*)&amp;m_iran, new_iran, old_iran);</span><br><span class=\"line\">    if (cur_iran == old_iran) break;</span><br><span class=\"line\">    old_iran = cur_iran;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  return new_iran;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>UPD</strong>. <em>Множитель a</em> &#x3D; 1664525 и <em>слагаемое c</em> &#x3D; 1013904223 были взяты из <a href=\"https://ru.wikipedia.org/wiki/%D0%9B%D0%B8%D0%BD%D0%B5%D0%B9%D0%BD%D1%8B%D0%B9_%D0%BA%D0%BE%D0%BD%D0%B3%D1%80%D1%83%D1%8D%D0%BD%D1%82%D0%BD%D1%8B%D0%B9_%D0%BC%D0%B5%D1%82%D0%BE%D0%B4\">статьи в вики</a>. На практике, однако, выяснилось, что получаемая последовательность чисел имеет короткий период, поэтому имеет смысл использовать другие параметры:<br>a &#x3D; 1103515245, c &#x3D; 12345, m &#x3D; 2^31.  </p>\n<p>unsigned long CRnd::Rand()  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  unsigned long old_iran = m_iran;</span><br><span class=\"line\">  unsigned long new_iran, cur_iran;</span><br><span class=\"line\">  for (;;)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    new_iran = 1103515245L*old_iran+12345L;</span><br><span class=\"line\">    cur_iran = InterlockedCompareExchange((volatile long*)&amp;m_iran, new_iran, old_iran);</span><br><span class=\"line\">    if (cur_iran == old_iran) break;</span><br><span class=\"line\">    old_iran = cur_iran;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  return ((new_iran &gt;&gt; 16) &amp; 32767L);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>=&#x3D;&#x3D;</p>\n<p>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["cpp","ГСЧ"]},{"title":"Много читателей и один писатель","url":"/2012/02/blog-post_14/","content":"<p>В много-поточном приложении довольно часто возникает необходимость синхронизировать обращение к разделяемому ресурсу, который могут одновременно читать несколько потоков “читателей”, а производить запись в этот ресурс может только один поток “писатель”. Когда читатели читают данные, то писатель не может писать и должен ждать, пока все читатели не закончат чтение. Когда писатель пишет, то все читатели должны ждать, пока он не запишет все данные и не освободит ресурс.  </p>\n<p>Ниже приведена моя реализация “читателя” и “писателя”. В этой реализации есть допущение о том, что нам известно максимальное количество читателей MAX_READERS.  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">LONG gCounter = 0;</span><br><span class=\"line\">//алгоритм читателя</span><br><span class=\"line\">for (;;) //бесконечный цикл ожидания освобождения ресурса</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  LONG n = InterlockedIncrement(&amp;gCounter); </span><br><span class=\"line\">  //в n - значение gCounter после инкремента</span><br><span class=\"line\">  if (n &lt;= MAX_READERS) break; //писатель ничего не пишет - можно читать</span><br><span class=\"line\">  InterlockedDecrement(&amp;gCounter);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// здесь читаем данные</span><br><span class=\"line\">...</span><br><span class=\"line\">//</span><br><span class=\"line\">InterlockedDecrement(&amp;gCounter); //освобождаем блокировку читателем</span><br><span class=\"line\">// алгоритм писателя</span><br><span class=\"line\">for (;;) //бесконечный цикл освобождения ресурса читателями/писателями</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  LONG n = InterlockedCompareExchange(&amp;gCounter, (MAX_READERS+1), 0); </span><br><span class=\"line\">  //в n - предыдущее значение gCounter, которое было ДО попытки заменить его на MAX_READERS+1 в InterlockedCompareExchange; </span><br><span class=\"line\">  //если там был 0, то никаких читателей/писателей не было, новое значение в gCounter будет MAX_READERS+1; </span><br><span class=\"line\">  //если в gCounter был не 0, то это значение НЕ будет заменено на MAX_READERS+1, а останется прежним</span><br><span class=\"line\">  if (n == 0) break;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// здесь пишем данные</span><br><span class=\"line\">...</span><br><span class=\"line\">//</span><br><span class=\"line\">InterlockedExchangeAdd(&amp;gCounter, -(MAX_READERS+1)); //освобождаем блокировку писателем</span><br></pre></td></tr></table></figure>\n\n<p>Обращаю внимание на использование Interlocked-функций. Это такие функции, которые обеспечивают атомарность.<br>Например, InterlockedIncrement(&amp;gCounter) - это атомарное увеличение на 1 (инкремент) значения gCounter.<br>Вообще, операция инкремента gCounter не атомарна, она состоит из следующих 3-х операций:  </p>\n<p>1. прочитать значение из памяти по адресу &amp;gCounter<br>2. увеличить значение на 1<br>3. записать результат в память по адресу &amp;gCounter  </p>\n<p>Если выполняется параллельно 2 потока, то возможна такая ситуация :  </p>\n<p>[поток 1] читает gCounter, прочитан 0<br>[поток 2] читает gCounter, прочитан 0<br>[поток 1] увеличивает значение на 1, получается 1<br>[поток 2] увеличивает значение на 1, получается 1<br>[поток 1] записывает 1 в gCounter<br>[поток 2] записывает 1 в gCounter  </p>\n<p>В итоге в gCounter будет 1, а не 2, как можно было бы предположить.  </p>\n<p>UPD. LockLib - классы C++ для блокировки разделяемых ресурсов: <a href=\"http://blog.coolsoftware.ru/2013/12/locklib.html\">http://blog.coolsoftware.ru/2013/12/locklib.html</a>  </p>\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["Писатели","Читатели","алгоритм"]},{"title":"Delphi XE 2 & ASProtect","url":"/2012/04/delphi-xe-2-asprotect/","content":"<p>ASProtect, к сожалению, не поддерживает приложения, сделанные в Delphi XE 2. Упакованные им exe-ки не запускаются. В Windows Application Log-е появляется соответствующая запись об ошибке в приложении.  </p>\n<p><a href=\"http://forum.asprotect.net/index.php?showtopic=1362\">Сообщение</a> о несовместимости Delphi XE 2 и ASProtect на официальном форуме датировано 18 ноября 2011, но до сих пор решения нет. Последний ответ от 26 марта 2012 гласит:</p>\n<p>Your problem in the queue for the decision and will be solved in the next release of ASProtect (will be released in the nearest future).  </p>\n<p>Ждем новую версию… Если в ближайшее время не появится, придется переходить на какой-нибудь другой протектор.  </p>\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["delphi","ASProtect","XE 2"]},{"title":"Coolsoftware on github","url":"/2012/03/coolsoftware-on-github/","content":"<p>Завел аккаунт в github: <a href=\"https://github.com/coolsoftware/\">https://github.com/coolsoftware/</a><div style=\"font-family: Georgia, serif; font-size: 100%; font-style: normal; font-variant: normal; font-weight: normal; line-height: normal; \"></div> <div style=\"font-family: Georgia, serif; font-size: 100%; font-style: normal; font-variant: normal; font-weight: normal; line-height: normal; \">Это не первый мой аккаунт в github, поэтому потребовалось как-то организовывать одновременный доступ к нему из под разных учеток, с разными SSHKey. По этому поводу маленький “трик” - как я все это сделал:</div> <div style=\"font-family: Georgia, serif; font-size: 100%; font-style: normal; font-variant: normal; font-weight: normal; line-height: normal; \"></div></p>\n<p>1. При установке <a href=\"http://code.google.com/p/msysgit/downloads/list\">Git for Windows</a> создает такой ярлык для Git Bash:</p>\n<p><a href=\"http://3.bp.blogspot.com/-U_ghHd9gdnI/T2AxzEEsyNI/AAAAAAAAAB4/1r0scPKoqZk/s1600/gitbash.png\"><img src=\"http://3.bp.blogspot.com/-U_ghHd9gdnI/T2AxzEEsyNI/AAAAAAAAAB4/1r0scPKoqZk/s400/gitbash.png\"></a></p>\n<div style=\"font-family: Georgia, serif; font-size: 100%; font-style: normal; font-variant: normal; font-weight: normal; line-height: normal; \">Как мы видим текущий каталог Git Bash - %HOMEDRIVE%%HOMEPATH%. В нем хранятся все настройки git, каталог .ssh с SSHKey и проекты обычно тоже там.</div>\n\n<p>Я создал в %HOMEDRIVE%%HOMEPATH% каталог Coolsoftware и в нем git.cmd следующего содержания:</p>\n<p>@set HOME&#x3D;%HOMEDRIVE%%HOMEPATH%\\Coolsoftware</p>\n<p>C:\\Windows\\SysWOW64\\cmd.exe &#x2F;c “”C:\\Program Files (x86)\\Git\\bin\\sh.exe” –login -i”</p>\n<p>Затем создал ярлык на этот git.cmd и вынес его на рабочий стол, обозвав “Git Bash - Coolsoftware”. Теперь при его запуске текущий каталог пользователя в “баше” %HOMEDRIVE%%HOMEPATH%\\Coolsoftware, а при запуске старого ярлыка “Git Bash” текущий каталог %HOMEDRIVE%%HOMEPATH%. Таким образом получилось два “баша”, в каждом - свои настройки.</p>\n<p>Далее запустил “Git Bash - Coolsoftware” произвел установку github в соответствии с <a href=\"http://help.github.com/win-set-up-git/\">инструкцией</a> и выложил проект <a href=\"https://github.com/coolsoftware/VHashedStringList\">VHashedStringList</a> - оптимизированный список строк, доступ к элементам которого организован с помощью хеш-индекса.</p>\n<p>TVHashedStringList - аналог стандартного THashedStringList (фактически, он сделан на его основе, хотя наследуется не от него, а от TStringList).</p>\n<p>Существенное отличие от THashedStringList заключается в том, что оптимизированы операции перестроения индекса при изменении списка.</p>\n<p>В THashedStringList полное перестроение индекса требуется после любого изменения, что приводит к значительным задержкам в реальных приложениях.</p>\n<p>Например, в следующем примере полное перестроение индекса будет произведено 3 раза:</p>\n<figure class=\"highlight pascal\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">procedure</span> <span class=\"title\">ChangeList</span><span class=\"params\">(lst: THashedStringList)</span>;</span></span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\">  lst.Values[<span class=\"string\">&#x27;key1&#x27;</span>] := <span class=\"string\">&#x27;Value1&#x27;</span>;</span><br><span class=\"line\">  lst.Values[<span class=\"string\">&#x27;key2&#x27;</span>] := <span class=\"string\">&#x27;Value2&#x27;</span>; <span class=\"comment\">//неявный вызов IndexOfName и перестроение индекса</span></span><br><span class=\"line\">  lst.Values[<span class=\"string\">&#x27;key3&#x27;</span>] := <span class=\"string\">&#x27;Value3&#x27;</span>; <span class=\"comment\">//неявный вызов IndexOfName и перестроение индекса</span></span><br><span class=\"line\">  lst.Values[<span class=\"string\">&#x27;key4&#x27;</span>] := <span class=\"string\">&#x27;Value4&#x27;</span>; <span class=\"comment\">//неявный вызов IndexOfName и перестроение индекса</span></span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br></pre></td></tr></table></figure>\n\n<p>В отличие от THashedStringList, TVHashedStringList не требует полного перестроения индекса после добавления нового элемента в конец списка или</p>\n<p>при изменении значений элементов списка. Перестроение происходит только после вставки нового элемента в список или удаления из списка.</p>\n<p>Поэтому в следующем примере полного перестроения индекса не произойдет ни разу.</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">procedure ChangeList(lst: TVHashedStringList);</span><br><span class=\"line\">begin</span><br><span class=\"line\">  lst.Values[&#x27;key1&#x27;] := &#x27;Value1&#x27;; //индекс модифицирован и не требует перестроения</span><br><span class=\"line\">  lst.Values[&#x27;key2&#x27;] := &#x27;Value2&#x27;; //индекс модифицирован и не требует перестроения</span><br><span class=\"line\">  lst.Values[&#x27;key3&#x27;] := &#x27;Value3&#x27;; //индекс модифицирован и не требует перестроения</span><br><span class=\"line\">  lst.Values[&#x27;key4&#x27;] := &#x27;Value4&#x27;; //индекс модифицирован и не требует перестроения</span><br><span class=\"line\">end;</span><br></pre></td></tr></table></figure>\n\n<p>=&#x3D;&#x3D;</p>\n<p>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["github","VHashedStringList"]},{"title":"Проверка серверного сертификата и Enhanced Security","url":"/2012/07/enhanced-security/","content":"<p>В моем <a href=\"http://blog.coolsoftware.ru/2011/11/ssl-delphi.html\">посте про проверку серверного сертификата SSL в Delphi 7</a> проверка этого самого сертификата выполнялась вызовом функции CryptoAPI CertGetIssuerCertificateFromStore. Я столкнулся на практике со следующим: оказывается, что на эту функцию оказывает влияние Internet Explorer Enhanced Security (по умолчанию оно включено на всех серверах Windows 2003). Т.е. до тех пор, пока хост не будет включен в список доверенных, его сертификат тоже может не проходить проверку. Как-то так (слишком глубоко эту тему не копал). В общем, если на одном компьютере проверка сертификата работает, а на другом - нет (ошибка “Error connecting with SSL”), то следует проверить - включен ли IE Enhanced Security, и если да, то либо отключить его, либо добавить хост в список доверенных.  </p>\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["certificate","ssl","Enhanced Security"]},{"title":"Зависимость от Microsoft Visual C++ Runtime","url":"/2012/07/microsoft-visual-c-runtime/","content":"<p>Чтобы убрать зависимость от Microsoft Visual C++ Runtime нужно в свойствах проекта выбрать Runtime Library: Multi-threaded (&#x2F;MT). Получающийся при компиляции exe&#x2F;dll будет несколько больше, зато не нужно будет устанавливать Visual C++ Redistributable Package.  </p>\n<p><a href=\"http://2.bp.blogspot.com/-CjbUFycexks/UALiLAoQ96I/AAAAAAAAACQ/Ks4Wr6vS9fE/s1600/mt.png\"><img src=\"http://2.bp.blogspot.com/-CjbUFycexks/UALiLAoQ96I/AAAAAAAAACQ/Ks4Wr6vS9fE/s1600/mt.png\"></a></p>\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["cpp"]},{"title":"Qt и Visual Studio 2008","url":"/2012/07/qt-visual-studio-2008/","content":"<div style=\"text-align: left;\">Чтобы использовать Qt совместно со средой разработки Visual Studio нужно выполнить следующие шаги:</div>\n\n<p>1. Скачать и установить Qt for Visual Studio 2008: <a href=\"http://qt.nokia.com/downloads/windows-cpp-vs2008\">http://qt.nokia.com/downloads/windows-cpp-vs2008</a> (каталог установки не должен содержать пробелов, например это может быть C:\\qt\\4.8.2)</p>\n<p>2. Скачать и установить Visual Studio Add-in: <a href=\"http://qt.nokia.com/downloads/visual-studio-add-in\">http://qt.nokia.com/downloads/visual-studio-add-in</a>. </p>\n<div style=\"text-align: left;\">3. Добавить в Переменную среды Path (Пуск->Панель инструментов->Система->Дополнительно->Переменные среды) путь к bin каталогу Qt (например, C:\\\\qt\\\\4.8.2\\\\bin)</div>\n\n<div style=\"text-align: left;\">Вот, в принципе, все. В Microsoft Visual Studio IDE должен появиться пункт меню Qt. А в диалоге New Project - типы проектов Qt4 Projects.</div>\n\n<p><a href=\"http://4.bp.blogspot.com/-jOxA0xDFeHE/UAbnhZvwrPI/AAAAAAAAACc/83inxuVgthU/s1600/qt1.png\"><img src=\"http://4.bp.blogspot.com/-jOxA0xDFeHE/UAbnhZvwrPI/AAAAAAAAACc/83inxuVgthU/s400/qt1.png\"></a></p>\n<p><a href=\"http://4.bp.blogspot.com/-8W8A1BtdcUs/UAbnmrtMHUI/AAAAAAAAACk/olYvTzTpoyA/s1600/qt2.png\"><img src=\"http://4.bp.blogspot.com/-8W8A1BtdcUs/UAbnmrtMHUI/AAAAAAAAACk/olYvTzTpoyA/s400/qt2.png\"></a></p>\n<div style=\"text-align: left;\">Есть только два нюанса:</div>\n\n<div style=\"text-align: left;\">1. Если хочется избавиться от Qt Runtime (статически прилинковать к exe файлу все необходимые библиотеки), то нужно пересобрать Qt с ключом -static:</div> <div style=\"text-align: left;\"></div>\n\n<ul>\n<li>Запустить Visual Studio 2008 Command Prompt</li>\n<li>Выполнить команду: cd  C:\\qt\\4.8.2</li>\n<li>Выполнить команду: configure -platform win32-msvc2008 -static</li>\n<li>Выполнить команду: nmake</li>\n</ul>\n<p>Сборка Qt у меня заняла несколько часов.</p>\n<p>2. По-умолчанию библиотеки Qt компилируются в режиме Multi-threaded DLL - &#x2F;MD (для Debug -  Multi-threaded Debug DLL - &#x2F;MDd). Что означает наличие зависимостей от msvcr90.dll и msvcp90.dll. Т.е. при установке программы возможно потребуется устанавливать Microsoft Visual C++ 2008 Redistributable Package. Чтобы избавиться от этой зависимости нужно перед сборкой Qt поправить qmake.conf ( C:\\qt\\4.8.2 \\mkspecs\\win32-msvc2008\\qmake.conf) следующим образом:  </p>\n<p>заменить строки</p>\n<p>  QMAKE_CFLAGS_RELEASE    &#x3D; -O2 -MD</p>\n<p>  QMAKE_CFLAGS_RELEASE_WITH_DEBUGINFO +&#x3D; -O2 -MD -Zi</p>\n<p>  QMAKE_CFLAGS_DEBUG      &#x3D; -Zi -MDd</p>\n<p>на</p>\n<p>  QMAKE_CFLAGS_RELEASE    &#x3D; -O2 -MT</p>\n<p>  QMAKE_CFLAGS_RELEASE_WITH_DEBUGINFO +&#x3D; -O2 -MT -Zi</p>\n<p>  QMAKE_CFLAGS_DEBUG      &#x3D; -Zi -MTd</p>\n<div style=\"text-align: left;\">===</div>\n\n<p>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["Qt","cpp","Visial Studio"]},{"title":"ASProtect 1.65 - Delphi XE2 Compatible","url":"/2012/08/asprotect-165-delphi-xe2-compatible/","content":"<p>Наконец-то появилась версия ASProtect 1.65 в которой заявлена совместимость с Delphi XE и XE2. Я попробовал - созданный в Delphi XE2 и запакованный новым “аспром” exe действительно запускается и работает. Ошибок пока не замечено.  </p>\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["delphi","ASProtect","XE 2"]},{"title":"Вызов консольного приложения из программы на Delphi","url":"/2012/08/delphi/","content":"<p>Для вызова внешнего приложения из программы на Delphi обычно используется функция WinAPI CreateProcess. Но как получить то, что это приложение выводит в консоль, и, например, отобразить в логе программы?  Варианта два. Первый: пере-направить вывод консольного приложения в файл и потом прочитать этот файл. Однако, создавать временный файл не охота. А кроме того, такой способ не всегда хорошо работает. Есть другой способ - использовать пайпы (pipes). Ниже приведен код процедуры RunDosCommand на Delphi, который использует этот способ. Весь вывод на консоль записывается в AMemo: TMemo.  </p>\n<figure class=\"highlight pascal\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">RunDosCommand</span><span class=\"params\">(ACmdString: <span class=\"keyword\">String</span>; AMemo: TMemo;</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">  AReadPipe, AWritePipe:  THandle)</span>:</span> Boolean;</span><br><span class=\"line\"><span class=\"keyword\">const</span></span><br><span class=\"line\">  ReadBuffer = <span class=\"number\">4200</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span></span><br><span class=\"line\">  Security : TSecurityAttributes;</span><br><span class=\"line\">  ReadPipe, WritePipe: THandle;</span><br><span class=\"line\">  start : TStartUpInfo;</span><br><span class=\"line\">  ProcessInfo : TProcessInformation;</span><br><span class=\"line\">  Buffer : Pchar;</span><br><span class=\"line\">  BytesRead : DWord;</span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\">  Result := False;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> AMemo &lt;&gt; <span class=\"keyword\">nil</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">  <span class=\"keyword\">begin</span></span><br><span class=\"line\">    AMemo.SelStart := Length(AMemo.Text);</span><br><span class=\"line\">    AMemo.SelText := ACmdString + <span class=\"string\">#13#10</span>;</span><br><span class=\"line\">    AMemo.SelStart := Length(AMemo.Text);</span><br><span class=\"line\">    Application.ProcessMessages;</span><br><span class=\"line\">  <span class=\"keyword\">end</span>;</span><br><span class=\"line\">  ReadPipe := AReadPipe;</span><br><span class=\"line\">  WritePipe := AWritePipe;</span><br><span class=\"line\">  <span class=\"keyword\">with</span> Security <span class=\"keyword\">do</span></span><br><span class=\"line\">  <span class=\"keyword\">begin</span></span><br><span class=\"line\">    nLength := SizeOf(TSecurityAttributes);</span><br><span class=\"line\">    bInheritHandle := true;</span><br><span class=\"line\">    lpSecurityDescriptor := <span class=\"keyword\">nil</span>;</span><br><span class=\"line\">  <span class=\"keyword\">end</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (ReadPipe = <span class=\"number\">0</span>) <span class=\"keyword\">and</span> (WritePipe = <span class=\"number\">0</span>) <span class=\"keyword\">then</span></span><br><span class=\"line\">  <span class=\"keyword\">begin</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> CreatePipe(ReadPipe, WritePipe, @Security, <span class=\"number\">0</span>) <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"keyword\">begin</span></span><br><span class=\"line\">      ReadPipe := <span class=\"number\">0</span>;</span><br><span class=\"line\">      WritePipe := <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span>;</span><br><span class=\"line\">  <span class=\"keyword\">end</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (ReadPipe &lt;&gt; <span class=\"number\">0</span>) <span class=\"keyword\">or</span> (WritePipe &lt;&gt; <span class=\"number\">0</span>) <span class=\"keyword\">then</span></span><br><span class=\"line\">  <span class=\"keyword\">begin</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> AMemo &lt;&gt; <span class=\"keyword\">nil</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"keyword\">begin</span></span><br><span class=\"line\">      Buffer := AllocMem(ReadBuffer + <span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">end</span>;</span><br><span class=\"line\">    FillChar(Start, Sizeof(Start), <span class=\"string\">#0</span>);</span><br><span class=\"line\">    start.cb := SizeOf(start) ;</span><br><span class=\"line\">    start.hStdOutput := WritePipe;</span><br><span class=\"line\">    start.hStdError := WritePipe;</span><br><span class=\"line\">    start.hStdInput := ReadPipe;</span><br><span class=\"line\">    start.dwFlags := STARTF_USESTDHANDLES +</span><br><span class=\"line\">                     STARTF_USESHOWWINDOW;</span><br><span class=\"line\">    start.wShowWindow := SW_HIDE;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> CreateProcess(<span class=\"keyword\">nil</span>,</span><br><span class=\"line\">           PChar(ACmdString),</span><br><span class=\"line\">           @Security,</span><br><span class=\"line\">           @Security,</span><br><span class=\"line\">           true,</span><br><span class=\"line\">           NORMAL_PRIORITY_CLASS,</span><br><span class=\"line\">           <span class=\"keyword\">nil</span>,</span><br><span class=\"line\">           <span class=\"keyword\">nil</span>,</span><br><span class=\"line\">           start,</span><br><span class=\"line\">           ProcessInfo) <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"keyword\">begin</span></span><br><span class=\"line\">      WaitForSingleObject(ProcessInfo.hProcess, INFINITE);</span><br><span class=\"line\">      <span class=\"keyword\">if</span> AMemo &lt;&gt; <span class=\"keyword\">nil</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">      <span class=\"keyword\">begin</span></span><br><span class=\"line\">        BytesRead := <span class=\"number\">0</span>;</span><br><span class=\"line\">        ReadFile(ReadPipe, Buffer[<span class=\"number\">0</span>], ReadBuffer, BytesRead, <span class=\"keyword\">nil</span>);</span><br><span class=\"line\">        Buffer[BytesRead] := <span class=\"string\">#0</span>;</span><br><span class=\"line\">        AMemo.SelStart := Length(AMemo.Text);</span><br><span class=\"line\">        AMemo.SelText := <span class=\"keyword\">String</span>(Buffer);</span><br><span class=\"line\">        AMemo.SelStart := Length(AMemo.Text);</span><br><span class=\"line\">        Application.ProcessMessages;</span><br><span class=\"line\">      <span class=\"keyword\">end</span>;</span><br><span class=\"line\">      Result := True;</span><br><span class=\"line\">    <span class=\"keyword\">end</span> <span class=\"keyword\">else</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> AMemo &lt;&gt; <span class=\"keyword\">nil</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"keyword\">begin</span></span><br><span class=\"line\">      AMemo.SelStart := Length(AMemo.Text);</span><br><span class=\"line\">      AMemo.SelText :=<span class=\"string\">&#x27;Command failed.&#x27;</span><span class=\"string\">#13#10</span>;</span><br><span class=\"line\">      AMemo.SelStart := Length(AMemo.Text);</span><br><span class=\"line\">      Application.ProcessMessages;</span><br><span class=\"line\">    <span class=\"keyword\">end</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> AMemo &lt;&gt; <span class=\"keyword\">nil</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"keyword\">begin</span></span><br><span class=\"line\">      FreeMem(Buffer);</span><br><span class=\"line\">    <span class=\"keyword\">end</span>;</span><br><span class=\"line\">    CloseHandle(ProcessInfo.hProcess);</span><br><span class=\"line\">    CloseHandle(ProcessInfo.hThread);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (AReadPipe = <span class=\"number\">0</span>) <span class=\"keyword\">and</span> (AWritePipe = <span class=\"number\">0</span>) <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"keyword\">begin</span></span><br><span class=\"line\">      CloseHandle(ReadPipe);</span><br><span class=\"line\">      CloseHandle(WritePipe);</span><br><span class=\"line\">    <span class=\"keyword\">end</span>;</span><br><span class=\"line\">  <span class=\"keyword\">end</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br></pre></td></tr></table></figure>\n\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["delphi","console","CreateProcess","консоль"]},{"title":"Преобразование _TCHAR в QString","url":"/2012/08/tchar-qstring/","content":"<p>Для преобразования _TCHAR в QString и обратно (QString в _TCHAR) я объявил в tqchar.h пару простых макросов: _TQSTRING_TQCHAR.  </p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">ifndef</span> TQCHAR_H</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> TQCHAR_H</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;tchar.h&gt;</span></span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">ifdef</span> _UNICODE</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> _TQCHAR(x)        (wchar_t*) x.utf16()</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> _TQSTRING(x)    QString::fromUtf16((x))</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">else</span></span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> _TQCHAR(x)        x.toLocal8Bit().constData()</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> _TQSTRING(x)    QString::fromLocal8Bit((x))</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span> <span class=\"comment\">//TQCHAR_H</span></span></span><br></pre></td></tr></table></figure>\n\n<p>Кстати, нашел хороший плагин для Visual Studio чтобы копировать код в HTML с подсветкой синтаксиса: <a href=\"http://visualstudiogallery.msdn.microsoft.com/98fef791-eb65-4cdf-bf84-077b98c234cf\">Copy As HTML</a>.  </p>\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["Qt","cpp","_TCHAR","QString","Visual C++"]},{"title":"VerQueryValue Access Violation","url":"/2012/08/verqueryvalue-access-violation/","content":"<p>Столкнулся с интересным багом при получении информации о версии из ресурсов (Visual Studio 10, C++).  </p>\n<p><a href=\"http://4.bp.blogspot.com/-8E1i0OB80tg/UDcKCY7caWI/AAAAAAAAAC4/mG1gkd_1dnU/s1600/VerQueryValue.png\"><img src=\"http://4.bp.blogspot.com/-8E1i0OB80tg/UDcKCY7caWI/AAAAAAAAAC4/mG1gkd_1dnU/s640/VerQueryValue.png\"></a></p>\n<p><strong>Access Violation</strong> возникает при выполнении <strong>VerQueryValue</strong> (см. картинку).<br>Причем, ошибка возникает только если используется <strong>Multi-Byte Character Set</strong>. А если выставить в свойствах проекта <strong>Use Unicode Character Set</strong>, то ошибка пропадает. Из этого можно сделать вывод, что баг именно в <strong>VerQueryValueA</strong>, а в <strong>VerQueryValueW</strong> его нет.<br>Что ж, решение проблемы заключается в переписывании функции чтения информации о версии таким образом, чтобы всегда использовалась функция <strong>VerQueryValueW</strong>. Ниже приведен листинг готовой функции.  </p>\n<p><strong>UPD 30.01.2014</strong>. Спустя полтора года выяснилось, что и с использованием <strong>VerQueryValueW</strong> возможен <strong>Access Violation</strong>. Что же, лучше поздно чем никогда. Дело в том, что эта функция рассчитана на то, чтобы быть использованной совместно <strong>GetFileVersionInfo</strong>. Возможно, <strong>VerQueryValue</strong> может в каких-то случаях модифицировать ресурс. В общем, фикс заключается в том, что нужно выделить участок памяти (например, с помощью <strong>LocalAlloc</strong>), скопировать в него информацию о версии из ресурса (<strong>CopyMemory</strong>), и использовать его при вызове <strong>VerQueryValue</strong>. Реализация приведена ниже.  </p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">ReadVersion</span><span class=\"params\">(_TCHAR * szVer, <span class=\"type\">int</span> cbVer, <span class=\"type\">const</span> _TCHAR * szEntry)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    _tcscpy(szVer, _T(<span class=\"string\">&quot;\\n&quot;</span>));</span><br><span class=\"line\">    HRSRC hVersion = <span class=\"built_in\">FindResource</span>(</span><br><span class=\"line\">        <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">        <span class=\"built_in\">MAKEINTRESOURCE</span>(VS_VERSION_INFO),</span><br><span class=\"line\">        RT_VERSION);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (hVersion)  </span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        DWORD dwSize = <span class=\"built_in\">SizeofResource</span>(<span class=\"literal\">NULL</span>, hVersion);</span><br><span class=\"line\">        HGLOBAL hGlobal = <span class=\"built_in\">LoadResource</span>(<span class=\"literal\">NULL</span>, hVersion);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (hGlobal != <span class=\"literal\">NULL</span>)  </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            LPVOID versionInfoGlobal  = <span class=\"built_in\">LockResource</span>(hGlobal);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (versionInfoGlobal != <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                LPVOID versionInfoLocal = <span class=\"built_in\">LocalAlloc</span>(LMEM_FIXED, dwSize);</span><br><span class=\"line\">                <span class=\"built_in\">CopyMemory</span>(versionInfoLocal, versionInfoGlobal, dwSize);</span><br><span class=\"line\"> </span><br><span class=\"line\">                DWORD vLen, langD;</span><br><span class=\"line\">                BOOL retVal;</span><br><span class=\"line\"> </span><br><span class=\"line\">                LPVOID retbuf = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">ifdef</span> _UNICODE</span></span><br><span class=\"line\">                <span class=\"type\">const</span> _TCHAR * entry = szEntry;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">else</span>                    </span></span><br><span class=\"line\">                WCHAR entry[<span class=\"number\">64</span>]; <span class=\"comment\">//I assume here that length of szEntry string is less than 64</span></span><br><span class=\"line\">                <span class=\"built_in\">MultiByteToWideChar</span>(CP_ACP, <span class=\"number\">0</span>, szEntry, <span class=\"number\">-1</span>, entry, <span class=\"number\">64</span>);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br><span class=\"line\"> </span><br><span class=\"line\">                WCHAR fileEntry[<span class=\"number\">1024</span>];</span><br><span class=\"line\"> </span><br><span class=\"line\">                _swprintf(fileEntry, <span class=\"string\">L&quot;\\\\VarFileInfo\\\\Translation&quot;</span>);</span><br><span class=\"line\">                retVal = <span class=\"built_in\">VerQueryValueW</span>(versionInfoLocal, fileEntry, &amp;retbuf, (UINT*)&amp;vLen);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (retVal &amp;&amp; vLen == <span class=\"number\">4</span>)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"built_in\">memcpy</span>(&amp;langD, retbuf, <span class=\"number\">4</span>);            </span><br><span class=\"line\">                    _swprintf(fileEntry, <span class=\"string\">L&quot;\\\\StringFileInfo\\\\%02X%02X%02X%02X\\\\%s&quot;</span>,</span><br><span class=\"line\">                            (langD &amp; <span class=\"number\">0xff00</span>)&gt;&gt;<span class=\"number\">8</span>,langD &amp; <span class=\"number\">0xff</span>,(langD &amp; <span class=\"number\">0xff000000</span>)&gt;&gt;<span class=\"number\">24</span>,</span><br><span class=\"line\">                            (langD &amp; <span class=\"number\">0xff0000</span>)&gt;&gt;<span class=\"number\">16</span>, entry);            </span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span></span><br><span class=\"line\">                    _swprintf(fileEntry, <span class=\"string\">L&quot;\\\\StringFileInfo\\\\%04X04B0\\\\%s&quot;</span>,</span><br><span class=\"line\">                    <span class=\"built_in\">GetUserDefaultLangID</span>(), entry);</span><br><span class=\"line\"> </span><br><span class=\"line\">                retVal = <span class=\"built_in\">VerQueryValueW</span>(versionInfoLocal, fileEntry, &amp;retbuf, (UINT*)&amp;vLen);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (retVal)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">ifdef</span> _UNICODE</span></span><br><span class=\"line\">                    _sntprintf(szVer, cbVer<span class=\"number\">-1</span>, _T(<span class=\"string\">&quot; %s\\n&quot;</span>), (_TCHAR*)retbuf);</span><br><span class=\"line\">                    szVer[cbVer<span class=\"number\">-1</span>] = <span class=\"string\">&#x27;\\0&#x27;</span>;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">else</span></span></span><br><span class=\"line\">                    szVer[<span class=\"number\">0</span>] = <span class=\"string\">&#x27;\\0&#x27;</span>;</span><br><span class=\"line\">                    <span class=\"type\">int</span> n = <span class=\"built_in\">WideCharToMultiByte</span>(CP_ACP, <span class=\"number\">0</span>, (LPWSTR)retbuf, <span class=\"number\">-1</span>, szVer+<span class=\"number\">1</span>, cbVer<span class=\"number\">-2</span>, <span class=\"literal\">NULL</span>, <span class=\"literal\">NULL</span>);</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (n &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        szVer[<span class=\"number\">0</span>] = <span class=\"string\">&#x27; &#x27;</span>;</span><br><span class=\"line\">                        szVer[n] = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">                        szVer[n+<span class=\"number\">1</span>] = <span class=\"string\">&#x27;\\0&#x27;</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">                <span class=\"built_in\">LocalFree</span>(versionInfoLocal);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"built_in\">FreeResource</span>(hGlobal);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["Access Violation","Unhandled Exception","VerQueryValue"]},{"title":"GitHub and TortoieseGit: error code 128 git did not exit cleanly","url":"/2012/09/github-and-tortoiesegit-error-code-128/","content":"<p>У меня 2 аккаунта на GitHub. И несколько разных репозиториев для разных проектов - некторые должны заливаться на GitHub под первым аккаунтом, другие - под вторым. Я использую Git-клиент TortoiseGit. И столкнулся со странной проблемой - под первым аккаунтом все хорошо работает, а под вторым Push обламывается в формулировкой “error code 128 git did not exit cleanly”. Оказалось, что иногда для второго аккаунта используется ssh-key от первого. Лечится проблема удалением ключей (Remove Key) из Pagent (PuTTY authentication client).  </p>\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["github","TortoiseGit"]},{"title":"SSL HTTP сервер на Indy 9 (Delphi 7)","url":"/2012/09/ssl-http-indy-9-delphi-7/","content":"<p>HTTP-сервер в Indy 9 представлен компонентом TIdHTTPServer. Чтобы включить использование SSL (HTTPS), нужно у объекта TIdHTTPServer свойство IOHandler связать с объектом типа TIdServerIOHandlerSSL, в котором в поле CertFile прописать путь к файлу сертификата, а в KeyFile - путь к файлу с приватным ключом.  </p>\n<p><a href=\"http://2.bp.blogspot.com/-giFXHJjXMfc/UE8c5RN7dAI/AAAAAAAAADQ/vCFDgcKrFPo/s1600/IOHandlerSSL.png\"><img src=\"http://2.bp.blogspot.com/-giFXHJjXMfc/UE8c5RN7dAI/AAAAAAAAADQ/vCFDgcKrFPo/s320/IOHandlerSSL.png\"></a></p>\n<p>Файл сертификата имеет примерно такое содержимое:  </p>\n<p><a href=\"http://2.bp.blogspot.com/--QJ4rap20is/UE8eSkHvuuI/AAAAAAAAADY/JfrmAOeZHKs/s1600/ca-crt.png\"><img src=\"http://2.bp.blogspot.com/--QJ4rap20is/UE8eSkHvuuI/AAAAAAAAADY/JfrmAOeZHKs/s1600/ca-crt.png\"></a></p>\n<p>Файл с приватным ключом выглядит примерно так:  </p>\n<p><a href=\"http://4.bp.blogspot.com/-_4OUp9XMBDU/UE8eeBSC8NI/AAAAAAAAADg/m61816ywovY/s1600/ca-key.png\"><img src=\"http://4.bp.blogspot.com/-_4OUp9XMBDU/UE8eeBSC8NI/AAAAAAAAADg/m61816ywovY/s1600/ca-key.png\"></a></p>\n<p>Но что делать, если необходимо, чтобы сертификат и ключ были “вшиты” в приложение? Я использую следующую технику - после загрузки и инициализации библиотеки ssleay32.dll подменяю указатели на функции IdSslCtxUseCertificateFile и IdSslCtxUsePrivateKeyFile (они объявлены в IdSSLOpenSSLHeaders) на мои реализации этих функций, которые читают сертификат и ключ не из файлов, а из памяти.  </p>\n<figure class=\"highlight pascal\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">unit</span> uOpenSSL;</span><br><span class=\"line\"><span class=\"comment\">(*</span></span><br><span class=\"line\"><span class=\"comment\">Copyright 2012 Coolsoftware. http://blog.coolsoftware.ru/</span></span><br><span class=\"line\"><span class=\"comment\">You can freely use this code for your needs.</span></span><br><span class=\"line\"><span class=\"comment\">Please, don&#x27;t remove this copyright.</span></span><br><span class=\"line\"><span class=\"comment\">*)</span></span><br><span class=\"line\"><span class=\"keyword\">interface</span></span><br><span class=\"line\"><span class=\"keyword\">uses</span> Windows, SysUtils, IdSSLOpenSSL, IdSSLOpenSSLHeaders;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">MySslCtxUsePrivateKeyFile</span><span class=\"params\">(ctx: PSSL_CTX; <span class=\"keyword\">const</span> _file: PChar; _type: Integer)</span>:</span> Integer <span class=\"keyword\">cdecl</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">MySslCtxUseCertificateFile</span><span class=\"params\">(ctx: PSSL_CTX; <span class=\"keyword\">const</span> _file: PChar; _type: Integer)</span>:</span> Integer <span class=\"keyword\">cdecl</span>;</span><br><span class=\"line\"><span class=\"keyword\">type</span></span><br><span class=\"line\">  PBIO            = Pointer;</span><br><span class=\"line\">  PPBIO           =^PBIO;</span><br><span class=\"line\">  PBIO_METHOD     = Pointer;</span><br><span class=\"line\">  PRSA         = Pointer;</span><br><span class=\"line\"><span class=\"keyword\">var</span></span><br><span class=\"line\">  MySslCtxUsePrivateKey : <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(ctx: PSSL_CTX; pkey: PEVP_PKEY)</span>:</span> </span><br><span class=\"line\">    Integer <span class=\"keyword\">cdecl</span> = <span class=\"keyword\">nil</span>;</span><br><span class=\"line\">  MySslCtxUseCertificate : <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(ctx: PSSL_CTX; x: PX509)</span>:</span> </span><br><span class=\"line\">    Integer <span class=\"keyword\">cdecl</span> = <span class=\"keyword\">nil</span>;</span><br><span class=\"line\">  EVP_PKEY_new : <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span>:</span> PEVP_PKEY <span class=\"keyword\">cdecl</span> = <span class=\"keyword\">nil</span>;</span><br><span class=\"line\">  EVP_PKEY_free : <span class=\"function\"><span class=\"keyword\">procedure</span><span class=\"params\">(pkey: PEVP_PKEY)</span> <span class=\"title\">cdecl</span> = <span class=\"title\">nil</span>;</span></span><br><span class=\"line\">  EVP_PKEY_set1_RSA : <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(pkey: PEVP_PKEY; key: PRSA)</span> :</span> </span><br><span class=\"line\">    Integer <span class=\"keyword\">cdecl</span> = <span class=\"keyword\">nil</span>;</span><br><span class=\"line\">  BIO_s_mem : <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">()</span> :</span> PBIO_METHOD <span class=\"keyword\">cdecl</span> = <span class=\"keyword\">nil</span>;</span><br><span class=\"line\">  BIO_new : <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(t: PBIO_METHOD)</span>:</span> PBIO <span class=\"keyword\">cdecl</span> = <span class=\"keyword\">nil</span>;</span><br><span class=\"line\">  BIO_free : <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(a: PBIO)</span>:</span> Integer <span class=\"keyword\">cdecl</span> = <span class=\"keyword\">nil</span>;</span><br><span class=\"line\"> BIO_puts : <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(bp: PBIO; buf: PChar)</span>:</span> Integer <span class=\"keyword\">cdecl</span> = <span class=\"keyword\">nil</span>;</span><br><span class=\"line\">  RSA_new: <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">()</span>:</span> pRSA; <span class=\"keyword\">cdecl</span> = <span class=\"keyword\">nil</span>;</span><br><span class=\"line\">  RSA_free: <span class=\"function\"><span class=\"keyword\">procedure</span> <span class=\"params\">(r: pRSA)</span>;</span> <span class=\"keyword\">cdecl</span> = <span class=\"keyword\">nil</span>;</span><br><span class=\"line\">  RSA_public_encrypt: <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">(flen: integer; from: PChar; _to: PChar;</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">    rsa: pRSA; padding: integer)</span>:</span> integer; <span class=\"keyword\">cdecl</span> = <span class=\"keyword\">nil</span>;</span><br><span class=\"line\">  RSA_public_decrypt: <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">(flen: integer; from: PChar; _to: PChar;</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">    rsa: pRSA; padding: integer)</span>:</span> integer; <span class=\"keyword\">cdecl</span>;</span><br><span class=\"line\">  d2i_RSAPrivateKey : <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(a: Pointer; pp: Pointer; length: Integer)</span>:</span> </span><br><span class=\"line\">    PRSA <span class=\"keyword\">cdecl</span> = <span class=\"keyword\">nil</span>;</span><br><span class=\"line\">  PEM_ASN1_read_bio : <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(d2: Pointer; <span class=\"keyword\">name</span>: PChar; bp: PBIO; x: Pointer;</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">    cb: Pointer; u: Pointer)</span>:</span> PChar <span class=\"keyword\">cdecl</span> = <span class=\"keyword\">nil</span>;</span><br><span class=\"line\">  PEM_read_bio_X509 : <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(bp: PBIO; x: Pointer; cb: Pointer; u: Pointer)</span>:</span> </span><br><span class=\"line\">    PX509 <span class=\"keyword\">cdecl</span> = <span class=\"keyword\">nil</span>;</span><br><span class=\"line\">  PEM_read_bio_RSAPublicKey: <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">(bp: pBIO; x: pRSA;</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">    cb: Pointer; u: pointer)</span>:</span> pRSA; <span class=\"keyword\">cdecl</span> = <span class=\"keyword\">nil</span>;</span><br><span class=\"line\"><span class=\"keyword\">implementation</span></span><br><span class=\"line\"><span class=\"keyword\">uses</span> SyncObjs;</span><br><span class=\"line\"><span class=\"keyword\">const</span></span><br><span class=\"line\">  SSL_DLL_name       = <span class=\"string\">&#x27;ssleay32.dll&#x27;</span>;  <span class=\"comment\">&#123;Do not localize&#125;</span></span><br><span class=\"line\">  SSLCLIB_DLL_name   = <span class=\"string\">&#x27;libeay32.dll&#x27;</span>;  <span class=\"comment\">&#123;Do not localize&#125;</span></span><br><span class=\"line\"><span class=\"keyword\">var</span></span><br><span class=\"line\">  hIdSSL    : Integer = <span class=\"number\">0</span>;</span><br><span class=\"line\">  hIdCrypto : Integer = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">LoadFunction</span><span class=\"params\">(FceName:<span class=\"keyword\">String</span>)</span>:</span>Pointer;</span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\">  FceName := FceName+<span class=\"string\">#0</span>;</span><br><span class=\"line\">  Result := GetProcAddress(hIdSSL, @FceName[<span class=\"number\">1</span>]);</span><br><span class=\"line\"><span class=\"comment\">//  if (Result = nil) then ShowMessage(&#x27;Error loading: &#x27; + FceName);  &#123;Do not localize&#125;</span></span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">LoadFunctionCLib</span><span class=\"params\">(FceName:<span class=\"keyword\">String</span>)</span>:</span>Pointer;</span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\">  FceName := FceName+<span class=\"string\">#0</span>;</span><br><span class=\"line\">  Result := GetProcAddress(hIdCrypto, @FceName[<span class=\"number\">1</span>]);</span><br><span class=\"line\"><span class=\"comment\">//  if (Result = nil) then ShowMessage(&#x27;Error loading: &#x27; + FceName);  &#123;Do not localize&#125;</span></span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span></span><br><span class=\"line\">  fn_SSL_CTX_use_RSAPrivateKey = <span class=\"string\">&#x27;SSL_CTX_use_RSAPrivateKey&#x27;</span>;  <span class=\"comment\">&#123;Do not localize&#125;</span></span><br><span class=\"line\">  fn_SSL_CTX_use_PrivateKey = <span class=\"string\">&#x27;SSL_CTX_use_PrivateKey&#x27;</span>;  <span class=\"comment\">&#123;Do not localize&#125;</span></span><br><span class=\"line\">  fn_SSL_CTX_use_certificate = <span class=\"string\">&#x27;SSL_CTX_use_certificate&#x27;</span>;  <span class=\"comment\">&#123;Do not localize&#125;</span></span><br><span class=\"line\">  fn_EVP_PKEY_new = <span class=\"string\">&#x27;EVP_PKEY_new&#x27;</span>;  <span class=\"comment\">&#123;Do not localize&#125;</span></span><br><span class=\"line\">  fn_EVP_PKEY_free = <span class=\"string\">&#x27;EVP_PKEY_free&#x27;</span>;  <span class=\"comment\">&#123;Do not localize&#125;</span></span><br><span class=\"line\">  fn_EVP_PKEY_set1_RSA = <span class=\"string\">&#x27;EVP_PKEY_set1_RSA&#x27;</span>;</span><br><span class=\"line\">  fn_BIO_s_mem = <span class=\"string\">&#x27;BIO_s_mem&#x27;</span>;  <span class=\"comment\">&#123;Do not localize&#125;</span></span><br><span class=\"line\">  fn_BIO_new = <span class=\"string\">&#x27;BIO_new&#x27;</span>;  <span class=\"comment\">&#123;Do not localize&#125;</span></span><br><span class=\"line\">  fn_BIO_free = <span class=\"string\">&#x27;BIO_free&#x27;</span>;  <span class=\"comment\">&#123;Do not localize&#125;</span></span><br><span class=\"line\">  fn_BIO_puts = <span class=\"string\">&#x27;BIO_puts&#x27;</span>;  <span class=\"comment\">&#123;Do not localize&#125;</span></span><br><span class=\"line\">  fn_RSA_new = <span class=\"string\">&#x27;RSA_new&#x27;</span>;  <span class=\"comment\">&#123;Do not localize&#125;</span></span><br><span class=\"line\">  fn_RSA_free = <span class=\"string\">&#x27;RSA_free&#x27;</span>;  <span class=\"comment\">&#123;Do not localize&#125;</span></span><br><span class=\"line\">  fn_RSA_public_encrypt = <span class=\"string\">&#x27;RSA_public_encrypt&#x27;</span>;  <span class=\"comment\">&#123;Do not localize&#125;</span></span><br><span class=\"line\">  fn_RSA_public_decrypt = <span class=\"string\">&#x27;RSA_public_decrypt&#x27;</span>;  <span class=\"comment\">&#123;Do not localize&#125;</span></span><br><span class=\"line\">  fn_d2i_RSAPrivateKey = <span class=\"string\">&#x27;d2i_RSAPrivateKey&#x27;</span>;  <span class=\"comment\">&#123;Do not localize&#125;</span></span><br><span class=\"line\">  fn_PEM_ASN1_read_bio = <span class=\"string\">&#x27;PEM_ASN1_read_bio&#x27;</span>;  <span class=\"comment\">&#123;Do not localize&#125;</span></span><br><span class=\"line\">  fn_PEM_read_bio_X509 = <span class=\"string\">&#x27;PEM_read_bio_X509&#x27;</span>;  <span class=\"comment\">&#123;Do not localize&#125;</span></span><br><span class=\"line\">  fn_PEM_read_bio_RSAPublicKey = <span class=\"string\">&#x27;PEM_read_bio_RSAPublicKey&#x27;</span>;  <span class=\"comment\">&#123;Do not localize&#125;</span></span><br><span class=\"line\"><span class=\"keyword\">var</span></span><br><span class=\"line\">  c_PrivateKeyPassword: PChar = <span class=\"string\">&#x27;put the password of your private key here&#x27;</span>;</span><br><span class=\"line\">  c_PrivateKey: PChar = <span class=\"string\">&#x27;put your private key here&#x27;</span>;</span><br><span class=\"line\">  c_Certificate: PChar = <span class=\"string\">&#x27;put your certificate here&#x27;</span>;</span><br><span class=\"line\">  LockPassCB: TCriticalSection;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">MyPasswordCallback</span><span class=\"params\">(buf:PChar; size:Integer; rwflag:Integer; </span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">  userdata: Pointer)</span>:</span>Integer; <span class=\"keyword\">cdecl</span>;</span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\">  LockPassCB.Acquire;</span><br><span class=\"line\">  <span class=\"keyword\">try</span></span><br><span class=\"line\">    size := StrLen(c_PrivateKeyPassword);</span><br><span class=\"line\">    StrCopy(buf, c_PrivateKeyPassword);</span><br><span class=\"line\">    Result := size;</span><br><span class=\"line\">  <span class=\"keyword\">finally</span></span><br><span class=\"line\">    LockPassCB.Release;</span><br><span class=\"line\">  <span class=\"keyword\">end</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">MySslCtxUsePrivateKeyFile</span><span class=\"params\">(ctx: PSSL_CTX; <span class=\"keyword\">const</span> _file: PChar; </span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">  _type: Integer)</span>:</span>Integer <span class=\"keyword\">cdecl</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span></span><br><span class=\"line\">  pk: PEVP_PKEY;</span><br><span class=\"line\">  rsakey: PRSA;</span><br><span class=\"line\">  pMemBIO: PBIO;</span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\">    pk := EVP_PKEY_new();</span><br><span class=\"line\">    <span class=\"keyword\">try</span></span><br><span class=\"line\">      pMemBIO := BIO_new(BIO_s_mem());</span><br><span class=\"line\">      <span class=\"keyword\">try</span></span><br><span class=\"line\">        BIO_puts(pMemBIO, c_PrivateKey);</span><br><span class=\"line\">        rsakey := PEM_ASN1_read_bio(</span><br><span class=\"line\">          @d2i_RSAPrivateKey, OPENSSL_PEM_STRING_RSA, pMemBIO, <span class=\"keyword\">nil</span>,</span><br><span class=\"line\">          @MyPasswordCallback, <span class=\"keyword\">nil</span>);</span><br><span class=\"line\">      <span class=\"keyword\">finally</span></span><br><span class=\"line\">        BIO_free(pMemBIO);</span><br><span class=\"line\">      <span class=\"keyword\">end</span>;</span><br><span class=\"line\">      EVP_PKEY_set1_RSA(pk, rsakey);</span><br><span class=\"line\">      Result := MySslCtxUsePrivateKey(ctx, pk);</span><br><span class=\"line\">    <span class=\"keyword\">finally</span></span><br><span class=\"line\">      EVP_PKEY_free(pk);</span><br><span class=\"line\">    <span class=\"keyword\">end</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">MySslCtxUseCertificateFile</span><span class=\"params\">(ctx: PSSL_CTX; <span class=\"keyword\">const</span> _file: PChar; </span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">  _type: Integer)</span>:</span>Integer <span class=\"keyword\">cdecl</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span></span><br><span class=\"line\">  pCert: PX509;</span><br><span class=\"line\">  pMemBIO: PBIO;</span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\">    pMemBIO := BIO_new(BIO_s_mem());</span><br><span class=\"line\">    <span class=\"keyword\">try</span></span><br><span class=\"line\">      BIO_puts(pMemBIO, c_Certificate);</span><br><span class=\"line\">      pCert := PEM_read_bio_X509(pMemBIO, <span class=\"keyword\">nil</span>,</span><br><span class=\"line\">        @MyPasswordCallback, <span class=\"keyword\">nil</span>);</span><br><span class=\"line\">    <span class=\"keyword\">finally</span></span><br><span class=\"line\">      BIO_free(pMemBIO);</span><br><span class=\"line\">    <span class=\"keyword\">end</span>;</span><br><span class=\"line\">    Result := MySslCtxUseCertificate(ctx, pCert);</span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span></span><br><span class=\"line\">  ctx: TIdSSLContext;</span><br><span class=\"line\"><span class=\"keyword\">initialization</span></span><br><span class=\"line\">  LockPassCB := TCriticalSection.Create;</span><br><span class=\"line\">    </span><br><span class=\"line\">  <span class=\"comment\">//this will load the SSL library</span></span><br><span class=\"line\">  ctx := TIdSSLContext.Create;</span><br><span class=\"line\">  <span class=\"keyword\">try</span></span><br><span class=\"line\">    hIdCrypto := GetModuleHandle(SSLCLIB_DLL_name);</span><br><span class=\"line\">    hIdSSL := GetModuleHandle(SSL_DLL_name);</span><br><span class=\"line\">    @MySslCtxUsePrivateKey := LoadFunction(fn_SSL_CTX_use_PrivateKey);</span><br><span class=\"line\">    @MySslCtxUseCertificate := LoadFunction(fn_SSL_CTX_use_certificate);</span><br><span class=\"line\">    @EVP_PKEY_new := LoadFunctionCLib(fn_EVP_PKEY_new);</span><br><span class=\"line\">    @EVP_PKEY_free := LoadFunctionCLib(fn_EVP_PKEY_free);</span><br><span class=\"line\">    @EVP_PKEY_set1_RSA := LoadFunctionCLib(fn_EVP_PKEY_set1_RSA);</span><br><span class=\"line\">    @BIO_s_mem := LoadFunctionCLib(fn_BIO_s_mem);</span><br><span class=\"line\">    @BIO_new := LoadFunctionCLib(fn_BIO_new);</span><br><span class=\"line\">    @BIO_free := LoadFunctionCLib(fn_BIO_free);</span><br><span class=\"line\">    @BIO_puts := LoadFunctionCLib(fn_BIO_puts);</span><br><span class=\"line\">    @RSA_new := LoadFunctionCLib(fn_RSA_new);</span><br><span class=\"line\">    @RSA_free := LoadFunctionCLib(fn_RSA_free);</span><br><span class=\"line\">    @RSA_public_encrypt := LoadFunctionCLib(fn_RSA_public_encrypt);</span><br><span class=\"line\">    @RSA_public_decrypt := LoadFunctionCLib(fn_RSA_public_decrypt);</span><br><span class=\"line\">    @d2i_RSAPrivateKey := LoadFunctionCLib(fn_d2i_RSAPrivateKey);</span><br><span class=\"line\">    @PEM_ASN1_read_bio := LoadFunctionCLib(fn_PEM_ASN1_read_bio);</span><br><span class=\"line\">    @PEM_read_bio_X509 := LoadFunctionCLib(fn_PEM_read_bio_X509);</span><br><span class=\"line\">    @PEM_read_bio_RSAPublicKey := LoadFunctionCLib(fn_PEM_read_bio_RSAPublicKey);</span><br><span class=\"line\">    IdSslCtxUsePrivateKeyFile := MySslCtxUsePrivateKeyFile;</span><br><span class=\"line\">    IdSslCtxUseCertificateFile := MySslCtxUseCertificateFile;</span><br><span class=\"line\">  <span class=\"keyword\">finally</span></span><br><span class=\"line\">    ctx.Free;</span><br><span class=\"line\">  <span class=\"keyword\">end</span>;</span><br><span class=\"line\"><span class=\"keyword\">finalization</span></span><br><span class=\"line\">  LockPassCB.Free;</span><br><span class=\"line\"><span class=\"keyword\">end</span>.</span><br></pre></td></tr></table></figure>\n\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["delphi","indy","ssl","http","openssl"]},{"title":"Обновился VHashedStringList","url":"/2012/09/vhashedstringlist/","content":"<p>В <a href=\"https://github.com/coolsoftware/\">GitHub</a> я выложил обновленную версию VHashedStringList. Сделаны следующие добавления&#x2F;изменения:  </p>\n<ol>\n<li>Добавлено свойство OwnsObjects. Оно позволяет объекту TVHashedStringList контролировать выделение памяти для индексированных объектов - при удалении объекта из списка или при удалении самого списка автоматически освобождается память, отведенная под указанные объекты. (Это аналог одноименного свойства OwnsObjects у TObjectList).</li>\n<li>Добавлено свойство ValueObjects. Позволяет обращаться к объекту, хранящемуся в списке, по значению соответствующей ему строки.</li>\n<li>При удалении элемента списка hash-индекс остается корректным, т.е. не требуется его полное перестроение перед поиском элементов.</li>\n<li>Добавлено свойство AutoUpdateHash (по-умолчанию его значение &#x3D; True), которое позволяет на время отключать авто-обновление hash-индекса.</li>\n</ol>\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["delphi","github","VHashedStringList"]},{"title":"Web Service в Visual Studio 10 и клиент на Delphi 7","url":"/2012/09/web-service-visual-studio-10-delphi-7/","content":"<p><strong>Part 1.</strong> Веб-сервис (Web Service) в Visual Studio 10 называется “WCF Service Application”.</p>\n<p><a href=\"http://1.bp.blogspot.com/-4oPJpCebqNE/UFp18dRKiPI/AAAAAAAAADw/GO4s9VFllO4/s1600/WcfService1.png\"><img src=\"http://1.bp.blogspot.com/-4oPJpCebqNE/UFp18dRKiPI/AAAAAAAAADw/GO4s9VFllO4/s400/WcfService1.png\"></a></p>\n<div style=\"text-align: left;\">Сразу после создания нового сервиса он содержит класс Service1 (в файле Service1.svc.cs), реализующий интерфейс IService1 (в файле IService1.cs), в котором объявлены два публичных демонстрационных метода GetData и GetDataUsingDataContract и композитный тип данных CompositeType. Веб-сервис можно сразу запустить (Debug). В окне броузера появится следующее сообщение: \"Служба создана... необходимо создать клиент... Это можно сделать запустив программу svcutil.exe...\"</div>\n\n<p><a href=\"http://1.bp.blogspot.com/-P7RSCy35fcI/UFp5xKG0iDI/AAAAAAAAAEA/_Hk3CzFMIhc/s1600/Service1.png\"><img src=\"http://1.bp.blogspot.com/-P7RSCy35fcI/UFp5xKG0iDI/AAAAAAAAAEA/_Hk3CzFMIhc/s400/Service1.png\"></a></p>\n<div style=\"text-align: left;\">В результате запуска svcutil.exe будет создан файл Service1.cs, который нужно добавить в тестовый проект (я сделал консольное тестовое приложение TestApplication1). В References тестового проекта нужно добавить System.Runtime.Serialization и System.ServiceModel. Пример вызова веб-службы см. на рисунке выше. </div>\n\n<div style=\"text-align: left;\">Теперь немного про развертывание веб-службы на сервере IIS. Можно воспользоваться визардом (Publish), а можно сделать все \"ручками\":</div>\n\n<ol>\n<li>Установить <a href=\"http://www.microsoft.com/ru-ru/download/details.aspx?id=17851\">.Net Framework 4.0</a>, если он еще не установлен.</li>\n<li>Создать каталог на сайте, например C:\\inetpub\\wwwroot\\Service1.</li>\n<li>Скопировать туда Service1.svc файлы Service1.svc, Web.Config и папку bin с файлами WcfService1.dll и WcfService1.pdb.</li>\n<li>Дать права “Чтение, Чтение и выполнение” пользователю IIS (IUSR)  на каталог Service1 и все скопированные в него файлы&#x2F;подкаталоги.</li>\n<li>В диспетчере служб IIS в контекстном меню каталога Service1 выбрать “Преобразовать в приложение”. В диалоге “Добавление приложения” нажать кнопку “Выбрать…” справа от “Пул приложений”, выбрать пул приложений с версией среды .Net Framework соответствующей веб-сервису (ASP .NET v4.0), и нажать Ok. Каталог Service1 будет преобразован в приложение.</li>\n</ol>\n<p>Иногда сразу же приложение не хочет работать в IIS (как случилось и у меня) с формулировкой типа “HTTP Error 404.3 - Not Found The page you are requesting cannot be served because of the extension configuration. If the page is a script, add a handler. If the file should be downloaded, add a MIME map.” В таком случае помогает выполнение команды ServiceModelReg.exe -i. ServiceModelReg.exe находится в C:\\Windows\\Microsoft .NET\\Framework\\v4.0.30319. Там же находится aspnet_regiis.exe. Он помогает в том случае, если .Net 4 вдруг оказывается не зарегистрированным (см. картинку ниже) и по этой причине веб-сервис не запускается.  </p>\n<p><a href=\"http://1.bp.blogspot.com/-a1NscGcCKQg/UFqGZ5WDTvI/AAAAAAAAAEQ/elv-MdAGZHc/s1600/ISAPIFilters.png\"><img src=\"http://1.bp.blogspot.com/-a1NscGcCKQg/UFqGZ5WDTvI/AAAAAAAAAEQ/elv-MdAGZHc/s400/ISAPIFilters.png\"></a></p>\n<p><strong>Part 2.</strong> Создание клиента для веб-сервиса на Delphi 7.</p>\n<p>1. Сервис должен использовать привязку basicHttpBinding, а не wsHttpBinding. Регулируется это в Web.Config. Для его правки в Visual Studio 10 можно воспользоваться утилитой WCF Service Configuration Editor (можно выбрать пункт Edit WCF Configuration из контекстного меню для Web.Config).</p>\n<p><a href=\"http://2.bp.blogspot.com/-YhxB2NQ0m5s/UFqOG9KZbxI/AAAAAAAAAEg/iTPmEJ24fwo/s1600/basicHttpBinding.png\"><img src=\"http://2.bp.blogspot.com/-YhxB2NQ0m5s/UFqOG9KZbxI/AAAAAAAAAEg/iTPmEJ24fwo/s640/basicHttpBinding.png\"></a></p>\n<p>2. Необходимо обновить утилиту импорта WSDL. Взять ее можно здесь: <a href=\"http://cc.embarcadero.com/item/24535\">http://cc.embarcadero.com/item/24535</a>. Пользоваться ею просто, например так:</p>\n<p>    WSDLImp.exe -P <a href=\"http://localhost:2708/Service1.svc?wsdl\">http://localhost:2708/Service1.svc?wsdl</a></p>\n<p>В результате будет создан файл Service1.pas, который нужно подключить к проекту клиента в Delphi 7. Пользоваться очень просто:</p>\n<figure class=\"highlight pascal\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">uses</span> Service1.pas;</span><br><span class=\"line\"><span class=\"keyword\">var</span></span><br><span class=\"line\">  Client: IWcfService1;</span><br><span class=\"line\">  ws: WideString;</span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\">  Client := GetIWcfService1(True, <span class=\"string\">&#x27;http://localhost:2708/Service1.svc?wsdl&#x27;</span>);</span><br><span class=\"line\">  ws := Client.GetDate(<span class=\"number\">10</span>);</span><br><span class=\"line\">  MessageBoxW(<span class=\"number\">0</span>, PWideChar(ws), <span class=\"string\">&#x27;Result&#x27;</span>, MB_ICONINFORMATION);</span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br></pre></td></tr></table></figure>\n\n<p>3. <strong>Delphi 7 BUG</strong>. При попытке обратиться к веб-сервису из клиента, написанного на Delphi 7, может возникать Access Violation (см. картинку ниже). Возникает эта ошибка не везде. У меня на Windows 7 ее нет, а на Windows Server 2008 - проявилась.  </p>\n<p><a href=\"http://1.bp.blogspot.com/-TukRkHAbilI/UFrl7S0wluI/AAAAAAAAAEw/SzQU-3fDKYE/s1600/WSDL_AV.png\"><img src=\"http://1.bp.blogspot.com/-TukRkHAbilI/UFrl7S0wluI/AAAAAAAAAEw/SzQU-3fDKYE/s320/WSDL_AV.png\"></a></p>\n<p>Фикс для этой ошибки находится в том же архиве, что и новая утилита импорта WSDL (<a href=\"http://cc.embarcadero.com/item/24535\">http://cc.embarcadero.com/item/24535</a>). НО НЕ ТОРОПИТЕСЬ заменять ваши исходники SOAP на файлы из архива. Этот “патч” что-то лечит, а что-то калечит :-) У меня при его использовании перестали передаваться в веб-сервис строковые параметры вызова (в значениях параметров всегда содержался null). Для того, чтобы справиться с ошибкой Access Violation, нам необходимы только два файла из этого патча: PrivateHeap.pas и Rio.pas. Их (только их!) нужно добавить в Delphi-проект клиента веб-сервиса.  </p>\n<div style=\"text-align: left;\">===</div>\n\n<p>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["C#","delphi",".NET","WCF","Web Service","WSDL"]},{"title":"Твиттер","url":"/2012/10/blog-post/","content":"<p>Мой твиттер: <a href=\"https://twitter.com/vit_cs\">https://twitter.com/vit_cs</a>  </p>\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n"},{"title":"Быстрая загрузка данных в Sqlite - 2","url":"/2012/11/sqlite-2/","content":"<p>В <a href=\"http://blog.coolsoftware.ru/2011/11/sqlite.html\">предыдущем посте</a> на эту тему я не упомянул про важный фактор, который сильно влияет на производительность, -  это наличие у таблицы индекса. Индекс способен довольно существенно замедлить процедуру вставки, поэтому лучше если данные будут загружаться в таблицу без индексов. Но иногда, индекс необходим. Например, если мы хотим загрузить в таблицу только отсутствующие данные, то это делается с пом. SQL-конструкции REPLACE:<div dir=\"ltr\" style=\"text-align: left;\" trbidi=\"on\"></div></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">REPLACE <span class=\"keyword\">INTO</span> Table1 (FieldA) <span class=\"keyword\">VALUES</span> (:v)</span><br></pre></td></tr></table></figure>\n\n<p>При этом, использование REPLACE в примере выше предполагает, что построен уникальный индекс для поля FieldA.</p>\n<p><strong>Для того, чтобы загрузка в таблицу с индексом осуществлялась максимально быстро, необходимо, чтобы загружаемые данные были отсортированы по этому индексу.</strong></p>\n<p>Это нужно для того, чтобы минимизировать количество операций обращения к диску при поиске значения в индексе. Когда значения в индексе располагаются рядом, то эффективно работает буфер чтения. Выигрыш в скорости при вставке отсортированных данных по сравнению со вставкой неупорядоченных данных на больших объемах может оказаться в десятки раз.</p>\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["fast insert","sqlite","tuning","быстрая вставка"]},{"title":"Парсеры","url":"/2013/01/blog-post/","content":"<p>Связь событийного парсера, типа <a href=\"http://ru.wikipedia.org/wiki/SAX\">SAX-парсера</a>, с вызывающим приложением обычно осуществляется следующим образом: нужно создать экземпляр класса, реализующего Callback-интерфейс и сообщить о нем парсеру:  </p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MyCallback</span> : <span class=\"keyword\">public</span> Callback</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">virtual</span> <span class=\"type\">void</span> <span class=\"title\">doc_start</span><span class=\"params\">()</span> </span>&#123; <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Start of document&quot;</span>); &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">virtual</span> <span class=\"type\">void</span> <span class=\"title\">doc_end</span><span class=\"params\">()</span> </span>&#123; <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;End of document&quot;</span>); &#125;</span><br><span class=\"line\">    <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">MyCallback obj;</span><br><span class=\"line\">Parser parser;</span><br><span class=\"line\">parser.<span class=\"built_in\">parse</span>(<span class=\"string\">&quot;c:\\\\test.xml&quot;</span>, &amp;obj);</span><br></pre></td></tr></table></figure>\n\n<p><span class=\"co1\"></span>  </p>\n<p><span class=\"co1\">Вся “сила” событийного SAX-парсера заключается в том, что нет необходимости держать в памяти весь XML-документ (или его DOM-модель).</span></p>\n<p><span class=\"co1\"></span>  </p>\n<p><span class=\"co1\">А как может выглядеть парсер, который бы также не требовал загрузки всего документа в память, на не-объектно ориентированном языке программирования, например, на C ? Оказывается это может выглядеть достаточно просто и элегантно:</span>  </p>\n<div style=\"color: black; font-family: 'Times New Roman'; font-size: medium; line-height: normal; white-space: normal;\"></div>\n\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">ParseStatus</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> currentPos; <span class=\"comment\">//current position in file</span></span><br><span class=\"line\">    <span class=\"type\">int</span> tagName[MAX_TAG_NAME_SIZE]; <span class=\"comment\">//current tag name</span></span><br><span class=\"line\">    <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">ParseStatus status;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"built_in\">parse_begin</span>(<span class=\"string\">&quot;c:\\\\test.xml&quot;</span>, &amp;status))</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (<span class=\"built_in\">parse_next_tag</span>(&amp;status))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Next tag: %s&quot;</span>, status.tagName);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<div style=\"color: black; font-family: 'Times New Roman'; font-size: medium; line-height: normal; white-space: normal;\"></div>\n\n<p>=&#x3D;&#x3D;</p>\n<p>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["SAX","парсер"]},{"title":"C++: конструкторы и виртуальные функции","url":"/2013/03/c/","content":"<p>Как говорится, век - живи, век учись.  </p>\n<p>Захотелось мне вынести инициализацию данных класса в виртуальную функцию init(), с тем, чтобы классы-наследники могли переопределить ее и добавить в инициализацию что-то своё. Примерно так:  </p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">C1</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">protected</span>:</span><br><span class=\"line\">    <span class=\"type\">int</span> m_count;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">virtual</span> <span class=\"type\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span> </span>&#123; m_count = <span class=\"number\">1</span>; &#125;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"built_in\">C1</span>() &#123; <span class=\"built_in\">init</span>(); &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"type\">int</span> <span class=\"title\">count</span><span class=\"params\">()</span> <span class=\"type\">const</span> </span>&#123; <span class=\"keyword\">return</span> m_count; &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">C2</span>: <span class=\"keyword\">public</span> C1</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">protected</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">virtual</span> <span class=\"type\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span> </span>&#123; C1::<span class=\"built_in\">init</span>(); m_count = m_count+<span class=\"number\">1</span>; &#125;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"built_in\">C2</span>() : <span class=\"built_in\">C1</span>() &#123;&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"type\">int</span> _tmain(<span class=\"type\">int</span> argc, _TCHAR* argv[])</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    C1 c1;</span><br><span class=\"line\">    _tprintf(_T(<span class=\"string\">&quot;C1 count: %i\\n&quot;</span>), c1.<span class=\"built_in\">count</span>());</span><br><span class=\"line\">    C2 c2;</span><br><span class=\"line\">    _tprintf(_T(<span class=\"string\">&quot;C2 count: %i\\n&quot;</span>), c2.<span class=\"built_in\">count</span>());</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>Результат получается такой:  </p>\n<p>C1 count: 1<br>C2 count: 1  </p>\n<p>Опа! Оказывается переопределенная в классе C2 функция init() не вызывается. Получается, что если вызвать из конструктора класса виртуальную функцию этого же класса, то обычный метод вызова виртуальных функций через vtable задействован не будет - функция будет вызвана как если бы они была не-виртуальной. По-моему такое поведение не выглядит логичным, поэтому от вызова виртуальных функций из конструктора лучше отказаться.  </p>\n<p>PS. Из деструктора вызывать виртуальные функции тоже не следует.  </p>\n<p>По поводу того, что при вызове виртуальных функций из конструктора (и деструктора) не используется vtable, - тут я, похоже, был не прав. vtable используется, только в конструкторе класса C1 (см. пример) используется vtable класса C1, а не класса-потомка C2 - вот в чем дело. Аналогично, в деструкторе C1 также используется vtable класса С1.  </p>\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["cpp","виртуальная функция","конструктор"]},{"title":"C++: обработка исключений","url":"/2013/03/c_24/","content":"<p>В C++ под Windows есть два способа обработки исключений - традиционный для C++ с пом. try&#x2F;catch и т.н. <a href=\"http://ru.wikipedia.org/wiki/%D0%A1%D1%82%D1%80%D1%83%D0%BA%D1%82%D1%83%D1%80%D0%BD%D0%B0%D1%8F_%D0%BE%D0%B1%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%BA%D0%B0_%D0%B8%D1%81%D0%BA%D0%BB%D1%8E%D1%87%D0%B5%D0%BD%D0%B8%D0%B9\">структурная обработка исключений</a> или SEH. Основная разница между ними в том, что с помощью try&#x2F;catch можно реализовывать для разных типов исключений C++ различную реакцию (поведение), а структурная обработка  исключений способна отловить ситуации, которые с пом. catch не ловятся, например, Divide By Zero или Access Violation. SEH - это механизм, предоставляемый операционной системой и на самом деле try&#x2F;catch реализуется также через него.  </p>\n<p>Одновременно в одной и той же процедуре использовать оба метода обработки исключений (try&#x2F;catch и SEH) нельзя. Но можно использовать в одной процедуре try&#x2F;cath, а в другой SEH.  </p>\n<p>Оба метода обработки исключений не идеальны и имеют свои достоинства и недостатки.  </p>\n<p>Основной недостаток try&#x2F;catch заключается в том, что он не позволяет отловить и обработать все ошибки, а также не показывает место возникновения ошибки. Впрочем, в книжке Джеффри Рихтера (Windows для профессионалов. Создание эффективных Win32-пpилoжeний с учетом специфики 64-разрядной версии Windows) приводится способ перехвата структурных исключений:  </p>\n<p>1. Нужно создать класс CSE для идентификации структурного исключения:  </p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;eh.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdexcept&gt;</span></span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">CSE</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">static</span> <span class=\"type\">void</span> <span class=\"title\">MapSEToCE</span><span class=\"params\">()</span></span>&#123; _set_se_translator(TranslateSEToCE); &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">operator</span> <span class=\"title\">DWORD</span><span class=\"params\">()</span> </span>&#123; <span class=\"keyword\">return</span> (m_er.ExceptionCode);&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">    <span class=\"built_in\">CSE</span>(PEXCEPTION_POINTERS pep)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        m_er = *pep-&gt;ExceptionRecord;</span><br><span class=\"line\">        m_context = *pep-&gt;ContextRecord;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (m_er.ExceptionCode == <span class=\"number\">0xe06d7363</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;C++ Exception: Code 0x%x, Address 0x%x\\n&quot;</span>, m_er.ExceptionCode, m_er.ExceptionAddress);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;SEH Exception: Code 0x%x, Address 0x%x\\n&quot;</span>, m_er.ExceptionCode, m_er.ExceptionAddress);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">static</span> <span class=\"type\">void</span> _cdecl <span class=\"title\">TranslateSEToCE</span><span class=\"params\">(UINT deEC,PEXCEPTION_POINTERS pep)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"built_in\">CSE</span>(pep);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">    EXCEPTION_RECORD m_er;</span><br><span class=\"line\">    CONTEXT m_context;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>2. Для каждого потока надо вызвать один раз CSE::MapSEToCE(), после чего можно обрабатывать структурные исключения как обычные исключения C++:  </p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">DivideByZero</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> x = <span class=\"number\">100</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> y = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> x / y;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">ThrowException</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">throw</span> std::<span class=\"built_in\">out_of_range</span>(<span class=\"string\">&quot;out_of_range&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">TestCSE</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\"> </span><br><span class=\"line\">    CSE::<span class=\"built_in\">MapSEToCE</span>();</span><br><span class=\"line\">    <span class=\"keyword\">try</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"comment\">//DivideByZero();</span></span><br><span class=\"line\">        <span class=\"built_in\">ThrowException</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">catch</span> (CSE se)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">switch</span>(se)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> EXCEPTION_INT_DIVIDE_BY_ZERO:</span><br><span class=\"line\">                <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Divide by zero!\\n&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">catch</span> (std::exception &amp; e)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;std::exception: %s\\n&quot;</span>, e.<span class=\"built_in\">what</span>());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>3. Компилировать нужно с опцией &#x2F;EHa. В противном случае _set_se_translator не сработает и исключения SEH с помощью catch (…) отлавливаться не будут, а компилятор (Visual Studio 2010) выдаст следующее предупреждение:<br><strong>warning C4535: calling _set_se_translator() requires &#x2F;EHa</strong>  </p>\n<p><a href=\"http://1.bp.blogspot.com/-_pzUqN_T6Xo/Ut1SdMPUcsI/AAAAAAAAAMo/lNIQ3s_JLkM/s1600/eha.png\"><img src=\"http://1.bp.blogspot.com/-_pzUqN_T6Xo/Ut1SdMPUcsI/AAAAAAAAAMo/lNIQ3s_JLkM/s1600/eha.png\"></a></p>\n<p>SEH способен отлавливать все исключения и, что важно на мой взгляд, показывать место возникновения ошибки (ExceptionAddress), а также позволяет продолжить выполнение программы с прерванного места. Но, к сожалению, при возникновении исключения C++ в обработчике (фильтре) SEH документированными способами нельзя узнать тип исключения C++ и получить его текст ошибки. Ниже описан недокументированный способ.  </p>\n<p>Все исключения C++ в фильтре SEH имеют один и тот же код 0xe06d7363. При этом поле NumberParameters содержит 3 (для 32-разрядных приложений), ExceptionInformation[1] указывает на объект-исключение C++, а ExceptionInformation[2] указывает на структуру _ThrowInfo (ExceptionInformation[0] не интересно). _ThrowInfo относится к так называемым <a href=\"http://www.geoffchappell.com/studies/msvc/language/predefined/index.htm\">Predefined C++ Types</a>. Для использования предопределенных типов не нужно подключать никаких .h файлов. При редактировании IDE Visual Studio подчеркивает их красным цветом и пишет: Error: identifier “_ThrowInfo” is undefined. Но при этом все успешно компилируется и выполняется :-)  </p>\n<p>Ниже приведен SEH-фильтр, который способен анализировать исключения C++ и выводить информацию об исключении (what()). Стоит отметить, однако, что хотя эта процедура успешно работает в Visual Studio 2010, но нет никаких гарантий, что в будущем Microsoft не поменяет структуру _ThrowInfo.  </p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;eh.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdexcept&gt;</span></span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\">LONG <span class=\"title\">ExceptionFilter</span><span class=\"params\">(PEXCEPTION_POINTERS pEP, <span class=\"type\">const</span> <span class=\"type\">char</span> * file, <span class=\"type\">const</span> <span class=\"type\">char</span> * function, <span class=\"type\">int</span> line)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    PEXCEPTION_RECORD pER = pEP-&gt;ExceptionRecord;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (pER-&gt;ExceptionCode == <span class=\"number\">0xe06d7363</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (pER-&gt;NumberParameters == <span class=\"number\">3</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"type\">const</span> _ThrowInfo * pThrowInfo = (_ThrowInfo*)pER-&gt;ExceptionInformation[<span class=\"number\">2</span>];</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (pThrowInfo != <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"type\">const</span> _CatchableTypeArray * pTypeArray = pThrowInfo-&gt;pCatchableTypeArray;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (pTypeArray != <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"type\">const</span> _TypeDescriptor * pExceptionDesc = (_TypeDescriptor*)&amp;<span class=\"built_in\">typeid</span>(std::exception);  </span><br><span class=\"line\">                    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; pTypeArray-&gt;nCatchableTypes; i++)</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        <span class=\"type\">const</span> _CatchableType * pCatchableType = pTypeArray-&gt;arrayOfCatchableTypes[i];</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (pCatchableType != <span class=\"literal\">NULL</span> &amp;&amp; pExceptionDesc == pCatchableType-&gt;pType)</span><br><span class=\"line\">                        &#123;</span><br><span class=\"line\">                            std::exception * e = (std::exception*)pER-&gt;ExceptionInformation[<span class=\"number\">1</span>];</span><br><span class=\"line\">                            <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;File: %s\\nFunction: %s\\nLine: %i\\nC++ Exception: %s\\n&quot;</span>, file, function, line, e-&gt;<span class=\"built_in\">what</span>());</span><br><span class=\"line\">                            <span class=\"keyword\">return</span> EXCEPTION_EXECUTE_HANDLER;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;File: %s\\nFunction: %s\\nLine: %i\\nC++ Exception (code 0x%x at 0x%x)\\n&quot;</span>, file, function, line, pER-&gt;ExceptionCode, pER-&gt;ExceptionAddress);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> EXCEPTION_EXECUTE_HANDLER;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;File: %s\\nFunction: %s\\nLine: %i\\nSEH Exception (code 0x%x at 0x%x)\\n&quot;</span>, file, function, line, pER-&gt;ExceptionCode, pER-&gt;ExceptionAddress);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> EXCEPTION_EXECUTE_HANDLER;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span>* argv[])</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    __try</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"comment\">//DivideByZero();</span></span><br><span class=\"line\">        <span class=\"built_in\">ThrowException</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    __except(<span class=\"built_in\">ExceptionFilter</span>(<span class=\"built_in\">GetExceptionInformation</span>(), __FILE__, __FUNCTION__, __LINE__))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"comment\">//handle exception here</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>В заключении хочу отметить, что ExceptionAddress для исключений C++ не имеет особого смысла, потому что указывает всегда на один и тот же адрес внутри функции __CxxThrowException(), которая выполняется каждый раз, когда вызывается исключение с помощью throw.  </p>\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["cpp","0xe06d7363","_ThrowInfo","exception","SEH","исключения"]},{"title":"Сборка boost в Visual Studio 2010","url":"/2013/04/boost-visual-studio-2010/","content":"<p>1. Скачиваем boost с официального сайта <a href=\"http://www.boost.org/\">http://www.boost.org/</a>. Текущая версия на момент написания поста: 1.53.0.  </p>\n<p>2. Распаковываем архив на диск (я распаковал в c:\\boost\\boost_1_53_0).  </p>\n<p>3. Запускаем Visual Studio Command Prompt (2010).  </p>\n<p>4. Переходим в каталог boost и собираем bjam запустив bootstrap.bat.  </p>\n<p>5. Собираем boost командой: bjam toolset&#x3D;msvc-10.0 variant&#x3D;debug,release threading&#x3D;multi link&#x3D;static runtime-link&#x3D;static  </p>\n<p><a href=\"http://1.bp.blogspot.com/-_qpRFUpfpTg/UX5UkLkA_MI/AAAAAAAAAFY/zcrx9E2vt9o/s1600/bootstrap.png\"><img src=\"http://1.bp.blogspot.com/-_qpRFUpfpTg/UX5UkLkA_MI/AAAAAAAAAFY/zcrx9E2vt9o/s400/bootstrap.png\"></a></p>\n<p>6. Пьем кофе… Ждем завершения…  </p>\n<p><a href=\"http://2.bp.blogspot.com/-VjruL0s7v00/UX5Y5OulLPI/AAAAAAAAAF4/4iwbjkAgWaE/s1600/boost.png\"><img src=\"http://2.bp.blogspot.com/-VjruL0s7v00/UX5Y5OulLPI/AAAAAAAAAF4/4iwbjkAgWaE/s400/boost.png\"></a></p>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">7. Выполняем шаги 5,6 еще разок с другой командой: bjam toolset=msvc-10.0 variant=debug,release threading=multi link=static</div>\n\n<div class=\"separator\" style=\"clear: both; text-align: left;\">8. Прописываем в Visual Studio пути к бусту. Для этого открываем проект C++ (либо создаем новый), открываем вкладку Property Manager, выбираем Microsoft.Cpp.Win32.user в Debug | Win32 и Release | Win32 и в Property Pages->VC++ Directories добавляем в Include Directories C:\\\\boost\\\\boost\\_1\\_53\\_0, а в Library Directories C:\\\\boost\\\\boost\\_1\\_53\\_0\\\\stage\\\\lib</div>  \n\n<p><a href=\"http://2.bp.blogspot.com/-yvXcFrBT-8M/UX5aAqBqKxI/AAAAAAAAAGE/fMQR55AfC3c/s1600/boost-include.png\"><img src=\"http://2.bp.blogspot.com/-yvXcFrBT-8M/UX5aAqBqKxI/AAAAAAAAAGE/fMQR55AfC3c/s640/boost-include.png\"></a></p>\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["boost","Visual Studio 2010"]},{"title":"PerlVCBuildScripts","url":"/2013/06/perlvcbuildscripts/","content":"<p>Выложил на github perl-скрипты, которые я использую для автоматического изменения номера билда в проектах на Visual C++, а также генерации файлов xxx-build.txt с информацией о версии и контрольной суммой (MD5). Взять можно тут: <a href=\"https://github.com/coolsoftware/PerlVCBuildScripts\">https://github.com/coolsoftware/PerlVCBuildScripts</a>  </p>\n<p>Использовать просто:  </p>\n<ol>\n<li>Нужно создать файл с информацией о билде (build-файл) в каталоге Release (где будет создан exe или dll). Например, мой проект называется HTTPGet, имя исполняемого (генерируемого) файла HTTPGet.exe, значит имя build-файла должно быть HTTPGet-build.txt. Вот как выглядит структура каталогов проекта:</li>\n</ol>\n<p>HTTPGet \\<br>  HTTPGet.sln<br>  HTTPGet.aspr<br>  Release \\<br>    HTTPGet-build.txt<br>    HTTPGet.exe  </p>\n<p>Содержимое build-файла должно быть таким:  </p>\n<p>1.0.0.0<br><a href=\"http://127.0.0.1/HTTPGet.exe\">http://127.0.0.1/HTTPGet.exe</a><br>HTTPGet.exe<br>b9f2c07999dcafe9fe544a00521829c1  </p>\n<p>Первая строка - версия приложения (будет автоматически обновляться при сборке).<br>Вторая строка - URL для скачки последней версии.<br>Третья строка - имя файла.<br>Четвертая строка - MD5-подпись (будет автоматически обновляться при сборке).</p>\n<p>Я использую build-файлы в функции авто-обновления в приложениях. Реализацию этой функции я выложу как-нибудь позже.  </p>\n<ol start=\"2\">\n<li>Нужно прописать в Pre-Build Event-&gt;Command Line вызов:</li>\n</ol>\n<p>perl $(ProjectDir)..\\incbuild.pl $(ProjectDir) $(Configuration)  </p>\n<p><a href=\"http://2.bp.blogspot.com/-_I0RRuemW5k/UbxXQltC6OI/AAAAAAAAAGg/ERg-7kavYus/s1600/incbuild.png\"><img src=\"http://2.bp.blogspot.com/-_I0RRuemW5k/UbxXQltC6OI/AAAAAAAAAGg/ERg-7kavYus/s640/incbuild.png\"></a></p>\n<p>а в Post-Build Event-&gt;Command Line прописать:  </p>\n<p>perl $(ProjectDir)..\\makebuildinfo.pl $(TargetPath)  </p>\n<p><a href=\"http://2.bp.blogspot.com/-3HY6flCPb_o/UbxXjm8tSDI/AAAAAAAAAGo/sZvmF5ZS7Zg/s1600/makebuildinfo.png\"><img src=\"http://2.bp.blogspot.com/-3HY6flCPb_o/UbxXjm8tSDI/AAAAAAAAAGo/sZvmF5ZS7Zg/s640/makebuildinfo.png\"></a></p>\n<p>Если вы используете ASProtect для упаковки&#x2F;защиты приложения, то можно прописать путь к вашему ASPR-проекту, чтобы ASProtect был вызван автоматически при сборке:  </p>\n<p>perl $(ProjectDir)..\\makebuildinfo.pl $(TargetPath) $(ProjectDir)..\\$(TargetName).aspr  </p>\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["cpp","github","auto-increment","build","version"]},{"title":"MySQL не видит my.ini","url":"/2013/07/mysql-myini/","content":"<p>Понадобилось мне поднять max_connections в MySQL, который по-умолчанию был установлен инсталлером в C:\\Program Files\\MySQL\\MySQL Server 5.6.<br>В этом каталоге лежит my-default.ini, который я переименовал в my.ini и прописал в нем max_connections&#x3D;250. Перезапустил сервис MySQL - не работает! select @@max_connections возвращает 100. Не видит MySQL моего my.ini.<br>Полчаса потратил на поиски откуда же MySQL читает настройки. Поэтому и решил написать это сообщение здесь - вдруг кому-нибудь поможет и сэкономит время.  </p>\n<p><a href=\"http://1.bp.blogspot.com/-4lOAFIHTemo/UfJwBcqQX6I/AAAAAAAAAG4/1qLFTApy97o/s1600/mysqld.png\"><img src=\"http://1.bp.blogspot.com/-4lOAFIHTemo/UfJwBcqQX6I/AAAAAAAAAG4/1qLFTApy97o/s400/mysqld.png\"></a></p>\n<p>Оказывается сервис запускается с параметром –defaults-file&#x3D;”C:\\ProgramData\\MySQL\\MySQL Server 5.6\\my.ini”. Вот, значит, где находится my.ini.  </p>\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["max_connections","my.ini","mysql","windows"]},{"title":"Failure during conversion to COFF: file invalid or corrupt","url":"/2013/11/failure-during-conversion-to-coff-file/","content":"<p>Вылезла сегодня с утра ошибка при компиляции любого проекта в  Visual Studio 2010:  </p>\n<p><strong>LINK : fatal error LNK1123: failure during conversion to COFF: file invalid or corrupt</strong>  </p>\n<p>Установка в свойствах проекта Linker-&gt;Enable Incremental Linking значения NO (&#x2F;INCREMENTAL:NO) на помогла.  </p>\n<p>Полез смотреть, что же поменялось за последнее время. Оказалось вечером с авто-обновлениями винды поставился .NET Framework 4.5.1. Он то и нагадил!  </p>\n<p>1. Снес .NET Framework 4.5.1. Visual Studio перестал запускаться.<br>2. Установил .NET 4.0. Visual Studio починился, все проекты стали компилироваться нормально.<br>3. Слетел Mysql .Net Connector. Переустановил. Причем, Repair не помог, сделал сперва Remove, потом Install.  </p>\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":[".NET","Visual Studio 2010","failure","Microsoft"]},{"title":"LockLib update","url":"/2013/12/locklib-update/","content":"<p>Обновился LockLib на GitHub: <a href=\"https://github.com/coolsoftware/LockLib\">https://github.com/coolsoftware/LockLib</a>.  </p>\n<p>1. Классы <strong>VLock</strong>, <strong>VRWLock</strong>, <strong>VLockPtr</strong>, <strong>VReadLockPtr</strong>, <strong>VWriteLockPtr</strong> теперь “uncopyable”, то есть их нельзя скопировать (см. Листинг 1: Ошибка 1 и Ошибка 2). Запрет на копирование осуществляется путем наследования этих классов от <strong>VUncopyable</strong>. При компиляции кода, содержащего запрещенное копирование, будет выдано сообщение ошибке:</p>\n<p>VLock.h(62): error C2248: ‘VUncopyable::VUncopyable’ : cannot access private member declared in class ‘VUncopyable’  </p>\n<p>2. Конструктор класса <strong>VRWLock</strong> объявлен с ключевым словом <strong>explicit</strong> для того, чтобы исключить неявное создание экземпляра этого класса при вызове функции (см. Листинг 1: Ошибка 3). При компиляции кода, содержащего такое неявное создание <strong>VRWLock</strong>, будет выдано сообщение об ошибке:  </p>\n<p>TestLock.cpp(184): error C2664: ‘RWFunc’ : cannot convert parameter 1 from ‘int’ to ‘const VRWLock &amp;’<br>          Reason: cannot convert from ‘int’ to ‘const VRWLock’<br>          Constructor for class ‘VRWLock’ is declared ‘explicit’  </p>\n<p><strong>Листинг. 1.</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">RWFunc</span><span class=\"params\">(<span class=\"type\">const</span> VRWLock&amp;)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//do something here</span></span><br><span class=\"line\">    <span class=\"comment\">//...</span></span><br><span class=\"line\">&#125; </span><br><span class=\"line\">    </span><br><span class=\"line\">VLock lock1;</span><br><span class=\"line\">VLock lock2 = lock1; <span class=\"comment\">//Ошибка 1</span></span><br><span class=\"line\">VRWLock rwlock1;</span><br><span class=\"line\">VRWLock rwlock2 = rwlock1; <span class=\"comment\">//Ошибка 2</span></span><br><span class=\"line\"><span class=\"built_in\">RWFunc</span>(<span class=\"number\">1</span>); <span class=\"comment\">//Ошибка 3</span></span><br></pre></td></tr></table></figure>\n\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["cpp","github","LockLib","uncopyable","VLock","VRWLock","VUncopyable"]},{"title":"LockLib","url":"/2013/12/locklib/","content":"<p><strong>LockLib</strong> это набор классов для организации доступа к разделяемым ресурсам в программе на C++ под Windows.<br>Исходники доступны на GitHub: <a href=\"https://github.com/coolsoftware/LockLib\">https://github.com/coolsoftware/LockLib</a>.  </p>\n<h3 id=\"class-VLock\"><a href=\"#class-VLock\" class=\"headerlink\" title=\"class VLock\"></a>class VLock</h3><p>Класс <strong>VLock</strong> используется как альтернатива CRITICAL_SECTION (на самом деле это “обертка” над CRITICAL_SECTION).  </p>\n<h4 id=\"void-Lock-int-lPosition-volatile-LONG-lpThreadLock-x3D-NULL\"><a href=\"#void-Lock-int-lPosition-volatile-LONG-lpThreadLock-x3D-NULL\" class=\"headerlink\" title=\"void Lock(int lPosition, volatile LONG * lpThreadLock &#x3D; NULL)\"></a>void Lock(int lPosition, volatile LONG * lpThreadLock &#x3D; NULL)</h4><p>Блокировка ресурса для монопольного использования. Если ресурс уже кем-то заблокирован, то происходит ожидание когда ресурс снова станет свободен и его удастся заблокировать.  </p>\n<p>Параметр <strong><em>lPosition</em></strong> служит для идентификации места вызова метода <strong>Lock</strong> и может использоваться при отладке.  </p>\n<p>Необязательный параметр <strong><em>lpThreadLock</em></strong> служит для подсчета вызовов метода <strong>Lock</strong> в текущем потоке. Подробности смотрите ниже в разделе посвященном <strong><em>lpThreadLock</em></strong>.  </p>\n<h4 id=\"void-Unlock-volatile-LONG-lpThreadLock-x3D-NULL\"><a href=\"#void-Unlock-volatile-LONG-lpThreadLock-x3D-NULL\" class=\"headerlink\" title=\"void Unlock(volatile LONG * lpThreadLock &#x3D; NULL)\"></a>void Unlock(volatile LONG * lpThreadLock &#x3D; NULL)</h4><p>Снятие блокировки.  </p>\n<h4 id=\"static-void-OutputDebugLocks\"><a href=\"#static-void-OutputDebugLocks\" class=\"headerlink\" title=\"static void OutputDebugLocks()\"></a>static void OutputDebugLocks()</h4><p>При отладке и оптимизации приложений иногда нужно видеть список всех существующих блокировок и статистику по ним: сколько в данный момент активных блокировок, в каком месте они заблокированы. Посмотреть такую статистику можно вызвав <strong>OutputDebugLocks</strong>. Эта статистика доступна в Debug-версии приложении, когда объявлен _DEBUG, или когда объявлен макрос DEBUG_LOCK.  </p>\n<h4 id=\"volatile-LONG-lpThreadLock\"><a href=\"#volatile-LONG-lpThreadLock\" class=\"headerlink\" title=\"volatile LONG * lpThreadLock\"></a><em>volatile LONG * lpThreadLock</em></h4><p>Проблема с блокировками в много-поточном приложении связана с тем, что поток, который установил блокировку, может быть остановлен с помощью <strong>TerminateThread</strong>. В этом случае <strong>Unlock</strong> не будет вызван никогда и блокировка ресурса “повиснет”, а другие потоки, которые попытаются заблокировать этот ресурс, также “повиснут”.<br>Чтобы разрулить эту ситуацию, необходимо вести подсчет блокировок для каждого потока и вызывать <strong>Unlock</strong> после <strong>TerminateThread</strong>.  </p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\">VLock lock;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">unsigned</span> <span class=\"type\">int</span> __stdcall <span class=\"title\">LockThreadProc</span><span class=\"params\">(<span class=\"type\">void</span> * lpParam)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    lock.<span class=\"built_in\">Lock</span>(<span class=\"number\">1</span>, <span class=\"built_in\">reinterpret_cast</span>(lpParam)); <span class=\"comment\">//lock resource</span></span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\">//do something here</span></span><br><span class=\"line\"> </span><br><span class=\"line\">    lock.<span class=\"built_in\">Unlock</span>( <span class=\"built_in\">reinterpret_cast</span>(lpParam)); <span class=\"comment\">//unlock resource</span></span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\">//contuinue working</span></span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"class-VRWLock\"><a href=\"#class-VRWLock\" class=\"headerlink\" title=\"class VRWLock\"></a>class VRWLock</h3><p>Класс <strong>VRWLock</strong> позволяет реализовать стратегию блокировки ресурса “один писатель - много читателей”.  </p>\n<h4 id=\"VRWLock-LONG-lMaxReaders-x3D-65535-DWORD-dwSpinCount-x3D-1000-DWORD-dwTimeout-x3D-5\"><a href=\"#VRWLock-LONG-lMaxReaders-x3D-65535-DWORD-dwSpinCount-x3D-1000-DWORD-dwTimeout-x3D-5\" class=\"headerlink\" title=\"VRWLock(LONG lMaxReaders &#x3D; 65535, DWORD dwSpinCount &#x3D; 1000, DWORD dwTimeout &#x3D; 5)\"></a>VRWLock(LONG lMaxReaders &#x3D; 65535, DWORD dwSpinCount &#x3D; 1000, DWORD dwTimeout &#x3D; 5)</h4><p>Конструктор класса <strong>VRWLock</strong> имеет следующие параметры:</p>\n<p><em><strong>lMaxReaders</strong></em> - максимальное количество читателей, которые могут одновременно читать ресурс (не должно быть &#x3D; 0!). Значение по-умолчанию 65535.</p>\n<p><strong><em>dwSpinCount</em></strong> - количество неудачных попыток блокировки ресурса (занятого), после которых происходит <a href=\"http://ru.wikipedia.org/wiki/%D0%9F%D0%B5%D1%80%D0%B5%D0%BA%D0%BB%D1%8E%D1%87%D0%B5%D0%BD%D0%B8%D0%B5_%D0%BA%D0%BE%D0%BD%D1%82%D0%B5%D0%BA%D1%81%D1%82%D0%B0\">переключение контекста</a> с небольшой задержкой, определяемой параметром <em><strong>dwTimeout</strong></em> (в миллисекундах).  </p>\n<h4 id=\"void-LockRead-int-lPosition-volatile-LONG-lpThreadLock-x3D-NULL\"><a href=\"#void-LockRead-int-lPosition-volatile-LONG-lpThreadLock-x3D-NULL\" class=\"headerlink\" title=\"void LockRead(int lPosition, volatile LONG * lpThreadLock &#x3D; NULL)\"></a>void LockRead(int lPosition, volatile LONG * lpThreadLock &#x3D; NULL)</h4><p>Блокировка ресурса читателем. Если ресурс занят писателем или превышено максимальное количество читателей, то происходит ожидание освобождения ресурса, когда удастся его заблокировать. Смотрите описание параметров в описании метода <strong>Lock</strong> класса <strong>VLock</strong>.  </p>\n<h4 id=\"void-LockWrite-int-lPosition-volatile-LONG-lpThreadLock-x3D-NULL\"><a href=\"#void-LockWrite-int-lPosition-volatile-LONG-lpThreadLock-x3D-NULL\" class=\"headerlink\" title=\"void LockWrite(int lPosition, volatile LONG * lpThreadLock &#x3D; NULL)\"></a>void LockWrite(int lPosition, volatile LONG * lpThreadLock &#x3D; NULL)</h4><p>Блокировка ресурса писателем. Если ресурс занят писателем или одним или несколькими читателями, то происходит ожидание освобождения ресурса, когда удастся его заблокировать. Смотрите описание параметров в описании метода <strong>Lock</strong> класса <strong>VLock</strong>.  </p>\n<h4 id=\"void-ReLockWrite-int-lPosition-volatile-LONG-lpThreadLock-x3D-NULL\"><a href=\"#void-ReLockWrite-int-lPosition-volatile-LONG-lpThreadLock-x3D-NULL\" class=\"headerlink\" title=\"void ReLockWrite(int lPosition, volatile LONG * lpThreadLock &#x3D; NULL)\"></a>void ReLockWrite(int lPosition, volatile LONG * lpThreadLock &#x3D; NULL)</h4><p>Изменение статуса блокировки с читателя на писателя. Если ресурс не занят ни читателем ни писателем, то действие функции аналогично <strong>LockWrite</strong> (блокировка писателем). Если ресурс занят одним читателем, то происходит переключение его статуса с читателя на писателя. Если ресурс занят писателем или более чем одним читателем, то происходит ожидание момента, когда ресурс будет не занят писателями и занят не более чем одним читателем. Смотрите описание параметров в описании метода <strong>Lock</strong> класса <strong>VLock</strong>.  </p>\n<h4 id=\"void-Unlock-volatile-LONG-lpThreadLock-x3D-NULL-1\"><a href=\"#void-Unlock-volatile-LONG-lpThreadLock-x3D-NULL-1\" class=\"headerlink\" title=\"void Unlock(volatile LONG * lpThreadLock &#x3D; NULL)\"></a>void Unlock(volatile LONG * lpThreadLock &#x3D; NULL)</h4><p>Снятие блокировки.  </p>\n<h4 id=\"static-void-OutputDebugLocks-1\"><a href=\"#static-void-OutputDebugLocks-1\" class=\"headerlink\" title=\"static void OutputDebugLocks()\"></a>static void OutputDebugLocks()</h4><p>Вывод статистики блокировок (см. выше описание одноименного метода для класса <strong>VLock</strong>).  </p>\n<h3 id=\"class-VLockPtr-class-VReadLockPtr-class-VWriteLockPtr\"><a href=\"#class-VLockPtr-class-VReadLockPtr-class-VWriteLockPtr\" class=\"headerlink\" title=\"class VLockPtr, class VReadLockPtr, class VWriteLockPtr\"></a>class VLockPtr, class VReadLockPtr, class VWriteLockPtr</h3><p>Есть такая идиома: RAII - <a href=\"http://ru.wikipedia.org/wiki/%D0%9F%D0%BE%D0%BB%D1%83%D1%87%D0%B5%D0%BD%D0%B8%D0%B5_%D1%80%D0%B5%D1%81%D1%83%D1%80%D1%81%D0%B0_%D0%B5%D1%81%D1%82%D1%8C_%D0%B8%D0%BD%D0%B8%D1%86%D0%B8%D0%B0%D0%BB%D0%B8%D0%B7%D0%B0%D1%86%D0%B8%D1%8F\">захват ресурса есть инициализация</a>. Суть ее в следующем: создается класс-обертка такой, что в конструкторе класса вызывается соответствующая функция блокировки ресурса, а в деструкторе блокировка снимается. Это удобно по двум причинам:</p>\n<ol>\n<li>Нет необходимости делать явный вызов Unlock (а это часто, как показывает практика, забывают сделать).</li>\n<li>В случае возбуждения исключения между вызовами Lock и Unlock ресурс может оказаться занят “навсегда”. А при использования RAII, деструктор класса-обертки, а следовательно и Unlock, будет вызван и в случае исключительной ситуации.</li>\n</ol>\n<p><strong>VLockPtr</strong> - RAII класс-обертка над <strong>VLock</strong>.</p>\n<p><strong>VReadLockPtr</strong> - RAII класс-обертка над <strong>VRWLock::LockRead</strong>.</p>\n<p><strong>VWriteLockPtr</strong> - RAII класс-обертка над <strong>VRWLock::LockWrite</strong>.</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">unsigned</span> <span class=\"type\">int</span> __stdcall <span class=\"title\">LockPtrThreadProc</span><span class=\"params\">(<span class=\"type\">void</span> * lpParam)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"function\">VLockPtr <span class=\"title\">lockptr</span><span class=\"params\">(&amp;lock, <span class=\"number\">1</span>, <span class=\"keyword\">reinterpret_cast</span>(lpParam))</span></span>; <span class=\"comment\">//lock resource</span></span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"comment\">//do something here</span></span><br><span class=\"line\"> </span><br><span class=\"line\">    &#125; <span class=\"comment\">//unlock will be done here</span></span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\">//contuinue working</span></span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>=&#x3D;&#x3D;</p>\n<p>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["cpp","Писатели","Читатели","github","LockLib","VLock","VRWLock","RAII"]},{"title":"Дерево Интервалов (Отрезков)","url":"/2014/01/blog-post/","content":"<p>Я уже несколько раз сталкивался с необходимостью решать следующую задачу: есть список интервалов и нужно найти один или все интервалы, в которые входит заданное значение. Пример: есть список диапазонов IP-адресов, каждому диапазону присвоен двух-буквенный код страны. Требуется для заданного IP-адреса определить страну.  </p>\n<p>Когда интервалов не много, то можно обойтись полным перебором (brute-force). Но когда их несколько десятков тысяч, а искать приходится часто, то нужна оптимизация.  </p>\n<p>Подходящая структура для быстрого поиска в списке интервалов называется “Дерево Интервалов” (Interval Tree) или “Дерево Отрезков”. Хорошее описание (англ.), а также пример реализации я нашел тут: <a href=\"http://www.drdobbs.com/cpp/interval-trees/184401179\">http://www.drdobbs.com/cpp/interval-trees/184401179</a>.  </p>\n<h3 id=\"Теория\"><a href=\"#Теория\" class=\"headerlink\" title=\"Теория\"></a>Теория</h3><p>Коротко описание структуры дерева отрезков и алгоритма поиска приведу на примере: пусть есть список именованных отрезков:  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">a=[75, 76], b=[75, 79], c=[75, 84],</span><br><span class=\"line\">d=[76, 80], e=[79, 80], f=[79, 83],</span><br><span class=\"line\">g=[79, 91], h=[80, 84], i=[80, 90],</span><br><span class=\"line\">j=[83, 84], k=[84, 85], l=[91, 92],</span><br><span class=\"line\">m=[91, 92]</span><br></pre></td></tr></table></figure>\n\n<p>Выпишем координаты вершин отрезков, отсортированные по-возрастанию:  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">X = &#123;75, 76, 79, 80, 83, 84, 85, 90, 91, 92&#125;</span><br></pre></td></tr></table></figure>\n\n<p>Массив X содержит 10 элементов: X[0], X[1], …, X[9].<br>Возьмем среднее значение (медиану): 83 &#x3D; X[m], m &#x3D; (9-0) div 2.  </p>\n<p>Возможны три варианта расположения отрезков относительно медианы:<br>1. отрезки, которые содержат медиану.<br>2. отрезки, которые лежат слева от медианы.<br>3. отрезки, которые лежат справа от медианы.  </p>\n<p>Создадим узел дерева, который будет включать в себя значение медианы (дискриминант &#x3D; 83) и список всех отрезков, которые содержат медиану:  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">R = &#123;83, [c, f, g, h, i, j]&#125;</span><br></pre></td></tr></table></figure>\n\n<p>Оставшиеся отрезки слева от R: {a, b, d, e} и справа от R: {k, l, m}.  </p>\n<p>Построим левый узел дерева для отрезков {a, b, d, e}, находящихся левее медианы, рассматривая вершины слева от медианы: {75, <strong>76</strong>, 79, 80}. Получим: O &#x3D; {76, [a, b, d]}.<br>Аналогично правый узел для отрезков {k, l, m} и вершин {84, 85, <strong>90</strong>, 91, 92}: U &#x3D; {90, []}. Обратите внимание на возможность существования узлов, не содержащих отрезков.<br>Продолжая процесс рекурсивно, получим следующие узлы:<br>N &#x3D; {75, []}, P &#x3D; {79, [e]}, S &#x3D; {84, [k]}, V &#x3D; {91, [l, m]}, Q &#x3D; {80, []}, T &#x3D; {85, []}, W &#x3D; {92, []}.  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">      R</span><br><span class=\"line\">   /     \\</span><br><span class=\"line\">  O       U</span><br><span class=\"line\"> / \\     / \\</span><br><span class=\"line\">N   P   S   V</span><br><span class=\"line\">     \\   \\   \\</span><br><span class=\"line\">      Q   T   W</span><br></pre></td></tr></table></figure>\n\n<div class=\"separator\" style=\"clear: both; text-align: left;\">Висячие вершины N, Q, T и W можно убрать. Окончательно получим дерево:</div>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">     R</span><br><span class=\"line\">   /   \\</span><br><span class=\"line\">  O     U</span><br><span class=\"line\">   \\   / \\</span><br><span class=\"line\">    P S   V</span><br></pre></td></tr></table></figure>\n\n<p>Алгоритм поиска выглядит следующим образом. Начинаем с вершины дерева. Сравниваем дискриминант текущего узла с искомым значением q. Если они равны (случай 1), то выводим все отрезки, на которые указывает текущий узел, и завершаем процесс. Если дискриминант текущего узла больше, чем q (случай 2), то перебираем все отрезки, на которые указывает текущий узел, и выводим такие, которые содержат q. Затем переходим к левому узлу. Если дискриминант текущего узла меньше, чем q (случай 3), то аналогично перебираем все отрезки текущего узла и выводим те, которые содержат q, а затем переходим к правому узлу.  </p>\n<p>В двух последних случаях (когда дискриминант узла не равен q) нужен перебор отрезков, на которые указывает узел. Этот перебор можно оптимизировать, если иметь два отсортированных массива отрезков: первый массив AL должен быть отсортирован по возрастанию левой (меньшей) координаты отрезка, а второй массив DH должен быть отсортирован по убыванию правой (большей) координаты отрезка. Для узла R из нашего примера:  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">AL = &#123;c, f, g, h, i, j&#125;</span><br><span class=\"line\">DH = &#123;g, i, j, h, c, f&#125;</span><br></pre></td></tr></table></figure>\n\n<p>Тогда, если дискриминант узла больше q (случай 2), то перебираем отрезки из массива AL до тех пор, пока левая координата отрезка  не будет больше q. Если дискриминант узла меньше q (случай 2), то перебираем отрезки из массива DH до тех пор, пока правая координата отрезка не будет меньше q.  </p>\n<h3 id=\"Практика\"><a href=\"#Практика\" class=\"headerlink\" title=\"Практика\"></a>Практика</h3><p>Реализацию дерева интервалов можно взять на github: <a href=\"https://github.com/coolsoftware/ITree\">https://github.com/coolsoftware/ITree</a>.<br>Класс itree в itree.h.  </p>\n<p>За основу я взял реализацию Yogi Dandass, в которую добавил некоторые недостающие (ommited) определения, исправил пару багов и существенно оптимизировал построение дерева (метод construct_tree).  </p>\n<p><strong>Баг 1</strong> в методе itree::construct_tree. Код ниже вызывал выход за границы массива.  </p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\">std::<span class=\"built_in\">sort</span>(&amp;(al[list_start]),</span><br><span class=\"line\">    &amp;(al[list_start + list_size]), comp_for_al);</span><br><span class=\"line\">std::<span class=\"built_in\">sort</span>(&amp;(dh[list_start]),</span><br><span class=\"line\">    &amp;(dh[list_start + list_size]), comp_for_dh);</span><br></pre></td></tr></table></figure>\n\n<p>Он заменен на следующее:  </p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\">std::<span class=\"built_in\">sort</span>(al.<span class=\"built_in\">begin</span>()+list_start,</span><br><span class=\"line\">  al.<span class=\"built_in\">begin</span>()+list_start+list_size,</span><br><span class=\"line\">  comp_for_al);</span><br><span class=\"line\">std::<span class=\"built_in\">sort</span>(dh.<span class=\"built_in\">begin</span>()+list_start,</span><br><span class=\"line\">  dh.<span class=\"built_in\">begin</span>()+list_start+list_size,</span><br><span class=\"line\">  comp_for_dh);</span><br></pre></td></tr></table></figure>\n\n<p><strong>Баг 2</strong> в методе query_iterator::init_node. Если value &#x3D;&#x3D; cur_node-&gt;discrim, то требуется проверка, что cur_node-&gt;size !&#x3D; 0, а иначе возможен выход за границы массива.  </p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">init_node</span><span class=\"params\">(<span class=\"type\">void</span>)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    index = <span class=\"number\">0</span>;        </span><br><span class=\"line\">    <span class=\"keyword\">while</span> (cur_node != <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (value &lt; cur_node-&gt;discrim)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> ((cur_node-&gt;size != <span class=\"number\">0</span>) &amp;&amp;</span><br><span class=\"line\">                ((*p_al)[cur_node-&gt;start]-&gt;<span class=\"built_in\">low</span>() &lt;= value))</span><br><span class=\"line\">                <span class=\"keyword\">return</span>;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                cur_node = cur_node-&gt;left;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (value &gt; cur_node-&gt;discrim)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> ((cur_node-&gt;size != <span class=\"number\">0</span>) &amp;&amp;</span><br><span class=\"line\">                ((*p_dh)[cur_node-&gt;start]-&gt;<span class=\"built_in\">high</span>() &gt;= value))</span><br><span class=\"line\">                <span class=\"keyword\">return</span>;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                cur_node = cur_node-&gt;right;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"comment\">//(value == cur_node-&gt;discrim)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (cur_node-&gt;size == <span class=\"number\">0</span>) <span class=\"comment\">//VIT 2014 bugfix!</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                cur_node = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["cpp","алгоритм","github","Interval Tree","itree","дерево интервалов","дерево отрезков"]},{"title":"Вызов скриптов Perl из программы на C++","url":"/2014/04/perl-c/","content":"<p>Оказалось, что организовать вызов Perl-скриптов из C&#x2F;C++ (MS Visual C++ 2010) достаточно просто:  </p>\n<ol>\n<li><p>Прописываем в <strong>Include Directories</strong> и <strong>Library Directories</strong> проекта путь к Perl\\CORE:  </p>\n<p><a href=\"http://4.bp.blogspot.com/-OYOOdJk7BRc/U1Sqhzph12I/AAAAAAAAANk/nEMVKTQBHkI/s1600/testperl1.png\"><img src=\"http://4.bp.blogspot.com/-OYOOdJk7BRc/U1Sqhzph12I/AAAAAAAAANk/nEMVKTQBHkI/s1600/testperl1.png\"></a></p>\n</li>\n<li><p>Добавляем perl512.lib в Linker-&gt;Input-&gt;<strong>Additional Dependencies</strong>.  </p>\n<p><a href=\"http://3.bp.blogspot.com/-Bm3RzTGOCe0/U1SryOnY5dI/AAAAAAAAANw/QqTHrJ9k2tA/s1600/testperl2.png\"><img src=\"http://3.bp.blogspot.com/-Bm3RzTGOCe0/U1SryOnY5dI/AAAAAAAAANw/QqTHrJ9k2tA/s1600/testperl2.png\"></a></p>\n</li>\n<li><p>Ниже приведен пример кода, вызывающего perl из консольного приложения C++. Обращу внимание на два момента: a) <strong>#pragma warning (disable:4005)</strong> для подавления сообщения компилятора “<strong>‘ENOTSOCK’ : macro redefinition</strong>“; b) если опустить вызов <strong>PERL_SYS_INIT(0, NULL)</strong>, то на шаге perl_parse получим <strong>Access Violation</strong>.  </p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;stdafx.h&quot;</span></span></span><br><span class=\"line\"><span class=\"comment\">//avoid warning C4005: &#x27;ENOTSOCK&#x27; : macro redefinition</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">ifdef</span> _MSC_VER</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">pragma</span> <span class=\"keyword\">warning</span> ( disable : 4005 )</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> </span></span><br><span class=\"line\"> </span><br><span class=\"line\">PerlInterpreter *my_perl;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"type\">int</span> _tmain(<span class=\"type\">int</span> argc, _TCHAR* argv[])</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">PERL_SYS_INIT</span>(<span class=\"number\">0</span>, <span class=\"literal\">NULL</span>);</span><br><span class=\"line\"> </span><br><span class=\"line\">    my_perl = <span class=\"built_in\">perl_alloc</span>();</span><br><span class=\"line\">    <span class=\"built_in\">perl_construct</span>(my_perl);</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"built_in\">perl_parse</span>(my_perl, <span class=\"literal\">NULL</span>, argc, argv, <span class=\"literal\">NULL</span>);</span><br><span class=\"line\">    <span class=\"built_in\">perl_run</span>(my_perl);</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"built_in\">perl_destruct</span>(my_perl);</span><br><span class=\"line\">    <span class=\"built_in\">perl_free</span>(my_perl);</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["cpp","Perl"]},{"title":"Генерация пар открытых/закрытых ключей (RSA) на C#","url":"/2014/05/rsa-c/","content":"<p>Понадобилось мне создать пару открытый&#x2F;закрытый ключ на C#. Я поискал немного и нашел замечательную криптографическую библиотеку под названием Bouncy Castle: <a href=\"https://www.bouncycastle.org/\">https://www.bouncycastle.org/</a>. Для C# исходники можно скачать здесь: <a href=\"http://www.bouncycastle.org/csharp/\">http://www.bouncycastle.org/csharp/</a>. Ниже описан порядок установки и использования.  </p>\n<ol>\n<li><p>Качаем bccrypto-net-1.7-src.zip, распаковываем в какой-нибудь каталог на диске.</p>\n</li>\n<li><p>Открываем проект csharp.sln в Visual Studio 2010.</p>\n</li>\n<li><p>В свойствах проекта crypto в Build-&gt;General-&gt;Conditional compilation symbols комментируем INCLUDE_IDEA.  </p>\n<p><a href=\"http://3.bp.blogspot.com/-vhWW_yv95co/U4ckjLlh7ZI/AAAAAAAAAOQ/BGqnXiFDGYQ/s1600/crypto1.png\"><img src=\"http://3.bp.blogspot.com/-vhWW_yv95co/U4ckjLlh7ZI/AAAAAAAAAOQ/BGqnXiFDGYQ/s1600/crypto1.png\"></a></p>\n<div class=\"separator\" style=\"clear: both; text-align: center;\"></div></li>\n<li><p>Пробуем выполнить Build и видим ошибки:<br>error CS1504: Source file ‘C:\\temp\\csharp\\crypto\\src\\crypto\\engines\\IDEAEngine.cs’ could not be opened (‘Неопознанная ошибка ‘)<br>error CS1504: Source file ‘C:\\temp\\csharp\\crypto\\test\\src\\crypto\\test\\IDEATest.cs’ could not be opened (‘Неопознанная ошибка ‘)<br>error CS1504: Source file ‘C:\\temp\\csharp\\crypto\\src\\asn1\\misc\\IDEACBCPar.cs’ could not be opened (‘Неопознанная ошибка ‘)</p>\n</li>\n<li><p>Удаляем из проекта crypto отсутствующие файлы:<br>src\\crypto\\engines\\IDEAEngine.cs<br>src\\asn1\\misc\\IDEACBCPar.cs<br>test\\src\\crypto\\test\\IDEATest.cs</p>\n</li>\n<li><p>Пробуем еще раз выполнить Build - на этот раз все должно получиться и будет создана библиотека crypto.dll.</p>\n</li>\n<li><p>Прописываем созданную библиотеку в References проекта.  </p>\n<p><a href=\"http://4.bp.blogspot.com/-Jqy8eJsH5Qs/U4dlbpi5G-I/AAAAAAAAAOg/4L9JncCNtVc/s1600/ref-crypto.png\"><img src=\"http://4.bp.blogspot.com/-Jqy8eJsH5Qs/U4dlbpi5G-I/AAAAAAAAAOg/4L9JncCNtVc/s1600/ref-crypto.png\"></a></p>\n</li>\n<li><p>Код для генерации пары открытый&#x2F;закрытый ключ приведен ниже. Открытый ключ - в формате <a href=\"http://en.wikipedia.org/wiki/PKCS_8\">PKCS#8</a>. Закрытый ключ - в формате <a href=\"http://en.wikipedia.org/wiki/PKCS_1\">PKCS#1</a>.</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> Org.BouncyCastle.Asn1.Pkcs;</span><br><span class=\"line\"><span class=\"keyword\">using</span> Org.BouncyCastle.Asn1.X509;</span><br><span class=\"line\"><span class=\"keyword\">using</span> Org.BouncyCastle.Crypto;</span><br><span class=\"line\"><span class=\"keyword\">using</span> Org.BouncyCastle.Crypto.Parameters;</span><br><span class=\"line\"><span class=\"keyword\">using</span> Org.BouncyCastle.Pkcs;</span><br><span class=\"line\"><span class=\"keyword\">using</span> Org.BouncyCastle.Security;</span><br><span class=\"line\"><span class=\"keyword\">using</span> Org.BouncyCastle.X509;</span><br><span class=\"line\"><span class=\"keyword\">using</span> Org.BouncyCastle.Crypto.Generators;</span><br><span class=\"line\"> </span><br><span class=\"line\">RsaKeyPairGenerator rsa = <span class=\"keyword\">new</span> RsaKeyPairGenerator();</span><br><span class=\"line\">rsa.Init(<span class=\"keyword\">new</span> KeyGenerationParameters(<span class=\"keyword\">new</span> Org.BouncyCastle.Security.SecureRandom(), <span class=\"number\">1024</span>));</span><br><span class=\"line\">AsymmetricCipherKeyPair pair = rsa.GenerateKeyPair();</span><br><span class=\"line\">PrivateKeyInfo privateKeyInfo = PrivateKeyInfoFactory.CreatePrivateKeyInfo(pair.Private);</span><br><span class=\"line\"><span class=\"built_in\">byte</span>[] serializedPrivateBytes = privateKeyInfo.PrivateKey.ToAsn1Object().GetDerEncoded();</span><br><span class=\"line\"><span class=\"built_in\">string</span> privateKey = Convert.ToBase64String(serializedPrivateBytes);</span><br><span class=\"line\">SubjectPublicKeyInfo publicKeyInfo = SubjectPublicKeyInfoFactory.CreateSubjectPublicKeyInfo(pair.Public);</span><br><span class=\"line\"><span class=\"built_in\">byte</span>[] serializedPublicBytes = publicKeyInfo.ToAsn1Object().GetDerEncoded();</span><br><span class=\"line\"><span class=\"built_in\">string</span> publicKey = Convert.ToBase64String(serializedPublicBytes);</span><br></pre></td></tr></table></figure>\n\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n</li>\n</ol>\n","tags":["C#","Visual Studio 2010","Bouncy Castle","RSA"]},{"title":"Throttling","url":"/2014/11/throttling/","content":"<p><em>Троттлинг (throttling)</em> - это регулирование (ограничение) скорости какого-нибудь процесса. Например, <em>bandwidth throttling</em> - регулирование пропускной способности канала (обычно измеряется в килобайтах в секунду, kB&#x2F;s).  </p>\n<p>В листинге ниже показано, как можно реализовать троттлинг.  </p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">1000</span>; i++)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (!<span class=\"built_in\">throttle_acquire</span>()); <span class=\"comment\">//цикл ожидания</span></span><br><span class=\"line\">    <span class=\"built_in\">doWork</span>(); <span class=\"comment\">//выпоняем работу</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>В этом примере процесс состоит из 1000 итераций. Каждая итерация заключается в вызове функции doWork(), которая, например, отправляет очередную порцию данных. Ограничение скорости заключается в введении лимита на количество этих вызовов N за период времени dT. Перед вызовом doWork() осуществляется проверка превышения лимита: функция throttle_acquire() возвращает false, если лимит превышен, и true, в противном случае.  </p>\n<p>Троттлинг можно реализовать с использованием <a href=\"https://ru.wikipedia.org/wiki/%D0%9A%D0%BE%D0%BB%D1%8C%D1%86%D0%B5%D0%B2%D0%BE%D0%B9_%D0%B1%D1%83%D1%84%D0%B5%D1%80\">кольцевого буфера</a>. Этот кольцевой буфер заполняется моментами времени последних вызовов функции doWork() (см пример выше). Размер буфера равен максимально разрешенному количеству этих вызовов N за период времени dT. Если буфер полностью заполнен, то функция acquire() возвращает false. Это означает, что необходимо подождать, пока из буфера не будет удален хотя бы один момент времени, который располагается от текущего момента (“сейчас”) дальше, чем dT.  </p>\n<p>Реализацию троттлинга на C++ (throttle.h)  я выложил на github: <a href=\"https://github.com/coolsoftware/Throttle\">https://github.com/coolsoftware/Throttle</a>.  </p>\n<p>Пример использования класса <em>throttle</em> можно посмотреть в TestThrottle.cpp.  </p>\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["cpp","алгоритм","github","throttle","throttling","троттлинг"]},{"title":"Сборка zlib в Visual Studio 2010","url":"/2014/11/zlib-visual-studio-2010/","content":"<p>1. Скачиваем zlib 1.2.8 с <a href=\"http://www.zlib.net/\">http://www.zlib.net/</a><br>2. Распаковываем архив в c:\\zlib-1.2.8<br>3. Открываем в Visual Studio 2010 проект C:\\zlib-1.2.8\\contrib\\vstudio\\vc10\\zlibvc.sln<br>4. Меняем следующие настройки проекта zlibstat:  </p>\n<p>  Конфигурация Debug:  </p>\n<p>    General-&gt;Output Directory: **..\\..\\..\\win32-MDd\\**<br>    General-&gt;Intermediate Directory: **..\\..\\..\\win32-MDd\\Tmp\\**<br>    C&#x2F;C++-&gt;Preprocessor-&gt;Preprocessor Definitions: &lt;удаляем **ZLIB_WINAPI**&gt;<br>    C&#x2F;C++-&gt;Code Generation-&gt;Runtime Library: <strong>Multi-threaded Debug DLL (&#x2F;MDd)</strong><br>    Librarian-&gt;General-&gt;Output File: <strong>$(OutDir)\\..\\zlibMDd.lib</strong>  </p>\n<p>  Конфигурация Release:  </p>\n<p>    General-&gt;Output Directory: **..\\..\\..\\win32-MT\\**<br>    General-&gt;Intermediate Directory: **..\\..\\..\\win32-MT\\Tmp\\**<br>    C&#x2F;C++-&gt;Preprocessor-&gt;Preprocessor Definitions: &lt;удаляем **ZLIB_WINAPI**&gt;<br>    C&#x2F;C++-&gt;Code Generation-&gt;Runtime Library: <strong>Multi-threaded (&#x2F;MT)</strong><br>    Librarian-&gt;General-&gt;Output File: <strong>$(OutDir)\\..\\zlibMT.lib</strong><br>   <br>5. Собираем Debug и Release версии zlibstat. На выходе получаем:  </p>\n<p>  C:\\zlib-1.2.8\\zlibMDd.lib<br>  C:\\zlib-1.2.8\\zlibMT.lib  </p>\n<p>6. Открываем в Visual Studio 2010 любой проект C++ и открываем Property Manager-&gt;(Project Name)-&gt;Debug | Win32-&gt;Microsoft.Cpp.Win32.user-&gt;Common Properties-&gt;VC++ Directories. Добавляем c:\\zlib-1.2.8 в Include Directories, Library Direcories и Source Directories.  </p>\n<p><a href=\"http://2.bp.blogspot.com/-JfK1474NEAQ/VHdKsR46ehI/AAAAAAAAAPE/DLEOzwUBEZU/s1600/zlib.png\"><img src=\"http://2.bp.blogspot.com/-JfK1474NEAQ/VHdKsR46ehI/AAAAAAAAAPE/DLEOzwUBEZU/s1600/zlib.png\"></a></p>\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["cpp","Visual Studio 2010","zlib"]},{"title":"Raspberry Pi","url":"/2015/03/raspberry-pi/","content":"<p>Полезные ссылки, касающиеся разработки под Raspberry Pi. Пишу главным образом для себя, чтобы не забыть :) Пост будет время от времени дополнятся (я надеюсь :)  </p>\n<p>1. Кросс-компиляция Qt 5 для Raspberry Pi:  </p>\n<p><a href=\"http://qt-project.org/wiki/RaspberryPi_Beginners_guide\">http://qt-project.org/wiki/RaspberryPi_Beginners_guide</a>  </p>\n<p>Несколько замечаний:  </p>\n<p>a) git clone git<span class=\"sy0\">:</span><span class=\"co1\">&#x2F;&#x2F;gitorious.org&#x2F;qt&#x2F;qt5.git не работает, вместо него нужно выполнять: git clone <a href=\"http://git.gitorious.org/qt/qt5.git\">http://git.gitorious.org/qt/qt5.git</a></span>  </p>\n<p><span class=\"co1\">б) сперва лучше (imho) залить образ на флешку ( </span>sudo dd bs<span class=\"sy0\">&#x3D;</span>1M <span class=\"kw1\">if</span><span class=\"sy0\">&#x3D;</span><span class=\"nu0\"></span><span class=\"sy0\"></span>2015-02-16-raspbian-wheezy.img of<span class=\"sy0\">&#x3D;&#x2F;</span>dev<span class=\"sy0\">&#x2F;</span>sdb ), вставить флешку в Raspberry Pi, установить апдейты и библиотеки (например, для разработки под X11: <a href=\"http://doc.qt.io/qt-5/linux-requirements.html\">http://doc.qt.io/qt-5/linux-requirements.html</a>), потом сделать образ этой флешки ( sudo dd bs<span class=\"sy0\">&#x3D;</span>1M <span class=\"kw1\">if</span><span class=\"sy0\">&#x3D;</span><span class=\"sy0\">&#x2F;</span>dev<span class=\"sy0\">&#x2F;</span>sdb<span class=\"co1\"></span> of<span class=\"sy0\">&#x3D;</span><span class=\"co1\"></span><span class=\"sy0\"></span>rasp-pi.img ) и уже с ним работать дальше.  </p>\n<p>в) “Магическое” число <span class=\"sy0\"></span><span class=\"nu0\">62914560 ( </span><br>sudo mount <span class=\"sy0\">-</span>o loop<span class=\"sy0\">,</span>offset<span class=\"sy0\">&#x3D;</span><span class=\"nu0\">62914560</span> rasp-pi.<span class=\"me1\">img</span> <span class=\"sy0\">&#x2F;</span>mnt<span class=\"sy0\">&#x2F;</span>rasp<span class=\"sy0\">-</span>pi<span class=\"sy0\">-</span>rootfs ) можно вычислить следующим образом:  </p>\n<p>[vitaly@localhost opt]$ sudo fdisk -l rasp-pi.img  </p>\n<p>Disk rasp-pi.img: 7892 MB, 7892631552 bytes, 15415296 sectors<br>Units &#x3D; sectors of 1 * 512 &#x3D; 512 bytes<br>Sector size (logical&#x2F;physical): 512 bytes &#x2F; 512 bytes<br>I&#x2F;O size (minimum&#x2F;optimal): 512 bytes &#x2F; 512 bytes<br>Disk label type: dos<br>Disk identifier: 0x0009bf4f  </p>\n<p>Устр-во Загр     Начало       Конец       Блоки   Id  Система<br>rasp-pi.img1            8192      122879       57344    c  W95 FAT32 (LBA)<br>rasp-pi.img2          122880     6399999     3138560   83  Linux  </p>\n<p>122880 - это начало раздела (номер первого сектора раздела),  который нужно подмонтировать. 122880 * 512 &#x3D; 62914560.  </p>\n<p>2.”Нативная” компиляция Qt5 на Raspberry Pi.  </p>\n<p><a href=\"http://qt-project.org/wiki/Native_Build_of_Qt5_on_a_Raspberry_Pi\">http://qt-project.org/wiki/Native_Build_of_Qt5_on_a_Raspberry_Pi</a>  </p>\n<p>Я не пробовал. Утверждается, что идет очень долго.  </p>\n<p>3. Кросс-компиляция <a href=\"http://www.webtoolkit.eu/wt\">Wt</a> на Raspberry Pi:  </p>\n<p><a href=\"http://redmine.emweb.be/projects/wt/wiki/Cross_compile_Wt_on_Raspberry_Pi\">http://redmine.emweb.be/projects/wt/wiki/Cross_compile_Wt_on_Raspberry_Pi</a>  </p>\n<p>4. “Экономичная реализация графического интерфейса пользователя на базе одноплатного компьютера Raspberry Pi” (“Автоматика и программная инженерия”, 2014, №2(8))  </p>\n<p><a href=\"http://www.nips.ru/images/stories/zhournal-AIPI/10/aipi-2-2014-3.pdf\">http://www.nips.ru/images/stories/zhournal-AIPI/10/aipi-2-2014-3.pdf</a>  </p>\n<p>Хорошее подробное описание настройки кросс-компиляции.  </p>\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["Qt","cpp","Raspberry Pi"]},{"title":"Teredo ipv6","url":"/2015/06/teredo-ipv6/","content":"<p>Настройка ipv6 (Teredo):  </p>\n<ol>\n<li>Мой компьютер (контекстное меню) –&gt; Управление -&gt; Службы (Рис. 1):<br>    Вспомогательная служба IP –&gt; Тип запуска –&gt; Выбираем из списка: Автоматически</li>\n<li>Пуск –&gt; Выполнить –&gt; regedit</li>\n<li>В реестре по адресу<br>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\services\\Dnscache\\Parameters<br>создать ключ AddrConfigControl типа DWORD со значением 0 (Рис. 2).</li>\n<li>Пуск –&gt; Панель управления –&gt; Сеть и Интернет –&gt; Сетевые подключения –&gt; Подключение по локальной сети –&gt; Свойства (Рис. 3):<br>    Протокол Интернета версии 6 (TCP&#x2F;IPv6) –&gt; включить и в Свойствах указать:<br>    Использовать следующие адреса DNS-серверов:<br>    Предпочитаемый DNS-сервер: 2001:4860:4860::8888<br>    Альтернативный DNS-сервер: 2001:4860:4860::8844</li>\n<li>Пуск –&gt; Выполнить –&gt; gpedit.msc</li>\n<li>Конфигурация компьютера –&gt; Административные шаблоны –&gt; Сеть –&gt; Параметры TCP&#x2F;IP –&gt; Технологии Туннелирования IPv6 (Рис. 4):<br>    Классификация Teredo по умолчанию –&gt; Включить –&gt; Включенное состояние<br>    Частота обновления Teredo –&gt; Включить –&gt; 10<br>    Состояние Teredo –&gt; Включить –&gt; Корпоративный клиент<br>    Порт клиента Teredo -&gt; Не задано<br>    Имя сервера Teredo –&gt; Включить –&gt; Выбираем из списка: teredo.remlab.net</li>\n<li>Пуск – Выполнить – cmd:<br>    netsh int ipv6 delete route ::&#x2F;0 Teredo<br>    netsh int ipv6 add route ::&#x2F;0 Teredo</li>\n<li>Тестирование подключения: <a href=\"http://test-ipv6.com/\">http://test-ipv6.com/</a></li>\n</ol>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">Рис. 1</div>\n\n<p><a href=\"http://2.bp.blogspot.com/-Gwt1bQxlfNQ/VXGH_hjiIuI/AAAAAAAAARI/XUmueDKV3dI/s1600/iphlpsvc.png\"><img src=\"http://2.bp.blogspot.com/-Gwt1bQxlfNQ/VXGH_hjiIuI/AAAAAAAAARI/XUmueDKV3dI/s400/iphlpsvc.png\"></a></p>\n<div class=\"\" style=\"clear: both; text-align: center;\">Рис. 2</div>\n\n<p><a href=\"http://1.bp.blogspot.com/-1doq_Uc3Q9U/VXGJsqpf-RI/AAAAAAAAARQ/OGt6x6Y03s4/s1600/AddrConfigControl.png\"><img src=\"http://1.bp.blogspot.com/-1doq_Uc3Q9U/VXGJsqpf-RI/AAAAAAAAARQ/OGt6x6Y03s4/s400/AddrConfigControl.png\"></a></p>\n<div class=\"\" style=\"clear: both; text-align: center;\">Рис.3</div>\n\n<p><a href=\"http://4.bp.blogspot.com/-nQBcXA8rJ1Y/VXGMg_ORlzI/AAAAAAAAARc/vXqKb7YQX6g/s1600/ipv6dns.png\"><img src=\"http://4.bp.blogspot.com/-nQBcXA8rJ1Y/VXGMg_ORlzI/AAAAAAAAARc/vXqKb7YQX6g/s400/ipv6dns.png\"></a></p>\n<div class=\"\" style=\"clear: both; text-align: center;\">Рис. 4</div>\n\n<p><a href=\"http://3.bp.blogspot.com/-BIIj19IFcOc/VXGE4_PKJeI/AAAAAAAAAQ8/w1w4rXpCVrM/s1600/teredo.png\"><img src=\"http://3.bp.blogspot.com/-BIIj19IFcOc/VXGE4_PKJeI/AAAAAAAAAQ8/w1w4rXpCVrM/s400/teredo.png\"></a></p>\n<p>Стянул отсюда: <a href=\"http://blog.cherepovets.ru/serovds/2011/11/15/teredo-win7/\">http://blog.cherepovets.ru/serovds/2011/11/15/teredo-win7/</a>  </p>\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["ipv6","Teredo"]},{"title":"Обновить иконки рабочего стола (Windows)","url":"/2015/12/windows/","content":"<p>Заметка себе на память:  </p>\n<p>ie4uinit.exe -ClearIconCache  </p>\n<p><a href=\"http://3.bp.blogspot.com/-bWfAwd6Iemc/Vm72-k2lruI/AAAAAAAAATE/-cg5Rewtdtg/s1600/i4uinit.png\"><img src=\"http://3.bp.blogspot.com/-bWfAwd6Iemc/Vm72-k2lruI/AAAAAAAAATE/-cg5Rewtdtg/s320/i4uinit.png\"></a></p>\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["windows","Desktop","Icons","Refresh","иконки","обновить"]},{"title":"AHCI","url":"/2017/06/ahci/","content":"<p><a href=\"https://ru.wikipedia.org/wiki/Advanced_Host_Controller_Interface\">Wiki</a>: “Advanced Host Controller Interface (AHCI) — механизм, используемый для подключения накопителей информации по протоколу Serial ATA, позволяющий пользоваться расширенными функциями, такими, как встроенная очерёдность команд (NCQ) и горячая замена.”  </p>\n<p>Как включить:  </p>\n<p><strong>Windows 7</strong>  </p>\n<p>1. В реестре в разделе HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\services\\msachi установить значение параметра “Start” (REG_DWORD) равным 0 (по-умолчанию Start&#x3D;3).  </p>\n<p>2. В реестре в разделе HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\services\\iaStorV установить значение параметра “Start” (REG_DWORD) равным 0 (по-умолчанию Start&#x3D;3).  </p>\n<p>3. В BIOS включить режим AHCI вместо IDE.  </p>\n<p><strong>Windows 10</strong>  </p>\n<p>1. В реестре в разделе HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\services\\iaStorV установить значение параметра “Start” (REG_DWORD) равным 0.  </p>\n<p>2. В реестре в разделе HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\services\\iaStorAV\\StartOverride установить значение параметра “0” равным 0 (по-умолчанию значение этого параметра равно 3).  </p>\n<p>3. В реестре в разделе HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\services\\storachi\\StartOverride установить значение параметра “0” равным 0 (по-умолчанию значение этого параметра равно 3).  </p>\n<p>4. В BIOS включить режим AHCI вместо IDE.  </p>\n<p><strong>CentOS 7</strong>  </p>\n<p>1. Выполнить:  </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo modprobe ahci</span><br><span class=\"line\">sudo <span class=\"built_in\">cp</span> /boot/initramfs-`<span class=\"built_in\">uname</span> -r`.img /boot/initramfs-`<span class=\"built_in\">uname</span> -r`.img.bak</span><br><span class=\"line\">sudo mkinitrd -f --with=ahci /boot/initramfs-`<span class=\"built_in\">uname</span> -r`.img `<span class=\"built_in\">uname</span> -r`</span><br></pre></td></tr></table></figure>\n\n<p>2. В BIOS включить режим AHCI вместо IDE.  </p>\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["windows","AHCI","CentOS"]},{"title":"[Delphi XE2] MD4/MD5 Bug on x64","url":"/2017/08/delphi-xe2-md4md5-bug-on-x64/","content":"<p>В библиотеке Indy, которая поставляется с  Delphi XE2 под 64-битной платформой, имеется баг в вычислении MD4&#x2F;MD5 (компоненты TIdHashMessageDigest4, TIdHashMessageDigest5 соответственно).  </p>\n<p>Вот код для вычисления MD5:  </p>\n<figure class=\"highlight pascal\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span></span><br><span class=\"line\">  md5indy: TIdHashMessageDigest5;</span><br><span class=\"line\">  sMD5: <span class=\"keyword\">String</span>;</span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\">  md5indy := TIdHashMessageDigest5.Create;</span><br><span class=\"line\">  sMD5 := md5indy.HashStringAsHex(<span class=\"string\">&#x27;123456&#x27;</span>);</span><br><span class=\"line\">  md5indy.Free;</span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br></pre></td></tr></table></figure>\n\n<p>Под Win32 результат будет: ‘e10adc3949ba59abbe56e057f20f883e’ (правильно)<br>Под Win64 результат будет: ‘6e692400e5c684b74314252e341b92c7’ (ошибка)  </p>\n<p>Этот баг был исправлен в более поздних версиях версиях Indy&#x2F;Delphi (не скажу точно, в какой именно, в Delphi 10.2 Tokyo его нет).</p>\n<p>Баг в asm-функциях ROL и ROR в модуле IdGlobalProtocols. Вот как они выглядят в XE2:</p>\n<figure class=\"highlight pascal\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Arg1=EAX, Arg2=DL</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">ROL</span><span class=\"params\">(<span class=\"keyword\">const</span> AVal: LongWord; AShift: Byte)</span>:</span> LongWord; <span class=\"keyword\">assembler</span>;</span><br><span class=\"line\"><span class=\"keyword\">asm</span></span><br><span class=\"line\">  mov  cl, dl</span><br><span class=\"line\">  rol  eax, cl</span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">ROR</span><span class=\"params\">(<span class=\"keyword\">const</span> AVal: LongWord; AShift: Byte)</span>:</span> LongWord; <span class=\"keyword\">assembler</span>;</span><br><span class=\"line\"><span class=\"keyword\">asm</span></span><br><span class=\"line\">  mov  cl, dl</span><br><span class=\"line\">  ror  eax, cl</span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br><span class=\"line\"><span class=\"meta\">&#123;$ENDIF&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>А вот так это выглядит в Delpgi 10.2 Tokyo:</p>\n<figure class=\"highlight pascal\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 32-bit: Arg1=EAX, Arg2=DL</span></span><br><span class=\"line\"><span class=\"comment\">// 64-bit: Arg1=ECX, Arg2=DL</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">ROL</span><span class=\"params\">(<span class=\"keyword\">const</span> AVal: UInt32; AShift: Byte)</span>:</span> UInt32; <span class=\"keyword\">assembler</span>;</span><br><span class=\"line\"><span class=\"keyword\">asm</span></span><br><span class=\"line\">  <span class=\"meta\">&#123;$IFDEF CPU64&#125;</span></span><br><span class=\"line\">  mov eax, ecx</span><br><span class=\"line\">  <span class=\"meta\">&#123;$ENDIF&#125;</span></span><br><span class=\"line\">  mov  cl, dl</span><br><span class=\"line\">  rol  eax, cl</span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">ROR</span><span class=\"params\">(<span class=\"keyword\">const</span> AVal: UInt32; AShift: Byte)</span>:</span> UInt32; <span class=\"keyword\">assembler</span>;</span><br><span class=\"line\"><span class=\"keyword\">asm</span></span><br><span class=\"line\">  <span class=\"meta\">&#123;$IFDEF CPU64&#125;</span></span><br><span class=\"line\">  mov eax, ecx</span><br><span class=\"line\">  <span class=\"meta\">&#123;$ENDIF&#125;</span></span><br><span class=\"line\">  mov  cl, dl</span><br><span class=\"line\">  ror  eax, cl</span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br></pre></td></tr></table></figure>\n\n<p>Чтобы можно было генерировать MD4&#x2F;MD5 в XE2 под Win64 без установки новой версии Indy, я сделал модуль IdHashMessageDigestEx с “исправленными” классами TIdHashMessageDigest4Ex и TIdHashMessageDigest5Ex, которыми следует пользоваться вместо TIdHashMessageDigest4 и TIdHashMessageDigest5 соответственно. Замечу, что в XE2 не работает макрос CPU64 (как в более поздних версиях Delphi), а работает CPUX64.  </p>\n<figure class=\"highlight pascal\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">unit</span> IdHashMessageDigestEx;</span><br><span class=\"line\"><span class=\"keyword\">interface</span></span><br><span class=\"line\"><span class=\"keyword\">uses</span></span><br><span class=\"line\">  IdFIPS, IdHashMessageDigest;</span><br><span class=\"line\"><span class=\"keyword\">type</span></span><br><span class=\"line\"><span class=\"meta\">&#123;$IFDEF VER230&#125;</span> <span class=\"comment\">//XE2</span></span><br><span class=\"line\">  <span class=\"title\">TIdHashMessageDigest4Ex</span> = <span class=\"keyword\">class</span>(TIdHashMessageDigest4)</span><br><span class=\"line\">  <span class=\"keyword\">protected</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">procedure</span> <span class=\"title\">MDCoder</span>;</span> <span class=\"keyword\">override</span>;</span><br><span class=\"line\">  <span class=\"keyword\">end</span>;</span><br><span class=\"line\">  <span class=\"title\">TIdHashMessageDigest5Ex</span> = <span class=\"keyword\">class</span>(TIdHashMessageDigest4Ex)</span><br><span class=\"line\">  <span class=\"keyword\">protected</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">procedure</span> <span class=\"title\">MDCoder</span>;</span> <span class=\"keyword\">override</span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">InitHash</span> :</span> TIdHashIntCtx; <span class=\"keyword\">override</span>;</span><br><span class=\"line\">  <span class=\"keyword\">public</span></span><br><span class=\"line\">    <span class=\"keyword\">class</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">IsIntfAvailable</span> :</span> Boolean; <span class=\"keyword\">override</span>;</span><br><span class=\"line\">  <span class=\"keyword\">end</span>;</span><br><span class=\"line\"><span class=\"meta\">&#123;$ELSE&#125;</span></span><br><span class=\"line\">  TIdHashMessageDigest4Ex = TIdHashMessageDigest4;</span><br><span class=\"line\">  TIdHashMessageDigest5Ex = TIdHashMessageDigest5;</span><br><span class=\"line\"><span class=\"meta\">&#123;$ENDIF&#125;</span></span><br><span class=\"line\"><span class=\"keyword\">implementation</span></span><br><span class=\"line\"><span class=\"meta\">&#123;$IFDEF VER230&#125;</span> <span class=\"comment\">//XE2</span></span><br><span class=\"line\"><span class=\"meta\">&#123;$IFDEF NO_NATIVE_ASM)&#125;</span> <span class=\"comment\">//XE2</span></span><br><span class=\"line\"><span class=\"keyword\">uses</span> IdGlobalProtocols;</span><br><span class=\"line\"><span class=\"meta\">&#123;$ELSE&#125;</span></span><br><span class=\"line\"><span class=\"comment\">// 32-bit: Arg1=EAX, Arg2=DL</span></span><br><span class=\"line\"><span class=\"comment\">// 64-bit: Arg1=ECX, Arg2=DL</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">ROL</span><span class=\"params\">(<span class=\"keyword\">const</span> AVal: LongWord; AShift: LongWord)</span>:</span> LongWord; <span class=\"keyword\">assembler</span>;</span><br><span class=\"line\"><span class=\"keyword\">asm</span></span><br><span class=\"line\">  <span class=\"meta\">&#123;$IFDEF CPUX64&#125;</span></span><br><span class=\"line\">  mov eax, ecx</span><br><span class=\"line\">  <span class=\"meta\">&#123;$ENDIF&#125;</span></span><br><span class=\"line\">  mov  cl, dl</span><br><span class=\"line\">  rol  eax, cl</span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br><span class=\"line\"><span class=\"meta\">&#123;$ENDIF&#125;</span></span><br><span class=\"line\"><span class=\"comment\">&#123; TIdHashMessageDigest4Ex &#125;</span></span><br><span class=\"line\"><span class=\"meta\">&#123;$Q-&#125;</span> <span class=\"comment\">// Arithmetic operations performed modulo $100000000</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">procedure</span> <span class=\"title\">TIdHashMessageDigest4Ex</span>.<span class=\"title\">MDCoder</span>;</span></span><br><span class=\"line\"><span class=\"keyword\">var</span></span><br><span class=\"line\">  A, B, C, D, i : LongWord;</span><br><span class=\"line\">  buff : T16x4LongWordRecord; <span class=\"comment\">// 64-byte buffer</span></span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\">  A := FState[<span class=\"number\">0</span>];</span><br><span class=\"line\">  B := FState[<span class=\"number\">1</span>];</span><br><span class=\"line\">  C := FState[<span class=\"number\">2</span>];</span><br><span class=\"line\">  D := FState[<span class=\"number\">3</span>];</span><br><span class=\"line\">  <span class=\"keyword\">for</span> i := <span class=\"number\">0</span> <span class=\"keyword\">to</span> <span class=\"number\">15</span> <span class=\"keyword\">do</span></span><br><span class=\"line\">  <span class=\"keyword\">begin</span></span><br><span class=\"line\">    buff[i] := FCBuffer[i*<span class=\"number\">4</span>+<span class=\"number\">0</span>] +</span><br><span class=\"line\">               (FCBuffer[i*<span class=\"number\">4</span>+<span class=\"number\">1</span>] <span class=\"keyword\">shl</span> <span class=\"number\">8</span>) +</span><br><span class=\"line\">               (FCBuffer[i*<span class=\"number\">4</span>+<span class=\"number\">2</span>] <span class=\"keyword\">shl</span> <span class=\"number\">16</span>) +</span><br><span class=\"line\">               (FCBuffer[i*<span class=\"number\">4</span>+<span class=\"number\">3</span>] <span class=\"keyword\">shl</span> <span class=\"number\">24</span>);</span><br><span class=\"line\">  <span class=\"keyword\">end</span>;</span><br><span class=\"line\">  <span class=\"comment\">// Round 1</span></span><br><span class=\"line\">  <span class=\"comment\">&#123; <span class=\"doctag\">Note:</span></span></span><br><span class=\"line\"><span class=\"comment\">      (x and y) or ( (not x) and z)</span></span><br><span class=\"line\"><span class=\"comment\">    is equivalent to</span></span><br><span class=\"line\"><span class=\"comment\">      (((z xor y) and x) xor z)</span></span><br><span class=\"line\"><span class=\"comment\">    -HHellstrцm &#125;</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> i := <span class=\"number\">0</span> <span class=\"keyword\">to</span> <span class=\"number\">3</span> <span class=\"keyword\">do</span></span><br><span class=\"line\">  <span class=\"keyword\">begin</span></span><br><span class=\"line\">    A := ROL((((D xor C) <span class=\"keyword\">and</span> B) xor D) + A + buff[i*<span class=\"number\">4</span>+<span class=\"number\">0</span>],  <span class=\"number\">3</span>);</span><br><span class=\"line\">    D := ROL((((C xor B) <span class=\"keyword\">and</span> A) xor C) + D + buff[i*<span class=\"number\">4</span>+<span class=\"number\">1</span>],  <span class=\"number\">7</span>);</span><br><span class=\"line\">    C := ROL((((B xor A) <span class=\"keyword\">and</span> D) xor B) + C + buff[i*<span class=\"number\">4</span>+<span class=\"number\">2</span>], <span class=\"number\">11</span>);</span><br><span class=\"line\">    B := ROL((((A xor D) <span class=\"keyword\">and</span> C) xor A) + B + buff[i*<span class=\"number\">4</span>+<span class=\"number\">3</span>], <span class=\"number\">19</span>);</span><br><span class=\"line\">  <span class=\"keyword\">end</span>;</span><br><span class=\"line\">  <span class=\"comment\">// Round 2</span></span><br><span class=\"line\">  <span class=\"comment\">&#123; <span class=\"doctag\">Note:</span></span></span><br><span class=\"line\"><span class=\"comment\">      (x and y) or (x and z) or (y and z)</span></span><br><span class=\"line\"><span class=\"comment\">    is equivalent to</span></span><br><span class=\"line\"><span class=\"comment\">      ((x and y) or (z and (x or y)))</span></span><br><span class=\"line\"><span class=\"comment\">    -HHellstrцm &#125;</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> i := <span class=\"number\">0</span> <span class=\"keyword\">to</span> <span class=\"number\">3</span> <span class=\"keyword\">do</span></span><br><span class=\"line\">  <span class=\"keyword\">begin</span></span><br><span class=\"line\">    A := ROL(((B <span class=\"keyword\">and</span> C) <span class=\"keyword\">or</span> (D <span class=\"keyword\">and</span> (B <span class=\"keyword\">or</span> C))) + A + buff[<span class=\"number\">0</span>*<span class=\"number\">4</span>+i] + <span class=\"number\">$5A827999</span>,  <span class=\"number\">3</span>);</span><br><span class=\"line\">    D := ROL(((A <span class=\"keyword\">and</span> B) <span class=\"keyword\">or</span> (C <span class=\"keyword\">and</span> (A <span class=\"keyword\">or</span> B))) + D + buff[<span class=\"number\">1</span>*<span class=\"number\">4</span>+i] + <span class=\"number\">$5A827999</span>,  <span class=\"number\">5</span>);</span><br><span class=\"line\">    C := ROL(((D <span class=\"keyword\">and</span> A) <span class=\"keyword\">or</span> (B <span class=\"keyword\">and</span> (D <span class=\"keyword\">or</span> A))) + C + buff[<span class=\"number\">2</span>*<span class=\"number\">4</span>+i] + <span class=\"number\">$5A827999</span>,  <span class=\"number\">9</span>);</span><br><span class=\"line\">    B := ROL(((C <span class=\"keyword\">and</span> D) <span class=\"keyword\">or</span> (A <span class=\"keyword\">and</span> (C <span class=\"keyword\">or</span> D))) + B + buff[<span class=\"number\">3</span>*<span class=\"number\">4</span>+i] + <span class=\"number\">$5A827999</span>, <span class=\"number\">13</span>);</span><br><span class=\"line\">  <span class=\"keyword\">end</span>;</span><br><span class=\"line\">  <span class=\"comment\">// Round 3</span></span><br><span class=\"line\">  A := ROL((B xor C xor D) + A + buff[ <span class=\"number\">0</span>] + <span class=\"number\">$6ED9EBA1</span>,  <span class=\"number\">3</span>);</span><br><span class=\"line\">  D := ROL((A xor B xor C) + D + buff[ <span class=\"number\">8</span>] + <span class=\"number\">$6ED9EBA1</span>,  <span class=\"number\">9</span>);</span><br><span class=\"line\">  C := ROL((D xor A xor B) + C + buff[ <span class=\"number\">4</span>] + <span class=\"number\">$6ED9EBA1</span>, <span class=\"number\">11</span>);</span><br><span class=\"line\">  B := ROL((C xor D xor A) + B + buff[<span class=\"number\">12</span>] + <span class=\"number\">$6ED9EBA1</span>, <span class=\"number\">15</span>);</span><br><span class=\"line\">  A := ROL((B xor C xor D) + A + buff[ <span class=\"number\">2</span>] + <span class=\"number\">$6ED9EBA1</span>,  <span class=\"number\">3</span>);</span><br><span class=\"line\">  D := ROL((A xor B xor C) + D + buff[<span class=\"number\">10</span>] + <span class=\"number\">$6ED9EBA1</span>,  <span class=\"number\">9</span>);</span><br><span class=\"line\">  C := ROL((D xor A xor B) + C + buff[ <span class=\"number\">6</span>] + <span class=\"number\">$6ED9EBA1</span>, <span class=\"number\">11</span>);</span><br><span class=\"line\">  B := ROL((C xor D xor A) + B + buff[<span class=\"number\">14</span>] + <span class=\"number\">$6ED9EBA1</span>, <span class=\"number\">15</span>);</span><br><span class=\"line\">  A := ROL((B xor C xor D) + A + buff[ <span class=\"number\">1</span>] + <span class=\"number\">$6ED9EBA1</span>,  <span class=\"number\">3</span>);</span><br><span class=\"line\">  D := ROL((A xor B xor C) + D + buff[ <span class=\"number\">9</span>] + <span class=\"number\">$6ED9EBA1</span>,  <span class=\"number\">9</span>);</span><br><span class=\"line\">  C := ROL((D xor A xor B) + C + buff[ <span class=\"number\">5</span>] + <span class=\"number\">$6ED9EBA1</span>, <span class=\"number\">11</span>);</span><br><span class=\"line\">  B := ROL((C xor D xor A) + B + buff[<span class=\"number\">13</span>] + <span class=\"number\">$6ED9EBA1</span>, <span class=\"number\">15</span>);</span><br><span class=\"line\">  A := ROL((B xor C xor D) + A + buff[ <span class=\"number\">3</span>] + <span class=\"number\">$6ED9EBA1</span>,  <span class=\"number\">3</span>);</span><br><span class=\"line\">  D := ROL((A xor B xor C) + D + buff[<span class=\"number\">11</span>] + <span class=\"number\">$6ED9EBA1</span>,  <span class=\"number\">9</span>);</span><br><span class=\"line\">  C := ROL((D xor A xor B) + C + buff[ <span class=\"number\">7</span>] + <span class=\"number\">$6ED9EBA1</span>, <span class=\"number\">11</span>);</span><br><span class=\"line\">  B := ROL((C xor D xor A) + B + buff[<span class=\"number\">15</span>] + <span class=\"number\">$6ED9EBA1</span>, <span class=\"number\">15</span>);</span><br><span class=\"line\">  Inc(FState[<span class=\"number\">0</span>], A);</span><br><span class=\"line\">  Inc(FState[<span class=\"number\">1</span>], B);</span><br><span class=\"line\">  Inc(FState[<span class=\"number\">2</span>], C);</span><br><span class=\"line\">  Inc(FState[<span class=\"number\">3</span>], D);</span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br><span class=\"line\"><span class=\"meta\">&#123;$Q+&#125;</span></span><br><span class=\"line\"><span class=\"comment\">&#123; TIdHashMessageDigest5Ex &#125;</span></span><br><span class=\"line\"><span class=\"keyword\">const</span></span><br><span class=\"line\">  MD5_SINE : <span class=\"keyword\">array</span>[<span class=\"number\">1</span>..<span class=\"number\">64</span>] <span class=\"keyword\">of</span> LongWord = (</span><br><span class=\"line\">   <span class=\"comment\">&#123; Round 1. &#125;</span></span><br><span class=\"line\">   <span class=\"number\">$d76aa478</span>, <span class=\"number\">$e8c7b756</span>, <span class=\"number\">$242070db</span>, <span class=\"number\">$c1bdceee</span>, <span class=\"number\">$f57c0faf</span>, <span class=\"number\">$4787c62a</span>,</span><br><span class=\"line\">   <span class=\"number\">$a8304613</span>, <span class=\"number\">$fd469501</span>, <span class=\"number\">$698098d8</span>, <span class=\"number\">$8b44f7af</span>, <span class=\"number\">$ffff5bb1</span>, <span class=\"number\">$895cd7be</span>,</span><br><span class=\"line\">   <span class=\"number\">$6b901122</span>, <span class=\"number\">$fd987193</span>, <span class=\"number\">$a679438e</span>, <span class=\"number\">$49b40821</span>,</span><br><span class=\"line\">   <span class=\"comment\">&#123; Round 2. &#125;</span></span><br><span class=\"line\">   <span class=\"number\">$f61e2562</span>, <span class=\"number\">$c040b340</span>, <span class=\"number\">$265e5a51</span>, <span class=\"number\">$e9b6c7aa</span>, <span class=\"number\">$d62f105d</span>, <span class=\"number\">$02441453</span>,</span><br><span class=\"line\">   <span class=\"number\">$d8a1e681</span>, <span class=\"number\">$e7d3fbc8</span>, <span class=\"number\">$21e1cde6</span>, <span class=\"number\">$c33707d6</span>, <span class=\"number\">$f4d50d87</span>, <span class=\"number\">$455a14ed</span>,</span><br><span class=\"line\">   <span class=\"number\">$a9e3e905</span>, <span class=\"number\">$fcefa3f8</span>, <span class=\"number\">$676f02d9</span>, <span class=\"number\">$8d2a4c8a</span>,</span><br><span class=\"line\">   <span class=\"comment\">&#123; Round 3. &#125;</span></span><br><span class=\"line\">   <span class=\"number\">$fffa3942</span>, <span class=\"number\">$8771f681</span>, <span class=\"number\">$6d9d6122</span>, <span class=\"number\">$fde5380c</span>, <span class=\"number\">$a4beea44</span>, <span class=\"number\">$4bdecfa9</span>,</span><br><span class=\"line\">   <span class=\"number\">$f6bb4b60</span>, <span class=\"number\">$bebfbc70</span>, <span class=\"number\">$289b7ec6</span>, <span class=\"number\">$eaa127fa</span>, <span class=\"number\">$d4ef3085</span>, <span class=\"number\">$04881d05</span>,</span><br><span class=\"line\">   <span class=\"number\">$d9d4d039</span>, <span class=\"number\">$e6db99e5</span>, <span class=\"number\">$1fa27cf8</span>, <span class=\"number\">$c4ac5665</span>,</span><br><span class=\"line\">   <span class=\"comment\">&#123; Round 4. &#125;</span></span><br><span class=\"line\">   <span class=\"number\">$f4292244</span>, <span class=\"number\">$432aff97</span>, <span class=\"number\">$ab9423a7</span>, <span class=\"number\">$fc93a039</span>, <span class=\"number\">$655b59c3</span>, <span class=\"number\">$8f0ccc92</span>,</span><br><span class=\"line\">   <span class=\"number\">$ffeff47d</span>, <span class=\"number\">$85845dd1</span>, <span class=\"number\">$6fa87e4f</span>, <span class=\"number\">$fe2ce6e0</span>, <span class=\"number\">$a3014314</span>, <span class=\"number\">$4e0811a1</span>,</span><br><span class=\"line\">   <span class=\"number\">$f7537e82</span>, <span class=\"number\">$bd3af235</span>, <span class=\"number\">$2ad7d2bb</span>, <span class=\"number\">$eb86d391</span></span><br><span class=\"line\">  );</span><br><span class=\"line\"><span class=\"meta\">&#123;$Q-&#125;</span> <span class=\"comment\">// Arithmetic operations performed modulo $100000000</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">TIdHashMessageDigest5Ex</span>.<span class=\"title\">InitHash</span>:</span> TIdHashIntCtx;</span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\">  Result := GetMD5HashInst;</span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">TIdHashMessageDigest5Ex</span>.<span class=\"title\">IsIntfAvailable</span>:</span> Boolean;</span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\">  Result := IsHashingIntfAvail <span class=\"keyword\">and</span> IsMD5HashIntfAvail ;</span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">procedure</span> <span class=\"title\">TIdHashMessageDigest5Ex</span>.<span class=\"title\">MDCoder</span>;</span></span><br><span class=\"line\"><span class=\"keyword\">var</span></span><br><span class=\"line\">  A, B, C, D : LongWord;</span><br><span class=\"line\">  i: Integer;</span><br><span class=\"line\">  x : T16x4LongWordRecord; <span class=\"comment\">// 64-byte buffer</span></span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\">  A := FState[<span class=\"number\">0</span>];</span><br><span class=\"line\">  B := FState[<span class=\"number\">1</span>];</span><br><span class=\"line\">  C := FState[<span class=\"number\">2</span>];</span><br><span class=\"line\">  D := FState[<span class=\"number\">3</span>];</span><br><span class=\"line\">  <span class=\"keyword\">for</span> i := <span class=\"number\">0</span> <span class=\"keyword\">to</span> <span class=\"number\">15</span> <span class=\"keyword\">do</span></span><br><span class=\"line\">  <span class=\"keyword\">begin</span></span><br><span class=\"line\">    x[i] := FCBuffer[i*<span class=\"number\">4</span>+<span class=\"number\">0</span>] +</span><br><span class=\"line\">            (FCBuffer[i*<span class=\"number\">4</span>+<span class=\"number\">1</span>] <span class=\"keyword\">shl</span> <span class=\"number\">8</span>) +</span><br><span class=\"line\">            (FCBuffer[i*<span class=\"number\">4</span>+<span class=\"number\">2</span>] <span class=\"keyword\">shl</span> <span class=\"number\">16</span>) +</span><br><span class=\"line\">            (FCBuffer[i*<span class=\"number\">4</span>+<span class=\"number\">3</span>] <span class=\"keyword\">shl</span> <span class=\"number\">24</span>);</span><br><span class=\"line\">  <span class=\"keyword\">end</span>;</span><br><span class=\"line\">  <span class=\"comment\">&#123; Round 1 &#125;</span></span><br><span class=\"line\">  <span class=\"comment\">&#123; <span class=\"doctag\">Note:</span></span></span><br><span class=\"line\"><span class=\"comment\">      (x and y) or ( (not x) and z)</span></span><br><span class=\"line\"><span class=\"comment\">    is equivalent to</span></span><br><span class=\"line\"><span class=\"comment\">      (((z xor y) and x) xor z)</span></span><br><span class=\"line\"><span class=\"comment\">    -HHellstrцm &#125;</span></span><br><span class=\"line\">  A := ROL(A + (((D xor C) <span class=\"keyword\">and</span> B) xor D) + x[ <span class=\"number\">0</span>] + MD5_SINE[ <span class=\"number\">1</span>],  <span class=\"number\">7</span>) + B;</span><br><span class=\"line\">  D := ROL(D + (((C xor B) <span class=\"keyword\">and</span> A) xor C) + x[ <span class=\"number\">1</span>] + MD5_SINE[ <span class=\"number\">2</span>], <span class=\"number\">12</span>) + A;</span><br><span class=\"line\">  C := ROL(C + (((B xor A) <span class=\"keyword\">and</span> D) xor B) + x[ <span class=\"number\">2</span>] + MD5_SINE[ <span class=\"number\">3</span>], <span class=\"number\">17</span>) + D;</span><br><span class=\"line\">  B := ROL(B + (((A xor D) <span class=\"keyword\">and</span> C) xor A) + x[ <span class=\"number\">3</span>] + MD5_SINE[ <span class=\"number\">4</span>], <span class=\"number\">22</span>) + C;</span><br><span class=\"line\">  A := ROL(A + (((D xor C) <span class=\"keyword\">and</span> B) xor D) + x[ <span class=\"number\">4</span>] + MD5_SINE[ <span class=\"number\">5</span>],  <span class=\"number\">7</span>) + B;</span><br><span class=\"line\">  D := ROL(D + (((C xor B) <span class=\"keyword\">and</span> A) xor C) + x[ <span class=\"number\">5</span>] + MD5_SINE[ <span class=\"number\">6</span>], <span class=\"number\">12</span>) + A;</span><br><span class=\"line\">  C := ROL(C + (((B xor A) <span class=\"keyword\">and</span> D) xor B) + x[ <span class=\"number\">6</span>] + MD5_SINE[ <span class=\"number\">7</span>], <span class=\"number\">17</span>) + D;</span><br><span class=\"line\">  B := ROL(B + (((A xor D) <span class=\"keyword\">and</span> C) xor A) + x[ <span class=\"number\">7</span>] + MD5_SINE[ <span class=\"number\">8</span>], <span class=\"number\">22</span>) + C;</span><br><span class=\"line\">  A := ROL(A + (((D xor C) <span class=\"keyword\">and</span> B) xor D) + x[ <span class=\"number\">8</span>] + MD5_SINE[ <span class=\"number\">9</span>],  <span class=\"number\">7</span>) + B;</span><br><span class=\"line\">  D := ROL(D + (((C xor B) <span class=\"keyword\">and</span> A) xor C) + x[ <span class=\"number\">9</span>] + MD5_SINE[<span class=\"number\">10</span>], <span class=\"number\">12</span>) + A;</span><br><span class=\"line\">  C := ROL(C + (((B xor A) <span class=\"keyword\">and</span> D) xor B) + x[<span class=\"number\">10</span>] + MD5_SINE[<span class=\"number\">11</span>], <span class=\"number\">17</span>) + D;</span><br><span class=\"line\">  B := ROL(B + (((A xor D) <span class=\"keyword\">and</span> C) xor A) + x[<span class=\"number\">11</span>] + MD5_SINE[<span class=\"number\">12</span>], <span class=\"number\">22</span>) + C;</span><br><span class=\"line\">  A := ROL(A + (((D xor C) <span class=\"keyword\">and</span> B) xor D) + x[<span class=\"number\">12</span>] + MD5_SINE[<span class=\"number\">13</span>],  <span class=\"number\">7</span>) + B;</span><br><span class=\"line\">  D := ROL(D + (((C xor B) <span class=\"keyword\">and</span> A) xor C) + x[<span class=\"number\">13</span>] + MD5_SINE[<span class=\"number\">14</span>], <span class=\"number\">12</span>) + A;</span><br><span class=\"line\">  C := ROL(C + (((B xor A) <span class=\"keyword\">and</span> D) xor B) + x[<span class=\"number\">14</span>] + MD5_SINE[<span class=\"number\">15</span>], <span class=\"number\">17</span>) + D;</span><br><span class=\"line\">  B := ROL(B + (((A xor D) <span class=\"keyword\">and</span> C) xor A) + x[<span class=\"number\">15</span>] + MD5_SINE[<span class=\"number\">16</span>], <span class=\"number\">22</span>) + C;</span><br><span class=\"line\">  <span class=\"comment\">&#123; Round 2 &#125;</span></span><br><span class=\"line\">  <span class=\"comment\">&#123; <span class=\"doctag\">Note:</span></span></span><br><span class=\"line\"><span class=\"comment\">      (x and z) or (y and (not z) )</span></span><br><span class=\"line\"><span class=\"comment\">    is equivalent to</span></span><br><span class=\"line\"><span class=\"comment\">      (((y xor x) and z) xor y)</span></span><br><span class=\"line\"><span class=\"comment\">    -HHellstrцm &#125;</span></span><br><span class=\"line\">  A := ROL(A + (C xor (D <span class=\"keyword\">and</span> (B xor C))) + x[ <span class=\"number\">1</span>] + MD5_SINE[<span class=\"number\">17</span>],  <span class=\"number\">5</span>) + B;</span><br><span class=\"line\">  D := ROL(D + (B xor (C <span class=\"keyword\">and</span> (A xor B))) + x[ <span class=\"number\">6</span>] + MD5_SINE[<span class=\"number\">18</span>],  <span class=\"number\">9</span>) + A;</span><br><span class=\"line\">  C := ROL(C + (A xor (B <span class=\"keyword\">and</span> (D xor A))) + x[<span class=\"number\">11</span>] + MD5_SINE[<span class=\"number\">19</span>], <span class=\"number\">14</span>) + D;</span><br><span class=\"line\">  B := ROL(B + (D xor (A <span class=\"keyword\">and</span> (C xor D))) + x[ <span class=\"number\">0</span>] + MD5_SINE[<span class=\"number\">20</span>], <span class=\"number\">20</span>) + C;</span><br><span class=\"line\">  A := ROL(A + (C xor (D <span class=\"keyword\">and</span> (B xor C))) + x[ <span class=\"number\">5</span>] + MD5_SINE[<span class=\"number\">21</span>],  <span class=\"number\">5</span>) + B;</span><br><span class=\"line\">  D := ROL(D + (B xor (C <span class=\"keyword\">and</span> (A xor B))) + x[<span class=\"number\">10</span>] + MD5_SINE[<span class=\"number\">22</span>],  <span class=\"number\">9</span>) + A;</span><br><span class=\"line\">  C := ROL(C + (A xor (B <span class=\"keyword\">and</span> (D xor A))) + x[<span class=\"number\">15</span>] + MD5_SINE[<span class=\"number\">23</span>], <span class=\"number\">14</span>) + D;</span><br><span class=\"line\">  B := ROL(B + (D xor (A <span class=\"keyword\">and</span> (C xor D))) + x[ <span class=\"number\">4</span>] + MD5_SINE[<span class=\"number\">24</span>], <span class=\"number\">20</span>) + C;</span><br><span class=\"line\">  A := ROL(A + (C xor (D <span class=\"keyword\">and</span> (B xor C))) + x[ <span class=\"number\">9</span>] + MD5_SINE[<span class=\"number\">25</span>],  <span class=\"number\">5</span>) + B;</span><br><span class=\"line\">  D := ROL(D + (B xor (C <span class=\"keyword\">and</span> (A xor B))) + x[<span class=\"number\">14</span>] + MD5_SINE[<span class=\"number\">26</span>],  <span class=\"number\">9</span>) + A;</span><br><span class=\"line\">  C := ROL(C + (A xor (B <span class=\"keyword\">and</span> (D xor A))) + x[ <span class=\"number\">3</span>] + MD5_SINE[<span class=\"number\">27</span>], <span class=\"number\">14</span>) + D;</span><br><span class=\"line\">  B := ROL(B + (D xor (A <span class=\"keyword\">and</span> (C xor D))) + x[ <span class=\"number\">8</span>] + MD5_SINE[<span class=\"number\">28</span>], <span class=\"number\">20</span>) + C;</span><br><span class=\"line\">  A := ROL(A + (C xor (D <span class=\"keyword\">and</span> (B xor C))) + x[<span class=\"number\">13</span>] + MD5_SINE[<span class=\"number\">29</span>],  <span class=\"number\">5</span>) + B;</span><br><span class=\"line\">  D := ROL(D + (B xor (C <span class=\"keyword\">and</span> (A xor B))) + x[ <span class=\"number\">2</span>] + MD5_SINE[<span class=\"number\">30</span>],  <span class=\"number\">9</span>) + A;</span><br><span class=\"line\">  C := ROL(C + (A xor (B <span class=\"keyword\">and</span> (D xor A))) + x[ <span class=\"number\">7</span>] + MD5_SINE[<span class=\"number\">31</span>], <span class=\"number\">14</span>) + D;</span><br><span class=\"line\">  B := ROL(B + (D xor (A <span class=\"keyword\">and</span> (C xor D))) + x[<span class=\"number\">12</span>] + MD5_SINE[<span class=\"number\">32</span>], <span class=\"number\">20</span>) + C;</span><br><span class=\"line\">  <span class=\"comment\">&#123; Round 3. &#125;</span></span><br><span class=\"line\">  A := ROL(A + (B xor C xor D) + x[ <span class=\"number\">5</span>] + MD5_SINE[<span class=\"number\">33</span>],  <span class=\"number\">4</span>) + B;</span><br><span class=\"line\">  D := ROL(D + (A xor B xor C) + x[ <span class=\"number\">8</span>] + MD5_SINE[<span class=\"number\">34</span>], <span class=\"number\">11</span>) + A;</span><br><span class=\"line\">  C := ROL(C + (D xor A xor B) + x[<span class=\"number\">11</span>] + MD5_SINE[<span class=\"number\">35</span>], <span class=\"number\">16</span>) + D;</span><br><span class=\"line\">  B := ROL(B + (C xor D xor A) + x[<span class=\"number\">14</span>] + MD5_SINE[<span class=\"number\">36</span>], <span class=\"number\">23</span>) + C;</span><br><span class=\"line\">  A := ROL(A + (B xor C xor D) + x[ <span class=\"number\">1</span>] + MD5_SINE[<span class=\"number\">37</span>],  <span class=\"number\">4</span>) + B;</span><br><span class=\"line\">  D := ROL(D + (A xor B xor C) + x[ <span class=\"number\">4</span>] + MD5_SINE[<span class=\"number\">38</span>], <span class=\"number\">11</span>) + A;</span><br><span class=\"line\">  C := ROL(C + (D xor A xor B) + x[ <span class=\"number\">7</span>] + MD5_SINE[<span class=\"number\">39</span>], <span class=\"number\">16</span>) + D;</span><br><span class=\"line\">  B := ROL(B + (C xor D xor A) + x[<span class=\"number\">10</span>] + MD5_SINE[<span class=\"number\">40</span>], <span class=\"number\">23</span>) + C;</span><br><span class=\"line\">  A := ROL(A + (B xor C xor D) + x[<span class=\"number\">13</span>] + MD5_SINE[<span class=\"number\">41</span>],  <span class=\"number\">4</span>) + B;</span><br><span class=\"line\">  D := ROL(D + (A xor B xor C) + x[ <span class=\"number\">0</span>] + MD5_SINE[<span class=\"number\">42</span>], <span class=\"number\">11</span>) + A;</span><br><span class=\"line\">  C := ROL(C + (D xor A xor B) + x[ <span class=\"number\">3</span>] + MD5_SINE[<span class=\"number\">43</span>], <span class=\"number\">16</span>) + D;</span><br><span class=\"line\">  B := ROL(B + (C xor D xor A) + x[ <span class=\"number\">6</span>] + MD5_SINE[<span class=\"number\">44</span>], <span class=\"number\">23</span>) + C;</span><br><span class=\"line\">  A := ROL(A + (B xor C xor D) + x[ <span class=\"number\">9</span>] + MD5_SINE[<span class=\"number\">45</span>],  <span class=\"number\">4</span>) + B;</span><br><span class=\"line\">  D := ROL(D + (A xor B xor C) + x[<span class=\"number\">12</span>] + MD5_SINE[<span class=\"number\">46</span>], <span class=\"number\">11</span>) + A;</span><br><span class=\"line\">  C := ROL(C + (D xor A xor B) + x[<span class=\"number\">15</span>] + MD5_SINE[<span class=\"number\">47</span>], <span class=\"number\">16</span>) + D;</span><br><span class=\"line\">  B := ROL(B + (C xor D xor A) + x[ <span class=\"number\">2</span>] + MD5_SINE[<span class=\"number\">48</span>], <span class=\"number\">23</span>) + C;</span><br><span class=\"line\">  <span class=\"comment\">&#123; Round 4. &#125;</span></span><br><span class=\"line\">  A := ROL(A + ((B <span class=\"keyword\">or</span> <span class=\"keyword\">not</span> D) xor C) + x[ <span class=\"number\">0</span>] + MD5_SINE[<span class=\"number\">49</span>],  <span class=\"number\">6</span>) + B;</span><br><span class=\"line\">  D := ROL(D + ((A <span class=\"keyword\">or</span> <span class=\"keyword\">not</span> C) xor B) + x[ <span class=\"number\">7</span>] + MD5_SINE[<span class=\"number\">50</span>], <span class=\"number\">10</span>) + A;</span><br><span class=\"line\">  C := ROL(C + ((D <span class=\"keyword\">or</span> <span class=\"keyword\">not</span> B) xor A) + x[<span class=\"number\">14</span>] + MD5_SINE[<span class=\"number\">51</span>], <span class=\"number\">15</span>) + D;</span><br><span class=\"line\">  B := ROL(B + ((C <span class=\"keyword\">or</span> <span class=\"keyword\">not</span> A) xor D) + x[ <span class=\"number\">5</span>] + MD5_SINE[<span class=\"number\">52</span>], <span class=\"number\">21</span>) + C;</span><br><span class=\"line\">  A := ROL(A + ((B <span class=\"keyword\">or</span> <span class=\"keyword\">not</span> D) xor C) + x[<span class=\"number\">12</span>] + MD5_SINE[<span class=\"number\">53</span>],  <span class=\"number\">6</span>) + B;</span><br><span class=\"line\">  D := ROL(D + ((A <span class=\"keyword\">or</span> <span class=\"keyword\">not</span> C) xor B) + x[ <span class=\"number\">3</span>] + MD5_SINE[<span class=\"number\">54</span>], <span class=\"number\">10</span>) + A;</span><br><span class=\"line\">  C := ROL(C + ((D <span class=\"keyword\">or</span> <span class=\"keyword\">not</span> B) xor A) + x[<span class=\"number\">10</span>] + MD5_SINE[<span class=\"number\">55</span>], <span class=\"number\">15</span>) + D;</span><br><span class=\"line\">  B := ROL(B + ((C <span class=\"keyword\">or</span> <span class=\"keyword\">not</span> A) xor D) + x[ <span class=\"number\">1</span>] + MD5_SINE[<span class=\"number\">56</span>], <span class=\"number\">21</span>) + C;</span><br><span class=\"line\">  A := ROL(A + ((B <span class=\"keyword\">or</span> <span class=\"keyword\">not</span> D) xor C) + x[ <span class=\"number\">8</span>] + MD5_SINE[<span class=\"number\">57</span>],  <span class=\"number\">6</span>) + B;</span><br><span class=\"line\">  D := ROL(D + ((A <span class=\"keyword\">or</span> <span class=\"keyword\">not</span> C) xor B) + x[<span class=\"number\">15</span>] + MD5_SINE[<span class=\"number\">58</span>], <span class=\"number\">10</span>) + A;</span><br><span class=\"line\">  C := ROL(C + ((D <span class=\"keyword\">or</span> <span class=\"keyword\">not</span> B) xor A) + x[ <span class=\"number\">6</span>] + MD5_SINE[<span class=\"number\">59</span>], <span class=\"number\">15</span>) + D;</span><br><span class=\"line\">  B := ROL(B + ((C <span class=\"keyword\">or</span> <span class=\"keyword\">not</span> A) xor D) + x[<span class=\"number\">13</span>] + MD5_SINE[<span class=\"number\">60</span>], <span class=\"number\">21</span>) + C;</span><br><span class=\"line\">  A := ROL(A + ((B <span class=\"keyword\">or</span> <span class=\"keyword\">not</span> D) xor C) + x[ <span class=\"number\">4</span>] + MD5_SINE[<span class=\"number\">61</span>],  <span class=\"number\">6</span>) + B;</span><br><span class=\"line\">  D := ROL(D + ((A <span class=\"keyword\">or</span> <span class=\"keyword\">not</span> C) xor B) + x[<span class=\"number\">11</span>] + MD5_SINE[<span class=\"number\">62</span>], <span class=\"number\">10</span>) + A;</span><br><span class=\"line\">  C := ROL(C + ((D <span class=\"keyword\">or</span> <span class=\"keyword\">not</span> B) xor A) + x[ <span class=\"number\">2</span>] + MD5_SINE[<span class=\"number\">63</span>], <span class=\"number\">15</span>) + D;</span><br><span class=\"line\">  B := ROL(B + ((C <span class=\"keyword\">or</span> <span class=\"keyword\">not</span> A) xor D) + x[ <span class=\"number\">9</span>] + MD5_SINE[<span class=\"number\">64</span>], <span class=\"number\">21</span>) + C;</span><br><span class=\"line\">  Inc(FState[<span class=\"number\">0</span>], A);</span><br><span class=\"line\">  Inc(FState[<span class=\"number\">1</span>], B);</span><br><span class=\"line\">  Inc(FState[<span class=\"number\">2</span>], C);</span><br><span class=\"line\">  Inc(FState[<span class=\"number\">3</span>], D);</span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br><span class=\"line\"><span class=\"meta\">&#123;$Q+&#125;</span></span><br><span class=\"line\"><span class=\"meta\">&#123;$ENDIF&#125;</span></span><br><span class=\"line\"><span class=\"keyword\">end</span>.</span><br></pre></td></tr></table></figure>\n\n<p>=&#x3D;&#x3D;</p>\n<p>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["64","delphi","bug","MD4","MD5","XE2"]},{"title":"ASUS N10 Nano vs TP-LINK TL-WN823N","url":"/2016/02/asus-n10-nano-vs-tp-link-tl-wn823n/","content":"<p>Решил сравнить скорость двух беспроводных сетевых USB-адаптеров: ASUS N10 Nano и TP-LINK TL-WN823N. На первом написно до 150 Mbps, на втором - до 300 Mbps.  </p>\n<p>Оба адаптера втыкались в Raspberry Pi B+. Для тестов использовался iperf.  </p>\n<div style=\"text-align: left;\">Результаты тестов представлены на Рис. 1,2. Как видим, ASUS показывает скорость около 42 Mbit/sec, TP-LINK - около 74 Mbit/sec.</div>\n\n<div style=\"text-align: left;\">Рис.1. ASUS N10 Nano.</div>\n\n<p><a href=\"https://4.bp.blogspot.com/-tDcPintEjDY/VsWmYszNcZI/AAAAAAAAAUQ/8wYol5Wv42s/s1600/iperf1.png\"><img src=\"https://4.bp.blogspot.com/-tDcPintEjDY/VsWmYszNcZI/AAAAAAAAAUQ/8wYol5Wv42s/s400/iperf1.png\"></a></p>\n<div style=\"text-align: left;\">Рис.2. TP-LINK TL-WN823N.</div>\n\n<p><a href=\"https://4.bp.blogspot.com/-_bQFfAxMjVY/VsWoZRg07TI/AAAAAAAAAUc/cDX8nT57Frw/s1600/iperf3.png\"><img src=\"https://4.bp.blogspot.com/-_bQFfAxMjVY/VsWoZRg07TI/AAAAAAAAAUc/cDX8nT57Frw/s400/iperf3.png\"></a></p>\n<p><a href=\"https://3.bp.blogspot.com/-JWZifsYr2Uo/VsWmYkz41eI/AAAAAAAAAUM/E4p_kUuDYFs/s1600/iperf2.png\">  \n</a></p>\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["Raspberry Pi","Performance","Wi-Fi"]},{"title":"Поиск подстрок с помощью дерева цифрового поиска","url":"/2016/03/blog-post/","content":"<p><strong>Теория</strong>  </p>\n<p>Задача: имеется два больших (100 000+) списка строк, и требуется отфильтровать первый список (Source List) таким образом, чтобы в нем остались только строки, содержащие подстроки из второго списка (Search List).  </p>\n<p>Решать эту задачу будем следующим образом: для каждой строки Z из Source List будем искать строку S из Search List, такую, что S является подстрокой Z.  </p>\n<p><em>Примитивный алгоритм</em>  </p>\n<p>Можно решить задачу нахождения подстроки из списка Search List при помощи следующего очевидного (<em>примитивного</em>), но крайне медленного алгоритма: будем последовательно перебирать все строки S из Search List до тех пор, пока не окажется, что S является подстрокой Z. При этом, алгоритм поиска подстроки в строке можно использовать либо <em>примитивный</em>, либо один из более продвинутых (например, <em>Бойера-Мура,</em> см. <a href=\"https://ru.wikipedia.org/wiki/%D0%9F%D0%BE%D0%B8%D1%81%D0%BA_%D0%BF%D0%BE%D0%B4%D1%81%D1%82%D1%80%D0%BE%D0%BA%D0%B8\">https://ru.wikipedia.org/wiki/Поиск_подстроки</a>). Однако, использование более быстрого алгоритма поиска подстроки в строке не сильно ускоряет <em>поиск подстроки из списка</em>, т.к. все-равно требуется перебрать в среднем N&#x2F;2 строк (здесь N - количество строк в Search List).  </p>\n<p><em>Дерево цифрового поиска</em>  </p>\n<p>Дерево цифрового поиска (также <em>бор, Trie, Префиксное дерево)</em> - структура данных, которая используется для осуществления поразрядного поиска. Каждый узел дерева содержит значение одного “разряда” (в нашем случае - строковый символ). Вся строка представлена последовательностью узлов от корня до листа дерева. Пример - дерево цифрового поиска для строк A, ABA, ABB, ABBA, ABC, BAC, BC:  </p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">    [ROOT NODE]</span><br><span class=\"line\">    /         \\</span><br><span class=\"line\">   A           B</span><br><span class=\"line\">  / \\         / \\</span><br><span class=\"line\">&#123;0&#125;  B       A   C</span><br><span class=\"line\">   / | \\    /</span><br><span class=\"line\">  A  B  C  C</span><br><span class=\"line\">    / \\</span><br><span class=\"line\">  &#123;0&#125;  A</span><br></pre></td></tr></table></figure>\n\n<p>Почитать про эту структуру можно, например, тут: <a href=\"https://en.wikipedia.org/wiki/Trie\">https://en.wikipedia.org/wiki/Trie</a>.  </p>\n<p>Алгоритм A1 поиска <em>префикса</em> строки S по дереву:  </p>\n<p>1. Пусть L &#x3D; длина строки S.<br>2. Если L &#x3D; 0 (“пустая” строка), то выход: префикс не найден.<br>3. Если дерево не содержит узлов (“пустое” дерево), то выход: префикс не найден.<br>4. Терминальный узел T &#x3D; NULL.<br>5. Текущий узел P &#x3D; корень дерева ( [ROOT NODE] ).<br>6. Цикл по K &#x3D; 1..L:<br>7.   Если у текущего узла нет дочернего, соответствующего символу S[K], то выход из цикла.<br>8.   Текущий узел P &#x3D; дочерний, узел, соответствующий символу S[K].<br>9.   Если у узла P есть дочерний узел с терминальным символом {0}, то присваиваем его T.<br>10. Конец цикла.<br>11. Если узел P - лист, то выход: префикс найден.<br>12. Если T не равно NULL, то выход: префикс найден.<br>13. Префикс не найден.  </p>\n<p>В качестве терминального символа {0} как правило используется символ NUL с ASCII-кодом 0, который не может встретиться в строке.  </p>\n<p>Алгоритм A2 поиска <em>подстроки</em> строки S по дереву.  </p>\n<p>1. Пусть L &#x3D; длина строки S.<br>2. Если L &#x3D; 0 (“пустая” строка), то выход: подстрока не найдена.<br>3. Если дерево не содержит узлов (“пустое” дерево), то выход: подстрока не найдена.<br>4. Цикл по K &#x3D; 1..L:<br>5.  Пусть Sk - <em>суффикс</em> строки S, начиная с K-го символа (суффикс длины L-K+1).<br>6.  Используем алгоритм A1 для поиска префикса строки Sk по дереву; если префикс найден, то выход: подстрока найдена.<br>7. Конец цикла.<br>8. Подстрока не найдена.  </p>\n<p>В алгоритмах A1 и A2 использованы определения <em>префикса</em> и <em>суффикса</em> строки из статьи: <a href=\"https://ru.wikipedia.org/wiki/%D0%9F%D0%BE%D0%B4%D1%81%D1%82%D1%80%D0%BE%D0%BA%D0%B0\">https://ru.wikipedia.org/wiki/Подстрока</a>. По-простому: префикс строки длины X - это первые X символов строки, суффикс строки длины Y - последние Y символов строки.  </p>\n<p><em>Построение дерева цифрового поиска</em>  </p>\n<p>Обозначения:  </p>\n<p>N - количество строк.<br>Si - i-я строка, i &#x3D; 1..N.<br>Li - длина i-ой строки.<br>[ROOT NODE] - корневой узел.  </p>\n<p>Построение дерева цифрового поиска:  </p>\n<p>1. Сортировка списка строк по возрастанию, удаление дубликатов.<br>2. Вызов рекурсивной процедуры R( [ROOT NODE], 1, 1, N).  </p>\n<p>Рекурсивная процедура R (параметры: P - узел-родитель, K - позиция текущего символа, I0, J0 - индексы строк; I0&lt;&#x3D;J0):  </p>\n<p>1. Индекс i &#x3D; I0.<br>2. Если K &gt; Li и i &#x3D; J0, то выход из процедуры R.<br>3. Если K &lt;&#x3D; Li, то символ C &#x3D; Si[K], иначе C &#x3D; {0}.<br>4. Создать X &#x3D; узел (C, P).<br>5. Индекс j &#x3D; i.<br>6. Цикл:<br>7.      Если j &#x3D; J0 или S(j+1)[K] не равно C, то:<br>8.        Вызвать R (X, K+1, i, j)<br>9.        Если j &#x3D; J0, то выход из цикла.<br>10.      i &#x3D; j+1.<br>10.      C &#x3D; Si[K].<br>11.      Создать X &#x3D; узел (C, P).<br>12.    Конец если.<br>13.    j &#x3D; j + 1.<br>14. Конец цикла.  </p>\n<p>См. иллюстрацию на Python: <a href=\"http://blog.coolsoftware.ru/2016/03/blog-post_23.html\">http://blog.coolsoftware.ru/2016/03/blog-post_23.html</a>.  </p>\n<p><em>Оптимизация (сжатие)</em>  </p>\n<p>Под-деревья, узлы которых содержат не более одного потомка, можно объединить в один узел - см. узел (AC) в примере ниже.  </p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">    [ROOT NODE]</span><br><span class=\"line\">    /         \\</span><br><span class=\"line\">   A           B</span><br><span class=\"line\">  / \\         / \\</span><br><span class=\"line\">&#123;0&#125;  B      (AC) C</span><br><span class=\"line\">   / | \\</span><br><span class=\"line\">  A  B  C</span><br><span class=\"line\">    / \\</span><br><span class=\"line\">  &#123;0&#125;  A</span><br></pre></td></tr></table></figure>\n\n<p>Реализация на Delphi: <a href=\"https://github.com/optinsoft/SearchStrings\">https://github.com/optinsoft/SearchStrings</a>  </p>\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["алгоритм","DST","search","string","trie","бор"]},{"title":"Построение дерева цифрового поиска","url":"/2016/03/blog-post_23/","content":"<p>Ниже приведена иллюстрация построения дерева цифрового поиска на Python (см. алгоритм в посте <a href=\"http://blog.coolsoftware.ru/2016/03/blog-post.html\">http://blog.coolsoftware.ru/2016/03/blog-post.html</a>):</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">f = <span class=\"built_in\">open</span>(<span class=\"string\">&quot;f1.txt&quot;</span>)</span><br><span class=\"line\">lines = f.read().split()</span><br><span class=\"line\">f.close()</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">sort</span>(<span class=\"params\">array</span>):</span><br><span class=\"line\">    equal = []</span><br><span class=\"line\">    greater = []</span><br><span class=\"line\">    less = []</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(array) &lt;= <span class=\"number\">1</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> array</span><br><span class=\"line\">    linem = array[<span class=\"built_in\">int</span>((<span class=\"built_in\">len</span>(array)-<span class=\"number\">1</span>)/<span class=\"number\">2</span>)]</span><br><span class=\"line\">    <span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> array:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> linem &lt; line:</span><br><span class=\"line\">            greater.append(line)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> linem &gt; line:</span><br><span class=\"line\">            less.append(line)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> linem == line:</span><br><span class=\"line\">            equal.append(line)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> sort(less) + equal + sort(greater)</span><br><span class=\"line\"> </span><br><span class=\"line\">sorted_lines = sort(lines) </span><br><span class=\"line\"><span class=\"built_in\">print</span>(sorted_lines)</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">node</span>(<span class=\"params\">C, P</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(P + C)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> P + <span class=\"string\">&quot; &quot;</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">R</span>(<span class=\"params\">P, K, I0, J0</span>):</span><br><span class=\"line\">    I = I0</span><br><span class=\"line\">    Si = sorted_lines[I]</span><br><span class=\"line\">    Li = <span class=\"built_in\">len</span>(Si)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> K &gt;= Li <span class=\"keyword\">and</span> I == J0:</span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> K &lt; Li:</span><br><span class=\"line\">        C = Si[K]</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        C = <span class=\"string\">&quot;&#123;0&#125;&quot;</span></span><br><span class=\"line\">    X = node(C, P)</span><br><span class=\"line\">    J = I</span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> J == J0 <span class=\"keyword\">or</span> sorted_lines[J+<span class=\"number\">1</span>][K] != C:</span><br><span class=\"line\">            R(X, K+<span class=\"number\">1</span>, I, J)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> J == J0:</span><br><span class=\"line\">                <span class=\"keyword\">break</span></span><br><span class=\"line\">            I = J + <span class=\"number\">1</span></span><br><span class=\"line\">            Si = sorted_lines[I]</span><br><span class=\"line\">            Li = <span class=\"built_in\">len</span>(Si)</span><br><span class=\"line\">            C = Si[K]</span><br><span class=\"line\">            X = node(C, P)</span><br><span class=\"line\">        J = J + <span class=\"number\">1</span></span><br><span class=\"line\"> </span><br><span class=\"line\">N = <span class=\"built_in\">len</span>(sorted_lines)</span><br><span class=\"line\">X = node(<span class=\"string\">&quot;[ROOT_NODE]&quot;</span>, <span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\">R(X, <span class=\"number\">0</span>, <span class=\"number\">0</span>, N-<span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure>\n\n<p>f1.txt:  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">BC</span><br><span class=\"line\">ABBA</span><br><span class=\"line\">ABC</span><br><span class=\"line\">ABA</span><br><span class=\"line\">ABB</span><br><span class=\"line\">BAC</span><br><span class=\"line\">A</span><br></pre></td></tr></table></figure>\n\n<p>Вывод:  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">[&#x27;A&#x27;, &#x27;ABA&#x27;, &#x27;ABB&#x27;, &#x27;ABBA&#x27;, &#x27;ABC&#x27;, &#x27;BAC&#x27;, &#x27;BC&#x27;]</span><br><span class=\"line\">[ROOT_NODE]</span><br><span class=\"line\"> A</span><br><span class=\"line\">  &#123;0&#125;</span><br><span class=\"line\">  B</span><br><span class=\"line\">   A</span><br><span class=\"line\">   B</span><br><span class=\"line\">    &#123;0&#125;</span><br><span class=\"line\">    A</span><br><span class=\"line\">   C</span><br><span class=\"line\"> B</span><br><span class=\"line\">  A</span><br><span class=\"line\">   C</span><br><span class=\"line\">  C</span><br></pre></td></tr></table></figure>\n\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["алгоритм","trie","бор","Python"]},{"title":"Lazarus Exe ","url":"/2016/03/lazarus-exe/","content":"<p>Чтобы уменьшить размер генерируемого Lazarus exe файла, нужно включить следующие опции в параметрах компилятора:  </p>\n<ol>\n<li>“Компиляция и компоновка”-&gt;”Стиль модулей”-&gt;”Умная компоновка (-CX)”</li>\n<li>“Компиляция и компоновка”-&gt;”Компоновка”-&gt;”Умная компоновка (-XX)”</li>\n<li>“Отладка”-&gt;”Информация для GDB”-&gt;”Использовать внешний файл отладочных символов GDB (-Xg)”</li>\n<li>“Отладка”-&gt;”Прочая отладочная информация”-&gt;”Вырезать символы из исполнимого файла (-Xs)”</li>\n</ol>\n<p><a href=\"https://1.bp.blogspot.com/-uSYj434mwss/VtWVR-1_cKI/AAAAAAAAAUw/f2VzkmwdVV8/s1600/lazarus-exe-1.png\"><img src=\"https://1.bp.blogspot.com/-uSYj434mwss/VtWVR-1_cKI/AAAAAAAAAUw/f2VzkmwdVV8/s400/lazarus-exe-1.png\"></a></p>\n<p><a href=\"https://3.bp.blogspot.com/-fXjX_tMrpMs/VtWVUS1O_sI/AAAAAAAAAU0/PFUjIgQFCvY/s1600/lazarus-exe-2.png\"><img src=\"https://3.bp.blogspot.com/-fXjX_tMrpMs/VtWVUS1O_sI/AAAAAAAAAU0/PFUjIgQFCvY/s400/lazarus-exe-2.png\"></a></p>\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["exe","Lazarus"]},{"title":"VPN через Amazon EC2","url":"/2016/07/vpn-amazon-ec2/","content":"<p>Отличная инструкция по настройке VPN через Amazon EC2: <a href=\"https://dxdt.ru/2012/08/06/5063/\">https://dxdt.ru/2012/08/06/5063/</a>.  </p>\n<p>Два замечания:  </p>\n<p>1. Если отсутствует файл <em>&#x2F;etc&#x2F;VPNCA&#x2F;CA&#x2F;index.txt</em>, то может вылезти ошибка на шаге выпуска сертификата:  </p>\n<p><em># openssl ca -config openssl.vpn.cnf -policy policy_anything -out certs&#x2F;vpn-node.crt -infiles vpn-node.csr</em>  </p>\n<p>Чтобы ее не было надо создать пустой index.txt:  </p>\n<p><em># touch</em> <em>&#x2F;etc&#x2F;VPNCA&#x2F;CA&#x2F;index.txt</em>  </p>\n<p>2. Нужно обратить внимание на следующую строчку в конфигурационном файле named.conf:  </p>\n<p>listen-on port 53 { <strong>localhost</strong>; };  </p>\n<p>Должно быть именно localhost, а не 127.0.0.1, иначе DNS в OpenVPN-соединении работать не будет.  </p>\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["openssl","Amazon","EC2","openvpn","vpn"]},{"title":"[Delphi XE2] Indy Parse Cookie Bug","url":"/2016/08/delphi-xe2-indy-parse-cookie-bug/","content":"<p>В Delphi XE2 отыскался баг в <strong>TIdCookie.ParseServerCookie</strong>. Смотрим код:  </p>\n<figure class=\"highlight pascal\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">GetLastValueOf</span><span class=\"params\">(<span class=\"keyword\">const</span> AName: <span class=\"keyword\">String</span>; <span class=\"keyword\">var</span> VValue: <span class=\"keyword\">String</span>)</span>:</span> Boolean;</span><br><span class=\"line\">  <span class=\"keyword\">var</span></span><br><span class=\"line\">    I: Integer;</span><br><span class=\"line\">  <span class=\"keyword\">begin</span></span><br><span class=\"line\">    Result := False;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> I := CookieProp.Count-<span class=\"number\">1</span> <span class=\"keyword\">downto</span> <span class=\"number\">0</span> <span class=\"keyword\">do</span></span><br><span class=\"line\">    <span class=\"keyword\">begin</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> TextIsSame(CookieProp.Names[I], AName) <span class=\"keyword\">then</span></span><br><span class=\"line\">      <span class=\"keyword\">begin</span></span><br><span class=\"line\">        <span class=\"meta\">&#123;$IFDEF HAS_TStrings_ValueFromIndex&#125;</span></span><br><span class=\"line\">        VValue := CookieProp.ValueFromIndex[I];</span><br><span class=\"line\">        <span class=\"meta\">&#123;$ELSE&#125;</span></span><br><span class=\"line\">        VValue := Copy(CookieProp[I], Pos(<span class=\"string\">&#x27;=&#x27;</span>, CookieProp[I])+<span class=\"number\">1</span>, MaxInt); <span class=\"comment\">&#123;Do not Localize&#125;</span></span><br><span class=\"line\">        <span class=\"meta\">&#123;$ENDIF&#125;</span></span><br><span class=\"line\">        Result := True;</span><br><span class=\"line\">        <span class=\"keyword\">Exit</span>;</span><br><span class=\"line\">      <span class=\"keyword\">end</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span>;</span><br><span class=\"line\">  <span class=\"keyword\">end</span>;</span><br><span class=\"line\">...</span><br><span class=\"line\">    <span class=\"keyword\">if</span> GetLastValueOf(<span class=\"string\">&#x27;MAX-AGE&#x27;</span>, S) <span class=\"keyword\">then</span> <span class=\"keyword\">begin</span> <span class=\"comment\">&#123;Do not Localize&#125;</span></span><br><span class=\"line\">      FPersistent := True;</span><br><span class=\"line\">      FExpires := StrToFloat(S);</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> GetLastValueOf(<span class=\"string\">&#x27;EXPIRES&#x27;</span>, S) <span class=\"keyword\">then</span> <span class=\"comment\">&#123;Do not Localize&#125;</span></span><br><span class=\"line\">    <span class=\"keyword\">begin</span></span><br><span class=\"line\">      FPersistent := True;</span><br><span class=\"line\">      FExpires := StrToFloat(S);</span><br><span class=\"line\">    <span class=\"keyword\">end</span> <span class=\"keyword\">else</span></span><br><span class=\"line\">    <span class=\"keyword\">begin</span></span><br><span class=\"line\">      FPersistent := False;</span><br><span class=\"line\">      FExpires := EncodeDate(<span class=\"number\">9999</span>, <span class=\"number\">12</span>, <span class=\"number\">31</span>) + EncodeTime(<span class=\"number\">23</span>, <span class=\"number\">59</span>, <span class=\"number\">59</span>, <span class=\"number\">999</span>);</span><br><span class=\"line\">    <span class=\"keyword\">end</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> GetLastValueOf(<span class=\"string\">&#x27;DOMAIN&#x27;</span>, S) <span class=\"keyword\">then</span> <span class=\"comment\">&#123;Do not Localize&#125;</span></span><br><span class=\"line\">    <span class=\"keyword\">begin</span></span><br><span class=\"line\">             </span><br><span class=\"line\">      <span class=\"comment\">&#123;</span></span><br><span class=\"line\"><span class=\"comment\">        If the user agent is configured to reject &quot;public suffixes&quot; and</span></span><br><span class=\"line\"><span class=\"comment\">        the domain-attribute is a public suffix:</span></span><br><span class=\"line\"><span class=\"comment\">           If the domain-attribute is identical to the canonicalized</span></span><br><span class=\"line\"><span class=\"comment\">           request-host:</span></span><br><span class=\"line\"><span class=\"comment\">              Let the domain-attribute be the empty string.</span></span><br><span class=\"line\"><span class=\"comment\">           Otherwise:</span></span><br><span class=\"line\"><span class=\"comment\">              Ignore the cookie entirely and abort these steps.</span></span><br><span class=\"line\"><span class=\"comment\">           <span class=\"doctag\">NOTE:</span> A &quot;public suffix&quot; is a domain that is controlled by a</span></span><br><span class=\"line\"><span class=\"comment\">           public registry, such as &quot;com&quot;, &quot;co.uk&quot;, and &quot;pvt.k12.wy.us&quot;.</span></span><br><span class=\"line\"><span class=\"comment\">           This step is essential for preventing attacker.com from</span></span><br><span class=\"line\"><span class=\"comment\">           disrupting the integrity of example.com by setting a cookie</span></span><br><span class=\"line\"><span class=\"comment\">           with a Domain attribute of &quot;com&quot;.  Unfortunately, the set of</span></span><br><span class=\"line\"><span class=\"comment\">           public suffixes (also known as &quot;registry controlled domains&quot;)</span></span><br><span class=\"line\"><span class=\"comment\">           changes over time.  If feasible, user agents SHOULD use an</span></span><br><span class=\"line\"><span class=\"comment\">           up-to-date public suffix list, such as the one maintained by</span></span><br><span class=\"line\"><span class=\"comment\">           the Mozilla project at .</span></span><br><span class=\"line\"><span class=\"comment\">      &#125;</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> Length(S) &gt; <span class=\"number\">0</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"keyword\">begin</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> IsDomainMatch(AURI.Host, S) <span class=\"keyword\">then</span> <span class=\"keyword\">begin</span></span><br><span class=\"line\">        <span class=\"keyword\">Exit</span>;</span><br><span class=\"line\">      <span class=\"keyword\">end</span>;</span><br><span class=\"line\">      FHostOnly := False;</span><br><span class=\"line\">      FDomain := S;</span><br><span class=\"line\">    <span class=\"keyword\">end</span> <span class=\"keyword\">else</span></span><br><span class=\"line\">    <span class=\"keyword\">begin</span></span><br><span class=\"line\">      FHostOnly := True;</span><br><span class=\"line\">      FDomain := CanonicalizeHostName(AURI.Host);</span><br><span class=\"line\">    <span class=\"keyword\">end</span>;</span><br></pre></td></tr></table></figure>\n\n<p>Ошибка происходит если строка <strong>S</strong> после вызова <strong>GetLastValueOf(‘EXPIRES’, S)</strong> содержит что-нибудь (<strong>Length(S) &gt; 0</strong>), а GetLastValueOf(‘DOMAIN’, <strong>S)</strong> возвращает <strong>False</strong>.  </p>\n<p>Такое случается, если на вход <strong>TIdCookie.ParseServerCookie</strong> поступает строка <strong>ACookieText</strong> типа такой:  </p>\n<p>CookieName&#x3D;CookieValue;Path&#x3D;&#x2F;;Expires&#x3D;Wed, 20-Aug-2017 02:20:00 GMT;  </p>\n<p>Интересно, что ошибки бы не случилось, если бы параметр <strong>VValue</strong> у функции <strong>GetLastValueOf</strong> был объявлен как <strong>out</strong>, а не как <strong>var</strong>.  </p>\n<p><strong>Fix</strong>. Для исправления этого бага я сделал класс <strong>TVCookieManager</strong>, который служит заменой для <strong>TIdCookieManager</strong>. Взять можно тут: <a href=\"https://github.com/coolsoftware/VCookieManager\">https://github.com/coolsoftware/VCookieManager</a>.<br>Использовать так:  </p>\n<figure class=\"highlight pascal\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span></span><br><span class=\"line\">  FixedCookieManager: TVCookieManager;</span><br><span class=\"line\">  IdHTTP: TIdHTTP;</span><br><span class=\"line\">  </span><br><span class=\"line\">  ...</span><br><span class=\"line\">  </span><br><span class=\"line\">  FixedCookieManager := TVCookieManager.Create;</span><br><span class=\"line\">  IdHTTP := TIdHTTP.Create;</span><br><span class=\"line\">  IdHTTP.CookieManager := FixedCookieManager;</span><br></pre></td></tr></table></figure>\n\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["delphi","bug","XE2","Cookie","ParseServerCookie","баг"]},{"title":"MiniDLNA: refresh files and folders structure","url":"/2016/09/minidlna-refresh-files-and-folders/","content":"<p>Как обновить структуру файлов и каталогов в MiniDLNA:  </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo service minidlna stop</span><br><span class=\"line\">sudo <span class=\"built_in\">rm</span> -rf /var/cache/minidlna/files.db</span><br><span class=\"line\">sudo service minidlna restart</span><br></pre></td></tr></table></figure>\n\n<p>UPD.  </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo /etc/init.d/minidlna restart</span><br><span class=\"line\">sudo /etc/init.d/minidlna force-reload</span><br></pre></td></tr></table></figure>\n\n<p>UPD2  </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo minidlnad -R</span><br><span class=\"line\">sudo service minidlna restart</span><br></pre></td></tr></table></figure>\n\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["howto","Raspberry Pi","MiniDLNA"]},{"title":"ASUS Tinker Board","url":"/2018/01/asus-tinker-board/","content":"<p><a href=\"https://2.bp.blogspot.com/-KX8VQbtSdZA/Wlcbb5q53RI/AAAAAAAAAWc/ARpGSCurVVIYanGthZg0_0wEGOu0SFz6ACLcBGAs/s1600/IMG_20180111_114847.jpg\"><img src=\"https://2.bp.blogspot.com/-KX8VQbtSdZA/Wlcbb5q53RI/AAAAAAAAAWc/ARpGSCurVVIYanGthZg0_0wEGOu0SFz6ACLcBGAs/s320/IMG_20180111_114847.jpg\"></a></p>\n<p><a href=\"https://4.bp.blogspot.com/-nIROh1z1je8/WlcbbmovouI/AAAAAAAAAWY/o640qYZFhcwtZktO3iL80G1i2BbIKD28ACLcBGAs/s1600/IMG_20180111_115033.jpg\"><img src=\"https://4.bp.blogspot.com/-nIROh1z1je8/WlcbbmovouI/AAAAAAAAAWY/o640qYZFhcwtZktO3iL80G1i2BbIKD28ACLcBGAs/s320/IMG_20180111_115033.jpg\"></a></p>\n<p><a href=\"https://3.bp.blogspot.com/-TWLC_rSYh6M/WlcbbvIinoI/AAAAAAAAAWg/B8RFyxQ2y2cNWLJyR4ZnNFbHyaIVChQYQCLcBGAs/s1600/IMG_20180111_115045.jpg\"><img src=\"https://3.bp.blogspot.com/-TWLC_rSYh6M/WlcbbvIinoI/AAAAAAAAAWg/B8RFyxQ2y2cNWLJyR4ZnNFbHyaIVChQYQCLcBGAs/s320/IMG_20180111_115045.jpg\"></a></p>\n<p><a href=\"https://1.bp.blogspot.com/-TJDQ0sCC-RI/WlcbcsyJ5FI/AAAAAAAAAWk/uUeguZi6zZUiM_oQ-9LM424CU0XXx7SFACLcBGAs/s1600/IMG_20180111_115108.jpg\"><img src=\"https://1.bp.blogspot.com/-TJDQ0sCC-RI/WlcbcsyJ5FI/AAAAAAAAAWk/uUeguZi6zZUiM_oQ-9LM424CU0XXx7SFACLcBGAs/s320/IMG_20180111_115108.jpg\"></a></p>\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["ASUS","Tinker Board"]},{"title":"Связь GUI (web) и смарт-контракта.","url":"/2019/03/gui-web/","content":"<p>Видео-туториал тут: <a href=\"https://www.youtube.com/watch?v=hcTPjpPvas8\">https://www.youtube.com/watch?v=hcTPjpPvas8</a>  </p>\n<p>Парочка замечаний:  </p>\n<p>1. Устанавливать надо версию web3 0.20.6 (в версии 0.20.7 можем получить ошибку: Access to XMLHttpRequest at ‘<a href=\"http://localhost:8545/&#39;\">http://localhost:8545/&#39;</a> from origin ‘null’ has been blocked by CORS policy: Response to preflight request doesn’t pass access control check: The value of the ‘Access-Control-Allow-Origin’ header in the response must not be the wildcard ‘*‘ when the request’s credentials mode is ‘include’. The credentials mode of requests initiated by the XMLHttpRequest is controlled by the withCredentials attribute.)  </p>\n<p>2. Чтобы установился dist\\web3.min.js нужно при установке добавлять ключ –verbose.  </p>\n<p>Резюмируя: npm install <a href=\"mailto:&#119;&#101;&#98;&#x33;&#64;&#48;&#46;&#50;&#48;&#x2e;&#54;\">&#119;&#101;&#98;&#x33;&#64;&#48;&#46;&#50;&#48;&#x2e;&#54;</a> –save –verbose  </p>\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["ethereum","smart contract","web3"]},{"title":"Первый Smart Contract","url":"/2019/03/smart-contract/","content":"<p>Годное введение здесь: <a href=\"https://codeburst.io/build-your-first-ethereum-smart-contract-with-solidity-tutorial-94171d6b1c4b\">Build Your First Ethereum Smart Contract with Solidity</a>  </p>\n<p>Пара замечаний:  </p>\n<p>1. Для подсоединения к запущенной ноде надо использовать:  </p>\n<p>    geth attach ipc:\\\\.\\pipe\\geth.ipc  </p>\n<p>Если же просто выполнить geth attach, то получим ошибку: Unable to attach to remote geth: no known transport for URL scheme “c” (это верно для версии geth 1.8.23).  </p>\n<p>2. Mist лучше устанавливать 0.9.3, а не 0.11.1. В последнем при попытке вызвать методы созданного смарт контракта выводится ошибка: Couldn’t estimate gas, resorting to default parameters. Transaction is likely cheaper than the estimate. И в дальнейшем состояние “counter” контракта из примера не изменяется (остается всегда 5). В версии Mist 0.9.3 все OK.  </p>\n<p>Upd. Под Win10 Mist 0.11.1 работает OK. Правда, после установки Mist изругался: “Checksum mismatch in downloaded node. Please install the Geth node version 1.8.23 manually”. Пришлось переустанавливать geth. Причем, устанавливать надо 64-битную версию. Иначе при попытке запустить майнер можно получить ошибку: “Fatal Error:Not enough storage is available”  </p>\n<p>Полезные ссылки:  </p>\n<p>Go-Ethereum Management APIs: <a href=\"https://github.com/ethereum/go-ethereum/wiki/Management-APIs\">https://github.com/ethereum/go-ethereum/wiki/Management-APIs</a><br>Solidity 0.5.3 documentation: <a href=\"https://solidity.readthedocs.io/en/v0.5.3/contracts.html\">https://solidity.readthedocs.io/en/v0.5.3/contracts.html</a>  </p>\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["ethereum","smart contract","geth","mist"]},{"title":"Ethereum и PHP","url":"/2019/04/ethereum-php/","content":"<p>Полезные ссылки:  </p>\n<p>API client lib for communication with geth (go-ethereum) node<br><a href=\"https://github.com/petrhejna/geth-jsonrpc-php-client\">https://github.com/petrhejna/geth-jsonrpc-php-client</a>  </p>\n<p>PHP interface to Ethereum JSON-RPC API<br><a href=\"https://github.com/digitaldonkey/ethereum-php\">https://github.com/digitaldonkey/ethereum-php</a>  </p>\n<p>A php interface for interacting with the Ethereum blockchain and ecosystem<br><a href=\"https://github.com/sc0Vu/web3.php\">https://github.com/sc0Vu/web3.php</a>  </p>\n<p>Устанавливаются библиотеки с пом. композера, брать его тут: <a href=\"https://getcomposer.org/\">https://getcomposer.org/</a>  </p>\n<p>Подключается установленная с пом. композера либа так:  </p>\n<p>&amp;#60;?php require_once __DIR__ . ‘&#x2F;vendor&#x2F;autoload.php’; ?&amp;#62;  </p>\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["ethereum","smart contract","PHP"]},{"title":"OddEven Game (Smart Contract)","url":"/2019/04/oddeven-game-smart-contract/","content":"<div style=\"text-align: left;\">Для изучения смарт-контрактов и возможностей написания приложений с их использованием, написал простенькую игру: \"Чет-Нечет\" (Odd-Even).</div>\n\n<p>Тут: <a href=\"http://oddeven.coolsoftware.ru/web3/\">http://oddeven.coolsoftware.ru/web3/</a></p>\n<p><strong>Update.</strong> Игра больше недоступна. Исходники, если будет время, опубликую на github.</p>\n<h3 id=\"Правила\"><a href=\"#Правила\" class=\"headerlink\" title=\"Правила\"></a>Правила</h3><p>В игре участвуют двое: “банкир” и игрок. За банкира играет сервис на PHP.<br>Банкир загадывает число, и записывает в смарт-контракт хэш от него. Затем игрок вводит свое число, которое отправляется в смарт-контракт. Потом “банкир” сообщает смарт-контракту загаданное им число (которое должно совпасть с хэшем). В конце определяется победитель: если игрок и банкир оба загадали четное число, или оба загадали нечетное число (иными словами: игрок угадал, загадал ли банкир четное число или нечетное), то выиграл игрок. Иначе выиграл банкир.</p>\n<p>Смарт-контракт опубликован в тестовой сети rinkeby: <a href=\"https://rinkeby.etherscan.io/address/0x7a21ff65b1c509c2236aeaad47e1c938e6dd921c\">https://rinkeby.etherscan.io/address/0x7a21ff65b1c509c2236aeaad47e1c938e6dd921c</a></p>\n<p>Для игры игроку нужно установить MetaMask (<a href=\"https://metamask.io/\">https://metamask.io/</a>) и завести аккаунт в сети rinkeby. Получить (бесплатно) ETH в этой тестовой сети можно тут: <a href=\"https://www.rinkeby.io/#faucet\">https://www.rinkeby.io/#faucet</a></p>\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["ethereum","smart contract","oddeven","rinkeby"]},{"title":"Request ETH (rinkeby)","url":"/2019/04/request-eth-rinkeby/","content":"<p>Получить ETH в тестовой сети rinkeby можно тут: <a href=\"https://www.rinkeby.io/#faucet\">https://www.rinkeby.io/#faucet</a><br>Надо указать ссылку на пост с адресом для получения, типа такого: <a href=\"https://twitter.com/vit_cs/status/1119231148654301184\">https://twitter.com/vit_cs&#x2F;status&#x2F;1119231148654301184</a><br>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["ethereum","rinkeby","faucet"]},{"title":"Angular First App","url":"/2019/06/angular-first-app/","content":"<p>Хорошее введение в Angular: <a href=\"https://code.tutsplus.com/series/creating-your-first-angular-app--cms-1248\">https://code.tutsplus.com/series/creating-your-first-angular-app--cms-1248</a>  </p>\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["Angular"]},{"title":"Install/Update Skype for CentOS 7","url":"/2019/12/installupdate-skype-for-centos-7/","content":"<h4 id=\"Install-x2F-Update-Skype-for-CentOS-7\"><a href=\"#Install-x2F-Update-Skype-for-CentOS-7\" class=\"headerlink\" title=\"Install&#x2F;Update Skype for CentOS 7\"></a>Install&#x2F;Update Skype for CentOS 7</h4><ol>\n<li>wget <a href=\"https://go.skype.com/skypeforlinux-64.rpm\">https://go.skype.com/skypeforlinux-64.rpm</a></li>\n<li>sudo yum localinstall .&#x2F;skypeforlinux-64.rpm</li>\n</ol>\n<p>Если после обновления Skype не стартует, то выполняем в терминале:</p>\n<ul>\n<li>&#x2F;usr&#x2F;share&#x2F;skypeforlinux&#x2F;skypeforlinux</li>\n</ul>\n<p>Если видим результат типа такого:</p>\n<ul>\n<li>[4154:1230&#x2F;082038.483647:FATAL:setuid_sandbox_host.cc(157)] The SUID sandbox helper binary was found, but is not configured correctly. Rather than run without sandboxing I’m aborting now. You need to make sure that &#x2F;usr&#x2F;share&#x2F;skypeforlinux&#x2F;chrome-sandbox is owned by root and has mode 4755.</li>\n</ul>\n<p>то выполняем:</p>\n<ul>\n<li>sudo chmod 4755 &#x2F;usr&#x2F;share&#x2F;skypeforlinux&#x2F;chrome-sandbox</li>\n</ul>\n<p> </p>\n<p>В результате права будут изменены с -rw<strong>x</strong>r-xr-x на -rw<strong>s</strong>r-xr-x (“s” means “suid” - takes the rights of user or group when executed).  </p>\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["CentOS","Skype"]},{"title":"Полезные ссылки (Data Processing)","url":"/2020/03/data-processing/","content":"<p>Полезные ссылки. Загрузка&#x2F;обработка данных, bigdata, machine learning, etc:  </p>\n<ul>\n<li><a href=\"https://www.tensorflow.org/\">TensorFlow: end-to-end open source machine learning platform</a></li>\n<li><a href=\"https://pandas.pydata.org/\">Pandas: open source data analysis and manipulation tool (Python)</a></li>\n<li><a href=\"https://www.elastic.co/\">Elasticsearch: search engine based on the Lucene library</a></li>\n<li><a href=\"https://lucene.apache.org/\">Lucene: Java library providing powerful indexing and search feature</a></li>\n<li><a href=\"https://www.elastic.co/blog/importing-csv-and-log-data-into-elasticsearch-with-file-data-visualizer\">Importing CSV and Log Data into Elasticsearch with File Data Visualizer</a></li>\n<li><a href=\"https://medium.com/liveramp-engineering/using-machine-learning-to-auto-detect-column-types-in-customer-files-80413c976a1e\">Using Machine Learning to Auto Detect Column Types in Customer Files</a></li>\n<li><a href=\"https://keras.io/\">Keras: The Python Deep Learning library</a></li>\n</ul>\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["полезные ссылки","bigdata","machine learning"]},{"title":"Полезные ссылки (Администрирование Linux)","url":"/2019/12/useful-links/","content":"<p>Полезные ссылки. Установка, администрирование Linux&#x2F;CentOS, Apache, PHP, Git:  </p>\n<ul>\n<li><a href=\"https://www.digitalocean.com/community/tutorials/how-to-install-the-apache-web-server-on-centos-7\">How To Install the Apache Web Server on CentOS 7</a></li>\n<li><a href=\"https://www.digitalocean.com/community/questions/trying-to-install-latest-php-version-on-centos-7\">Install Latest PHP version on CentOS 7</a></li>\n<li><a href=\"https://www.digitalocean.com/community/tutorials/how-to-set-up-mod_rewrite-for-apache-on-centos-7\">How To Set Up mod_rewrite for Apache on CentOS 7</a></li>\n<li><a href=\"https://www.youtube.com/watch?reload=9&v=_WOKRaM-HI4\">Security-Enhanced Linux for mere mortals</a> (Video)</li>\n<li><a href=\"https://www.digitalocean.com/community/questions/proper-permissions-for-web-server-s-directory\">Proper permissions for web server’s directory</a></li>\n<li><a href=\"https://www.digitalocean.com/community/tutorials/how-to-create-a-sudo-user-on-centos-quickstart\">Steps to Create a New Sudo User</a></li>\n<li><a href=\"https://www.digitalocean.com/community/tutorials/how-to-secure-apache-with-let-s-encrypt-on-centos-7\">How To Secure Apache with Let’s Encrypt on CentOS 7</a></li>\n<li><a href=\"https://gist.github.com/Nilpo/8ed5e44be00d6cf21f22\">Using Git to Manage a Live Web Site</a></li>\n<li><a href=\"https://help.github.com/en/github/using-git\">Git: Using Git (Help)</a></li>\n<li><a href=\"https://www.git-tower.com/learn/git/faq/track-remote-upstream-branch\">Git: How can I tell a local branch to track a remote branch?</a></li>\n<li><a href=\"https://unix.stackexchange.com/questions/230673/how-to-generate-a-random-string\">How to generate a random string (from shell)?</a></li>\n<li><a href=\"https://tecadmin.net/install-latest-nodejs-and-npm-on-centos/\">How to install latest NodeJS on CentOS</a></li>\n<li><a href=\"https://medium.com/@bipul.k.kuri/install-latest-gcc-on-centos-linux-release-7-6-a704a11d943d\">Install latest GCC from source on Centos Linux release</a></li>\n<li><a href=\"https://www.archlinux.org/\">Arch Linux</a></li>\n<li><a href=\"https://www.digitalocean.com/community/tutorials/how-to-set-up-and-configure-an-openvpn-server-on-centos-7\">How To Set Up and Configure an OpenVPN Server on CentOS 7</a> </li>\n<li><a href=\"https://www.digitalocean.com/community/tutorials/how-to-set-up-a-firewall-using-firewalld-on-centos-7\">How To Set Up a Firewall Using FirewallD on CentOS 7</a></li>\n<li><a href=\"https://ideaman924.com/2020/02/10/using-tinc-to-get-around-double-nat.html\">Using tinc to get around double-NAT</a></li>\n<li><a href=\"https://www.cloud2help.com/how-to-install-and-configure-tinc-vpn/\">How to install and configure tinc vpn</a></li>\n<li><a href=\"https://www.digitalocean.com/community/tutorials/how-to-install-tinc-and-set-up-a-basic-vpn-on-ubuntu-14-04\">How To Install Tinc and Set Up a Basic VPN on Ubuntu 14.04</a></li>\n<li><a href=\"https://medium.com/@vi1996ash/steps-to-build-apache-web-server-docker-image-1a2f21504a8e\">Steps to Build Apache Web Server Docker Image</a></li>\n<li><a href=\"https://semaphoreci.com/community/tutorials/dockerizing-a-php-application\">Dockerizing a PHP Application</a></li>\n<li><a href=\"https://linuxhint.com/lamp_server_docker/\">Set up a LAMP server with Docker</a></li>\n<li><a href=\"https://tecadmin.net/install-mysql-8-on-centos/\">How to install MySQL 8.0 on CentOS 7&#x2F;6 &amp; Fedore 31&#x2F;30</a></li>\n<li><a href=\"https://www.digitalocean.com/community/tutorials/how-to-use-apache-http-server-as-reverse-proxy-using-mod_proxy-extension\">How To Use Apache HTTP Server As Reverse-Proxy Using mod_proxy Extension</a></li>\n<li><a href=\"https://www.tecmint.com/open-port-for-specific-ip-address-in-firewalld/\">How to Open Port for a Specific IP Address in Firewalld</a> </li>\n<li><a href=\"https://habr.com/ru/post/275643/\">Как в первый раз запустить i2pd: инструкция под Debian&#x2F;Ubuntu</a> (прим.: в дополнение к указанным в инструкции либам, нужно установить apt-get install zlib1g-dev)</li>\n<li><a href=\"https://docs.mongodb.com/manual/tutorial/install-mongodb-on-red-hat/\">Install MongoDB Community Edition on Red Hat or CentOS</a></li>\n<li><a href=\"https://www.digitalocean.com/community/tutorials/how-to-install-and-configure-vnc-remote-access-for-the-gnome-desktop-on-centos-7\">How To Install and Configure VNC Remote Access for the GNOME Desktop on CentOS 7</a></li>\n<li><a href=\"https://blog.f2h.cloud/how-to-setup-an-exim-email-server-using-centos-7/\">How To Setup An Exim Email Server Using CentOS 7</a></li>\n<li><a href=\"https://medium.com/@porteneuve/how-to-make-git-preserve-specific-files-while-merging-18c92343826b\">How to make Git preserve specific files while merging</a></li>\n</ul>\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["Linux","полезные ссылки","CentOS","PHP","Apache","Git.","links"]},{"title":"Полезные ссылки (Книги, обучение)","url":"/2020/04/blog-post/","content":"<p>Полезные ссылки. Книги, курсы, обучающее видео:  </p>\n<ul>\n<li><a href=\"https://ru.wikibooks.org/\">Викиучебник</a></li>\n<li><a href=\"https://github.com/EbookFoundation/free-programming-books\">Free Programming Books on GitHub</a></li>\n<li><a href=\"https://github.com/danistefanovic/build-your-own-x\">Build your own X on GitHub</a></li>\n<li><a href=\"https://github.com/freeCodeCamp/freeCodeCamp\">freeCodeCamp</a></li>\n</ul>\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["полезные ссылки","books","книги"]},{"title":"Howto (rpi, tinkerboard, linux, arm)","url":"/2020/04/howto-rpi-tinkerboard-linux-arm/","content":"<h4 id=\"Display-Raspberry-Pi-ARM-CPU-temperature\"><a href=\"#Display-Raspberry-Pi-ARM-CPU-temperature\" class=\"headerlink\" title=\"Display Raspberry Pi ARM CPU temperature\"></a>Display Raspberry Pi ARM CPU temperature</h4><p>cat &#x2F;sys&#x2F;class&#x2F;thermal&#x2F;thermal_zone0&#x2F;temp  </p>\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["arm","Linux","rpi","tinkerboard","howto"]},{"title":"Howto (Windows)","url":"/2020/04/howto-windows/","content":"<h3 id=\"Persistent-SUBST-Registry-Entry\"><a href=\"#Persistent-SUBST-Registry-Entry\" class=\"headerlink\" title=\"Persistent SUBST (Registry Entry)\"></a>Persistent SUBST (Registry Entry)</h3><figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">[HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\DOS Devices]</span><br><span class=\"line\">&quot;X:&quot;=&quot;\\\\??\\\\C:\\\\DiskX&quot;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"CURL-POST-via-proxy-Fiddler\"><a href=\"#CURL-POST-via-proxy-Fiddler\" class=\"headerlink\" title=\"CURL POST via proxy (Fiddler)\"></a>CURL POST via proxy (Fiddler)</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">curl https://localhost -x 127.0.0.1:8888 --ssl-no-revoke -X POST -d <span class=\"string\">&quot;key1=param1&amp;key2=param2&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["howto","windows"]},{"title":"Полезные ссылки (Windows)","url":"/2020/04/windows/","content":"<p>Полезные ссылки. Установка, администрирование, софт под Windows:  </p>\n<ul>\n<li><a href=\"https://www.visualsvn.com/\">VisualSVN - Subversion for Windows</a></li>\n<li><a href=\"https://bonobogitserver.com/\">Bonobo Git Server for Windows</a> </li>\n<li><a href=\"https://docs.microsoft.com/ru-ru/windows/wsl/install-win10\">Установка Windows Subsystem Linux (Windows 10)</a> </li>\n<li><a href=\"https://developer.microsoft.com/en-us/windows/downloads/virtual-machines/\">Windows 11 development environment (VMWare, Hyper-V, VirtualBox, Parallels)</a></li>\n</ul>\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["полезные ссылки","windows"]},{"title":"Полезные ссылки (Node.js, Redis, React, Bootstrap)","url":"/2020/06/nodejs/","content":"<p>Полезные ссылки. Node.js:  </p>\n<ul>\n<li><a href=\"https://medium.com/@maheshkumawat_83392/node-js-design-patterns-singleton-pattern-series-1-1e0ab71e3edf\">Node.js Design Patterns - Singleton pattern (Series - 1)</a> </li>\n<li><a href=\"https://medium.com/@pankaj.panigrahi/list-of-node-js-articles-ededa6dd304b\">List of Node.js Articles</a> </li>\n<li><a href=\"https://habr.com/ru/company/ruvds/blog/437984/\">Многопоточность в Node.js: модуль worker_threads</a></li>\n<li><a href=\"https://github.com/nodejs/node-addon-api\">Node Addon API</a></li>\n</ul>\n<p>Полезные ссылки. Redis:  </p>\n<ul>\n<li><a href=\"https://www.digitalocean.com/community/tutorial_series/how-to-manage-a-redis-database\">How To Manage a Redis Database</a></li>\n</ul>\n<p> </p>\n<p>Полезные ссылки. React:  </p>\n<ul>\n<li><a href=\"https://reactrouter.com/\">React Router</a></li>\n<li><a href=\"https://react-bootstrap.github.io/\">React Bootstrap</a></li>\n<li><a href=\"https://blog.logrocket.com/how-to-use-bootstrap-with-react-a354715d1121/\">React Bootstrap tutorial (LogRocket)</a></li>\n<li><a href=\"https://blog.logrocket.com/patterns-for-data-fetching-in-react-981ced7e5c56/\">Patterns for data fetching in React</a></li>\n<li><a href=\"https://www.digitalocean.com/community/tutorials/react-axios-react\">How to use Axios with React</a></li>\n<li><a href=\"https://en.reactjs.org/docs/react-component.html\">React.Component (Lifecycle, Reference)</a></li>\n<li><a href=\"https://dev.to/mr_frontend/absolute-imports-in-create-react-app-3ge8\">Absolute imports in Create React App</a></li>\n</ul>\n<p>Полезные ссылки. Bootstrap, Font Awesome, Material Design:  </p>\n<ul>\n<li><a href=\"https://bootsnipp.com/\">Bootsnipp (Design elements, playground and code snippets for Bootstrap)</a></li>\n<li><a href=\"https://fontawesome.com/\">Font Awesome</a></li>\n<li><a href=\"https://github.com/FortAwesome/react-fontawesome\">React Font Awesome (github)</a></li>\n<li><a href=\"https://mdbootstrap.com/\">Material Design for Bootstrap</a></li>\n</ul>\n<p>Полезные ссылки. Development:</p>\n<ul>\n<li><a href=\"https://jonathanbossenger.com/setting-up-trusted-ssl-certificates-for-local-development-using-mkcert-on-ubuntu-18-04-with-apache/\">Setting up Trusted SSL Certificates for Local Development, Using mkcert on Ubuntu 18.04 with Apache</a></li>\n</ul>\n<p>Полезные ссылки. Tutorials &amp; Examples:</p>\n<ul>\n<li><a href=\"https://jasonwatmore.com/post/2019/04/06/react-jwt-authentication-tutorial-example\">React (without Redux) - JWT Authentication Tutorial &amp; Example</a></li>\n</ul>\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["полезные ссылки","Node.js","Bootstrap","React","Redis"]},{"title":"vsftpd: 530 Login incorrect","url":"/2020/08/vsftpd-530-login-incorrect/","content":"<p>Аккаунт для доступа по ftp лучше (imho) делать без доступа к шелу:</p>\n<p>useradd ftpuser -s &#x2F;sbin&#x2F;nologin</p>\n<p>или, если пользователь уже есть:</p>\n<p>usermod -s &#x2F;sbin&#x2F;nologin ftpuser</p>\n<p>Но при этом получаем ошибку: 530 Login incorrect</p>\n<p>Причина: в соответствии с настройками в &#x2F;etc&#x2F;pam.d&#x2F;vsftpd пользователь должен иметь шел, перечисленный в &#x2F;etc&#x2F;shells. &#x2F;sbin&#x2F;nologin, разумеется, в &#x2F;etc&#x2F;shells не содержится.</p>\n<p>Фикс: комментируем следующую строчку в &#x2F;etc&#x2F;pam.d&#x2F;vsftpd:</p>\n<p>#auth       required    pam_shells.so</p>\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["Linux","CentOS","ftp"]},{"title":"Run minidlna after mount external usb drive on Raspberry Pi","url":"/2020/10/run-minidlna-after-mount-external-usb/","content":"<p>Предполагаю, что монтируется диск с UUID&#x3D;a1234567 в &#x2F;mnt&#x2F;hdd1. Т.е. соответствующая строка в &#x2F;etc&#x2F;fstab выглядит так:</p>\n<p>UUID&#x3D;a1234567    &#x2F;mnt&#x2F;hdd1       ext4    defaults    0       0</p>\n<p>Для получения UUID диска можно воспользоваться командой: sudo blkid  </p>\n<p>1. Удаляем (или комментируем) соотв. строку в fstab.</p>\n<p>2. Создаем файл &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;mnt-hdd1.mount со следующим содержанием:</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=Mount HDD1</span><br><span class=\"line\">[Mount]</span><br><span class=\"line\">What=/dev/disk/by-uuid/a1234567</span><br><span class=\"line\">Where=/mnt/hdd1</span><br><span class=\"line\">Type=ext4</span><br><span class=\"line\">Options=defaults</span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>\n\n<p>3. Разрешаем сервис mnt-hdd1.mount:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo systemctl <span class=\"built_in\">enable</span> mnt-hdd1.mount</span><br></pre></td></tr></table></figure>\n\n<p>4. Проверяем статус:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo systemctl status mnt-hdd1.mount</span><br></pre></td></tr></table></figure>\n\n<p>5. Если не запущен, то запускаем:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo systemctl start mnt-hdd1.mount</span><br></pre></td></tr></table></figure>\n\n<p>6 Создаем файл &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;minidlna.service. Добавляем в него следующие строки:</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=Minidlna Daemon</span><br><span class=\"line\">After=mnt-hdd1.mount</span><br><span class=\"line\">Wants=mnt-hdd1.mount</span><br><span class=\"line\">[Service]</span><br><span class=\"line\">Type=forking</span><br><span class=\"line\"># Uncomment the line below for 60 seconds delay.</span><br><span class=\"line\"># ExecStartPre=/bin/sleep 60</span><br><span class=\"line\">ExecStart=/etc/init.d/minidlna start</span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>\n\n<p>7. Разрешаем сервис minidlna.service:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo systemctl <span class=\"built_in\">enable</span> minidlna</span><br></pre></td></tr></table></figure>\n\n<p>8. Перегружаемся, проверяем:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">df</span> -h</span><br><span class=\"line\">sudo systemctl status minidlna</span><br></pre></td></tr></table></figure>\n\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["howto","Raspberry Pi","MiniDLNA"]},{"title":"Музыка","url":"/2021/01/blog-post/","content":"<ul>\n<li><a href=\"https://www.youtube.com/channel/UCi8PYKXskV03qxQrnrtiGSA\">Richard Clayderman Official</a> ♫</li>\n<li><a href=\"https://www.youtube.com/channel/UC2nZQ2dqSKX4p57wvGd-CNQ\">Giovanni Marradi</a> ♫</li>\n<li><a href=\"https://www.youtube.com/user/PaulMauriatOrchestra\">Paul Mauriat Orchestra</a> ♪</li>\n<li><a href=\"https://www.youtube.com/channel/UCcl2oWfsQ1vw1MxjLJrg-VQ\">James Last</a> ♫</li>\n<li><a href=\"https://www.youtube.com/channel/UCORIeT1hk6tYBuntEXsguLg\">Postmodern Jukebox</a> ♫</li>\n<li><a href=\"https://www.youtube.com/channel/UCTXlhnrVPzP-Zn1wx34PsoQ\">Zade Dirani</a> ♫</li>\n<li><a href=\"https://www.youtube.com/channel/UC09GemGjss3hPdljwtJ8TPA\">HAUSER</a> ♫</li>\n<li><a href=\"https://www.youtube.com/channel/UCb4JB8-ZAeceuR7EPCPOPzg\">Andrea Bocelli</a> ♫</li>\n<li><a href=\"https://www.youtube.com/channel/UC64g_JAKLbk6W9EOEs4cnzg\">Meloman Classic</a> ♫</li>\n<li><a href=\"https://www.youtube.com/channel/UC1_jMA0PFDrPGCUvjJqkWcQ\">經典音樂 - Chinese musical instruments</a> ♫</li>\n<li><a href=\"https://www.youtube.com/watch?v=w5fwc0uuaG8\">Sweet Memories Love Songs 70s 80s 90s</a> ♪</li>\n<li><a href=\"https://www.youtube.com/watch?v=bdroVLrNpT0\">Michael Learns To Rock Greatest Hits Full Album</a> ♪</li>\n<li><a href=\"https://www.youtube.com/watch?v=n4ULPHF3gps\">中国乐器 - Traditional Chinese Music</a> ♪</li>\n<li><a href=\"https://www.youtube.com/channel/UCUAwOBo-ZZ8S8cIH0SGoXpg\">Ennio Morricone</a> ♫</li>\n<li><a href=\"https://www.youtube.com/watch?v=EGcXF0iG-2s\">Interstellar - Main Theme</a> ♪</li>\n<li><a href=\"https://www.youtube.com/watch?v=_ZlFOZMPbdY\">Boogie Woogie Queen Shows Up For An Epic Jam</a> ♪</li>\n<li><a href=\"https://www.youtube.com/watch?v=gYmAzwQPfdY\">Jivan Gasparyan</a> ♪</li>\n<li><a href=\"https://www.youtube.com/watch?v=JY6wp6CiyDg\">Best of Ocarina</a> ♪</li>\n<li><a href=\"https://www.youtube.com/@andrerieu\">André Rieu</a> ♫</li>\n<li><a href=\"https://www.youtube.com/channel/UCa7Lp1fKyxNhii0qtlzv8Pw\">Marion &amp; Sobo Band</a> ♫</li>\n<li><a href=\"https://www.youtube.com/channel/UCb5P0iSygqwPZF7zBxMdi4w\">Yanni</a> ♫</li>\n<li><a href=\"https://www.youtube.com/watch?v=uW2znz6t68Y\">Italian Classical Music</a> ♪</li>\n<li><a href=\"https://www.youtube.com/@ArmikOfficial\">Armik</a> ♫</li>\n<li><a href=\"https://www.youtube.com/channel/UCvPj1qA4lPWAud3Hnrs5YTA\">Secret Garden</a> ♫</li>\n<li><a href=\"https://www.youtube.com/watch?v=f0qunJ1WhMY\">Deep Healing Music for The Body, Soul and Spirit - DNA Repair 432 Hz</a> ♪</li>\n<li><a href=\"https://www.youtube.com/watch?v=-ScjucUV8v0\">Christina Aguilera - Candyman (Official Video)</a> ♪</li>\n<li><a href=\"https://www.youtube.com/watch?v=XJ_DNHXiJSo\">Christina Aguilera, Lil Kim, P!nk &amp; Mýa Perform “Lady Marmalade”</a> ♪</li>\n<li><a href=\"https://www.youtube.com/watch?v=r48BLz42NuI\">Pink Floyd - The Wall (Full Album) 1979</a> ♪</li>\n<li><a href=\"https://www.youtube.com/watch?v=f-GDS7RBfn8\">PINK FLOYD LIVE AT POMPEII HD FULL LIVE CONCERT</a> ♪</li>\n<li><a href=\"https://www.youtube.com/channel/UC7fzrpTArAqDHuB3Hbmd_CQ\">Whitney Houston</a> ♫</li>\n<li><a href=\"https://www.youtube.com/watch?v=qrTXVOPVSIg\">Jean Jacques Lafon Best Of Album 2021</a> ♪</li>\n<li><a href=\"https://www.youtube.com/watch?v=QvJp2mTr5h8\">Handel “Passacaglia” from Suite No 7 in G-minor.</a> (<a href=\"https://www.youtube.com/@OlegPereverzev\">Oleg Pereverzev</a>) ♪</li>\n<li><a href=\"https://www.youtube.com/channel/UCbtTjg8XzmTeeVjIeg8ksBQ\">Il Volo Official</a> ♫</li>\n<li><a href=\"https://www.youtube.com/channel/UCcv0QtStqV8pXd1_SrC2G7w\">Juliette Armanet</a> ♫</li>\n<li><a href=\"https://www.youtube.com/channel/UCWuwJ4d2RjvVLOAOuVAO4Vw\">Монах Авель</a> ♫</li>\n<li><a href=\"https://www.youtube.com/channel/UCBLCAG6Q4x0AOQKuJ9Y0l5A\">Brian Crain</a> ♫</li>\n<li><a href=\"https://www.youtube.com/@AshtonShepherdVEVO\">Ashton Shepherd</a> ♫</li>\n<li><a href=\"https://www.youtube.com/watch?v=DtMi4Egoz8M\">Tarena - Into the bright horizon</a> ♪</li>\n<li><a href=\"https://www.youtube.com/watch?v=9XlNbQv_Rg4\">Warmen - Salieri Strikes Back</a> ♪</li>\n<li><a href=\"https://www.youtube.com/watch?v=2rF5Kvr9pVo\">Yngwie Malmsteen - Icarus’ Dream Suite Op. 4 (Japanese Philharmonic Orchestra)</a> ♪</li>\n<li><a href=\"https://www.youtube.com/watch?v=2rF5Kvr9pVo\">Yngwie Malmsteen - Trilogy Suite Op: 5</a> ♪</li>\n</ul>\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["музыка","хобби"]},{"title":"Howto start avahi-daemon on WSL2","url":"/2021/03/howto-start-avahi-daemon-on-wsl2/","content":"<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">~$ sudo service dbus start</span><br><span class=\"line\"> * Starting system message bus dbus                              [ OK ]</span><br><span class=\"line\">~$ sudo service avahi-daemon start</span><br><span class=\"line\"> * Starting Avahi mDNS/DNS-SD Daemon avahi-daemon                [ OK ]</span><br></pre></td></tr></table></figure>\n\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["howto","avahi","wsl2"]},{"title":"Mikrotik Multicast","url":"/2021/03/mikrotik-multicast/","content":"<p>У роутера MikroTik проявилась особенность: когда комп подключен в сеть по Wi-Fi, mDNS то работает, то не работает. Т.е. avahi-resolve то резолвит имя подключенного в той же сетке Raspberry Pi с установленным avahi, то нет. Сложилось впечатление, что теряются пакеты. В итоге выяснилось, что так оно и есть. Проблема решается включением Multicast Helper &#x3D; “full” в настройках интерфейса wlan:</p>\n<p><a href=\"https://1.bp.blogspot.com/-jg9yFx-_QrI/YFneS-V8YKI/AAAAAAAAAcQ/8ju1nMvXgWQFf8SY-vslY1BbmZrTZLcugCLcBGAsYHQ/s865/mikrotik-multicast.png\"><img src=\"https://1.bp.blogspot.com/-jg9yFx-_QrI/YFneS-V8YKI/AAAAAAAAAcQ/8ju1nMvXgWQFf8SY-vslY1BbmZrTZLcugCLcBGAsYHQ/w400-h300/mikrotik-multicast.png\"></a></p>\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["howto","avahi","mDNS","MikroTik"]},{"title":"Cross-platform Development","url":"/2021/07/cross-platform-development/","content":"<p>Cross-platform Development (Windows, Linux, WSL2)</p>\n<ul>\n<li><a href=\"https://winaero.com/how-to-install-linux-kernel-update-for-wsl-2-in-windows-10/\">How to Install Linux kernel update for WSL 2 in Windows 10</a></li>\n<li><a href=\"https://code.visualstudio.com/docs/remote/wsl\">Developing in WSL</a></li>\n<li><a href=\"https://code.visualstudio.com/docs/cpp/config-linux\">Using C++ on Linux in VS Code</a></li>\n<li><a href=\"https://code.visualstudio.com/docs/cpp/cmake-linux\">Get started with CMake Tools on Linux</a></li>\n<li><a href=\"https://devblogs.microsoft.com/cppblog/build-and-debug-c-with-wsl-2-distributions-and-visual-studio-2022/\">Build and Debug C++ with WSL 2 Distributions and Visual Studio 2022</a></li>\n</ul>\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["полезные ссылки","wsl2"]},{"title":"Developing in Go","url":"/2021/07/developing-in-go/","content":"<p>Developing in Go  </p>\n<ul>\n<li><p><a href=\"https://eli.thegreenplace.net/2021/rest-servers-in-go-part-1-standard-library/\">REST Servers in Go</a> (Eli Bendersky’s website) Есть <a href=\"https://habr.com/ru/company/ruvds/blog/559816/\">перевод</a>.</p>\n</li>\n<li><p><a href=\"https://github.com/chromedp/chromedp\">chromedp</a> Package chromedp is a faster, simpler way to drive browsers supporting the Chrome DevTools Protocol in Go without external dependencies (<a href=\"https://pkg.go.dev/github.com/chromedp/chromedp#section-documentation\">documentation</a>).</p>\n</li>\n</ul>\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["полезные ссылки","go"]},{"title":"Install php-mongodb for PHP 7.3 on CentOS 7","url":"/2021/08/install-php-mongodb-for-php-73-on/","content":"<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">yum install -y php73-php-devel php73-php-pear</span><br><span class=\"line\">sudo /opt/remi/php73/root/usr/bin/pecl install mongodb</span><br><span class=\"line\"><span class=\"built_in\">cp</span> /opt/remi/php73/root/usr/lib64/php/modules/mongodb.so /usr/lib64/php/modules/</span><br><span class=\"line\"><span class=\"built_in\">chmod</span> +x /usr/lib64/php/modules/mongodb.so</span><br><span class=\"line\"><span class=\"built_in\">echo</span> extension=mongodb.so &gt; /etc/php.d/20-mongodb.ini</span><br></pre></td></tr></table></figure>\n\n<p><strong>UPD</strong>. Альтернативный вариант:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">yum install --enablerepo=remi,remi=php73 install php-pear php-devel</span><br><span class=\"line\">sudo pecl install mongodb</span><br><span class=\"line\"><span class=\"built_in\">echo</span> extension=mongodb &gt; /etc/php.d/30-mongodb.ini</span><br></pre></td></tr></table></figure>\n\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["howto","CentOS","PHP","mongo"]},{"title":"Если SELinux препятствует подключению к mongodb (и к другим сетевым сервисам) из Apache, то","url":"/2021/08/selinux-mongodb-apache/","content":"<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">setsebool -P httpd_can_network_connect on</span><br></pre></td></tr></table></figure>\n\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["Apache","SELinux"]},{"title":"ffmpeg - convert mkv to mp4","url":"/2021/10/ffmpeg-convert-mkv-to-mp4/","content":"<p>Сменить контейнер, без смены кодека:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">ffmpeg -i source.mkv -codec copy output.mp4</span><br></pre></td></tr></table></figure>\n\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["howto","ffmpeg","mkv","mp4"]},{"title":"Полезные ссылки (Best Practics)","url":"/2021/11/best-practics/","content":"<p>Как-то я начал коллекционировать “<a href=\"/search/label/%D0%BF%D0%BE%D0%BB%D0%B5%D0%B7%D0%BD%D1%8B%D0%B5%20%D1%81%D1%81%D1%8B%D0%BB%D0%BA%D0%B8\">Полезные ссылки</a>“. В настоящий момент они разбиты на 10 тем:</p>\n<ul>\n<li><a href=\"/2019/12/useful-links/\">Полезные ссылки (Администрирование Linux)</a></li>\n<li><a href=\"/2020/03/data-processing/\">Полезные ссылки (Data Processing)</a></li>\n<li><a href=\"/2020/04/blog-post/\">Полезные ссылки (Книги, обучение)</a></li>\n<li><a href=\"/1970/01/rpi-tinkerboard-linux-arm/\">Полезные ссылки (rpi, tinkerboard, linux, arm)</a></li>\n<li><a href=\"/2020/04/windows/\">Полезные ссылки (Windows)</a></li>\n<li><a href=\"/2020/06/nodejs/\">Полезные ссылки (Node.js, Redis, React, Bootstrap)</a></li>\n<li><a href=\"/1970/01/eosio/\">Полезные ссылки (EOSIO)</a></li>\n<li><a href=\"/2021/07/cross-platform-development/\">Cross-platform Development</a></li>\n<li><a href=\"/2021/07/developing-in-go/\">Developing in Go</a></li>\n<li><a href=\"/2021/11/web-development-design/\">Web Development &amp; Design</a></li>\n</ul>\n<p>Новая 11-я тема называется “Best Practices”:</p>\n<ul>\n<li><a href=\"https://github.com/goldbergyoni/nodebestpractices\">Node.js Best Practices</a></li>\n<li><a href=\"https://www.mongodb.com/developer/article/mongoose-versus-nodejs-driver/\">Do You Need Mongoose When Developing Node.js and MongoDB Applications?</a></li>\n<li><a href=\"https://github.com/google/styleguide\">Google Style Guides</a></li>\n</ul>\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["полезные ссылки","best practices"]},{"title":"Web Development & Design","url":"/2021/11/web-development-design/","content":"<p>Web Development &amp; Design</p>\n<ul>\n<li><a href=\"https://developers.google.com/speed/libraries\">Google Hosted Libraries</a></li>\n<li><a href=\"https://cdnjs.com/\">cdnjs</a> - search cdn for library</li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web\">MDN Web Docs</a></li>\n<li><a href=\"https://styled-components.com/\">Styled Components</a></li>\n<li><a href=\"https://codesandbox.io/\">CodeSandbox</a></li>\n<li><a href=\"https://www.figma.com/\">Figma: inteface design tool</a></li>\n<li><a href=\"https://www.youtube.com/channel/UCE9ODjNIkOHrnSdkYWLfYhg\">YouTube: webDev</a></li>\n</ul>\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["полезные ссылки","web development & design"]},{"title":"Manage Web Site with Git: switch default branch","url":"/2021/11/manage-web-site-with-git-switch-default/","content":"<p>GitHub настоятельно рекомендует использовать не master а main. Не буду давать эмоциональную оценку этому, она очевидна…</p>\n<p>В общем, есть последствие если git использовать для деплоя сайта&#x2F;приложения на веб сервер.  Описание тут: <a href=\"https://gist.github.com/Nilpo/8ed5e44be00d6cf21f22\">Using Git to Manage a Live Web Site</a>. Хук post-receive не будет работать. Точнее, не будет работать чекаут:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">GIT_WORK_TREE=/path/to/webroot/of/mywebsite git checkout -f</span><br></pre></td></tr></table></figure>\n\n<p>Вылетает ошибка: fatal: You are on a branch yet to be born</p>\n<p>Короче, надо сменить дефолтный бранч в bare репозитории на веб сервере с master на main, после чего все будет работать как надо:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> mywebsite.git</span><br><span class=\"line\">git symbolic-ref HEAD refs/heads/main</span><br></pre></td></tr></table></figure>\n\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["howto","github","git"]},{"title":"Полезные ссылки: блоги","url":"/2021/12/blog-post/","content":"<p>Полезные блоги:</p>\n<ul>\n<li><a href=\"https://startandroid.ru/ru/\">Start Android</a> “Учебник по Android для начинающих и продвинутых”</li>\n<li><a href=\"https://tretyakov.net/\">TRETYAKOV.NET</a> “О веб разработке и IT”</li>\n<li><a href=\"https://grishaev.me/\">Ivan Grishaev’s blog</a> “Writing on programming, education, books and negotiations.”</li>\n<li><a href=\"https://lisakov.com/blog/\">lisakov.com</a> “Лисаков и макромир”</li>\n<li><a href=\"https://iximiuz.com/ru/\">Ivan Velichko</a> “Серверная разработка с Иваном Величко”</li>\n<li><a href=\"https://mkyong.com/\">mkyong</a> java tutorials</li>\n<li><a href=\"http://francois-piette.blogspot.com/\">François PIETTE</a> François PIETTE (OverbyteICS) blog.</li>\n<li><a href=\"https://www.modernescpp.com/\">modernescpp</a> Modernes C++</li>\n<li><a href=\"https://0x1d107.xyz/0x1d107.xml\">0x1d107’s microblog posts</a></li>\n</ul>\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["полезные ссылки","блоги"]},{"title":"MongoDB: aggregate","url":"/2021/12/mongodb-aggregate/","content":"<p>Пример aggregation в Mongo:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">db.<span class=\"property\">targets</span>.<span class=\"title function_\">aggregate</span>([</span><br><span class=\"line\">  &#123;<span class=\"attr\">$sort</span>:&#123;<span class=\"string\">&quot;processing&quot;</span>:<span class=\"number\">1</span>&#125;&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">$lookup</span>:&#123;</span><br><span class=\"line\">    <span class=\"attr\">from</span>:<span class=\"string\">&quot;campaigns&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">let</span>:&#123;<span class=\"attr\">campaign</span>:<span class=\"string\">&quot;$campaignname&quot;</span>&#125;,</span><br><span class=\"line\">    <span class=\"attr\">pipeline</span>:[</span><br><span class=\"line\">      &#123;<span class=\"attr\">$match</span>:&#123;<span class=\"attr\">$expr</span>:&#123;<span class=\"attr\">$and</span>:[</span><br><span class=\"line\">        &#123;<span class=\"attr\">$eq</span>:[<span class=\"string\">&quot;$campaignname&quot;</span>,<span class=\"string\">&quot;$$campaign&quot;</span>]&#125;,</span><br><span class=\"line\">        &#123;<span class=\"attr\">$eq</span>:[<span class=\"string\">&quot;$enabled&quot;</span>,<span class=\"literal\">true</span>]&#125;</span><br><span class=\"line\">      ]&#125;&#125;&#125;</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"attr\">as</span>:<span class=\"string\">&quot;campaign&quot;</span>&#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">$unwind</span>:<span class=\"string\">&quot;$campaign&quot;</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">$limit</span>:<span class=\"number\">1</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">$set</span>:&#123;</span><br><span class=\"line\">    <span class=\"attr\">date</span>:<span class=\"title class_\">Date</span>.<span class=\"title function_\">now</span>(),</span><br><span class=\"line\">    <span class=\"attr\">processing</span>:&#123;</span><br><span class=\"line\">      <span class=\"attr\">$ifNull</span>:[&#123;<span class=\"attr\">$add</span>:[<span class=\"string\">&quot;$processing&quot;</span>,<span class=\"number\">1</span>]&#125;,<span class=\"number\">1</span>]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">$merge</span>:<span class=\"string\">&quot;targets&quot;</span>&#125;</span><br><span class=\"line\">]);</span><br></pre></td></tr></table></figure>\n\n<p>Соответствующий UPDATE в MySQL выглядел бы примерно так:</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">update</span> targets </span><br><span class=\"line\"><span class=\"keyword\">inner</span> <span class=\"keyword\">join</span> (</span><br><span class=\"line\">  <span class=\"keyword\">select</span> targets.id <span class=\"keyword\">from</span> targets</span><br><span class=\"line\">    <span class=\"keyword\">inner</span> <span class=\"keyword\">join</span> campaigns </span><br><span class=\"line\">    <span class=\"keyword\">on</span> targets.campaignname<span class=\"operator\">=</span>campaigns.campaignname</span><br><span class=\"line\">  <span class=\"keyword\">where</span> campaigns.enabled</span><br><span class=\"line\">  <span class=\"keyword\">order</span> <span class=\"keyword\">by</span> processing</span><br><span class=\"line\">  limit <span class=\"number\">1</span></span><br><span class=\"line\">) t</span><br><span class=\"line\"><span class=\"keyword\">on</span> targets.id <span class=\"operator\">=</span> t.id</span><br><span class=\"line\"><span class=\"keyword\">set</span> processing<span class=\"operator\">=</span>IFNULL(processing,<span class=\"number\">0</span>)<span class=\"operator\">+</span><span class=\"number\">1</span>, <span class=\"type\">date</span><span class=\"operator\">=</span>now()</span><br></pre></td></tr></table></figure>\n\n<p>Второй вариант короче, проще, понятнее, и напишу я его в разы быстрее. В общем, по-моему, Mongo - это сильно на любителей заморочиться…</p>\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["SQL","mongo","aggregate"]},{"title":"Анекдот про фермера","url":"/2023/02/%D0%B0%D0%BD%D0%B5%D0%BA%D0%B4%D0%BE%D1%82%D1%8B/","content":"<p>Налоговый инспектор фермеру:</p>\n<p>— А вы не утаивайте, не утаивайте! В конце концов ваши деньги к вам же и возвращаются: ну, знаете, субсидии, дотации…</p>\n<p>— Понятно. Вот сейчас отрежу хвост у собаки, чтобы и ей было что на обед.</p>\n","tags":["анекдоты","юмор","lol"]},{"title":"Полезные ссылки: Machine Learning, Artificial Intelligence","url":"/2023/06/%D0%BF%D0%BE%D0%BB%D0%B5%D0%B7%D0%BD%D1%8B%D0%B5-%D1%81%D1%81%D1%8B%D0%BB%D0%BA%D0%B8-machine-learning-artificial-intelligence/","content":"<p>Datasets:</p>\n<ul>\n<li><a href=\"https://www.tensorflow.org/datasets/catalog/overview?hl=en\">Tensorflow Datasets</a></li>\n<li><a href=\"https://en.wikipedia.org/wiki/List_of_datasets_for_machine-learning_research\">Wikipedia: List of datasets for machine-learning research</a></li>\n</ul>\n","tags":["полезные ссылки","machine learning","artificial intelligence","dataset"]},{"title":"OpenVPN APK","url":"/2022/02/openvpn-apk/","content":"<p><a href=\"https://github.com/schwabe/ics-openvpn/releases/tag/v0.7.33\">OpenVPN for Android 0.7.33</a></p>\n<p>Если при установке соединения вылазит ошибка:</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">10:57 AM OpenSSL: error:0A00018E:SSL routines::ca md too weak</span><br></pre></td></tr></table></figure>\n\n<p>, то нужно отредактировать настройки на вкладке <code>ADVANCED</code>: промотать до пункта <code>Enable Custom Options</code>, включить его и ввести в <code>Custom Options</code>:</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">tls-cipher &quot;DEFAULT:@SECLEVEL=0&quot;</span><br></pre></td></tr></table></figure>\n","tags":["openvpn","apk"]},{"title":"Обновление MySQL Server на CentOS","url":"/2022/02/%D0%BE%D0%B1%D0%BD%D0%BE%D0%B2%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5-mysql-serrver-%D0%BD%D0%B0-centos/","content":"<p>При обновлении MySQL Server на CentOS вылезла ошибка:</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">The GPG keys listed for the &quot;MySQL 8.0 Community Server&quot; repository are already installed but they are not correct for this package.</span><br><span class=\"line\">Check that the correct key URLs are configured for this repository.</span><br><span class=\"line\"> </span><br><span class=\"line\"> Failing package is: mysql-community-icu-data-files-8.0.28-1.el7.x86_64</span><br><span class=\"line\"> GPG Keys are configured as: file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysql</span><br></pre></td></tr></table></figure>\n\n<p>Победить можно выполнив команду:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">rpm --import https://repo.mysql.com/RPM-GPG-KEY-mysql-2022</span><br></pre></td></tr></table></figure>\n","tags":["mysql","CentOS"]},{"title":"Переезд","url":"/2022/02/%D0%BF%D0%B5%D1%80%D0%B5%D0%B5%D0%B7%D0%B4/","content":"<p>Гугл прислал письмо о том, что бесплатная версия G Suite прекратит работать с 1 июля 2022 года. И это послужило толчком для переезда блога с blogspot на другую платформу. После недолгих поисков подходящего движка для блога, я остановил свой выбор на Hexo (<a href=\"https://hexo.io/\">https://hexo.io</a>).</p>\n<p>Тему для блога я выбрал простенькую “light”, которую пришлось немного “допилить”. “Допиленная” тема получила название “light plus” и лежит тут: <a href=\"https://github.com/coolsoftware/hexo-theme-light-plus\">https://github.com/coolsoftware/hexo-theme-light-plus</a></p>\n<p>В теме было сделано следующее:</p>\n<ul>\n<li>Заголовок оформлен как блок.</li>\n<li>В заголовок добавлена картинка.</li>\n<li>Добавлен блок контактов с возможность выводить в нем ссылку на репозиторий github, контактный email и ссылку на сайт.</li>\n<li>Добавлен блок “Избранные сообщения”.</li>\n<li>В “Архив” добавлена навигация по годам, месяцам и пролистывание (кнопки “Вперед”, “Назад”).</li>\n</ul>\n<p>Кроме работы над темой, пришлось разбираться с импортом записей из старого блога. Для миграции из blogger в hexo нашелся “hexo-migrator-blogger”. Однако, он сильно устарел, некоторые зависимости уже не устанавливаются. А кроме того, мне хотелось, чтобы сохранились все внешние ссылки на записи. Поэтому пришлось писать свой “мигратор”: <a href=\"https://github.com/coolsoftware/hexo-migrator-blogspot\">https://github.com/coolsoftware/hexo-migrator-blogspot</a>.</p>\n<p>Чтобы сохранить ссылки на существующие посты нужно:</p>\n<ol>\n<li><p>В новом блоге сделать такую же структуру записей, что была в старом, т.е. &#x2F;&lt;год&gt;&#x2F;&lt;месяц&gt;&#x2F;&lt;заголовок&gt;. <code>_config.yml</code>:</p>\n <figure class=\"highlight yml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">permalink:</span> <span class=\"string\">:year/:month/:name/</span></span><br><span class=\"line\"><span class=\"attr\">new_post_name:</span> <span class=\"string\">:year/:month/:title.md</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Прописать mod_rewrite-правила (для Апача):</p>\n <figure class=\"highlight apacheconf\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">RewriteEngine</span> <span class=\"literal\">on</span></span><br><span class=\"line\"><span class=\"attribute\">RewriteRule</span> ^(/[<span class=\"number\">0</span>-<span class=\"number\">9</span>]&#123;<span class=\"number\">4</span>&#125;/[<span class=\"number\">0</span>-<span class=\"number\">9</span>]&#123;<span class=\"number\">2</span>&#125;/[^/]+).html$ $<span class=\"number\">1</span>/<span class=\"meta\"> [NC,NE,L,R=301]</span></span><br><span class=\"line\"><span class=\"attribute\">RewriteRule</span> ^/([<span class=\"number\">0</span>-<span class=\"number\">9</span>]&#123;<span class=\"number\">4</span>&#125;)/$ /archives/$<span class=\"number\">1</span>/<span class=\"meta\"> [NC,NE,L,R=301]</span></span><br><span class=\"line\"><span class=\"attribute\">RewriteRule</span> ^/([<span class=\"number\">0</span>-<span class=\"number\">9</span>]&#123;<span class=\"number\">4</span>&#125;)/([<span class=\"number\">0</span>-<span class=\"number\">9</span>]&#123;<span class=\"number\">2</span>&#125;)/$ /archives/$<span class=\"number\">1</span>/$<span class=\"number\">2</span>/<span class=\"meta\"> [NC,NE,L,R=301]</span></span><br></pre></td></tr></table></figure></li>\n</ol>\n","tags":["переезд","блог","hexo","blogger","blogspot"]},{"title":"Поиск в блоге","url":"/2022/02/%D0%BF%D0%BE%D0%B8%D1%81%D0%BA-%D0%B2-%D0%B1%D0%BB%D0%BE%D0%B3%D0%B5/","content":"<p>Я считаю, что поиск по блогу - “must-have feature”. К сожалению, в выбранной мною простенькой теме hexo-light поиска не предусмотрено. Поэтому, нужно либо использовать сервисы типа Гугл или Яндекс, либо автоматически создавать индексный файл (xml или json) каждый раз при перегенерации блога и реализовать поиск на клиенте с помощью javascript. Я решил идти по второму пути.</p>\n<p>Для генерации индекса выбран плагин для hexo: <code>hexo-generator-searchdb</code>. Устанавливается он с помощью:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-searchdb</span><br></pre></td></tr></table></figure>\n\n<p>Конфигурирование делается в <code>_config.yml</code> блога:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">search:</span></span><br><span class=\"line\">  <span class=\"attr\">path:</span> <span class=\"string\">search.json</span></span><br><span class=\"line\">  <span class=\"attr\">field:</span> <span class=\"string\">post</span></span><br><span class=\"line\">  <span class=\"attr\">content:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">format:</span> <span class=\"string\">html</span></span><br></pre></td></tr></table></figure>\n\n<p>Следующим шагом нужно создать страницу для поиска. Делается это так:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo new page <span class=\"string\">&quot;search&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>В <code>source</code> каталоге создастся подкаталог <code>search</code> и в нем <code>index.md</code>. Содержание надо сделать наподобие такого:</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: </span><br><span class=\"line\">date: 2022-02-14 17:31:44</span><br><span class=\"line\">type: search</span><br><span class=\"line\"><span class=\"section\">layout: search</span></span><br><span class=\"line\"><span class=\"section\">---</span></span><br></pre></td></tr></table></figure>\n\n<p>Я добавил <code>layout</code> <code>search</code> в тему <a href=\"https://github.com/coolsoftware/hexo-theme-light-plus\">hexo-theme-light-plus</a>. <code>title</code> лучше оставить пустым, тогда в качестве заголовка страницы поиска будет использоваться локализованная строка “search”.</p>\n<p>Скрипт для поиска лежит в <a href=\"https://github.com/coolsoftware/hexo-theme-light-plus/blob/master/source/js/local-search.js\">js&#x2F;local-search.js</a>. Я его сделал на основе <a href=\"https://github.com/next-theme/hexo-theme-next/blob/v8.8.0/source/js/third-party/search/local-search.js\">вот этого</a>. Убрал “popup”. Сделал постраничный показ результатов поиска (по 10 на страницу). Настройки в самом <code>local-search.js</code>:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"variable constant_\">CONFIG</span> = &#123;</span><br><span class=\"line\">    root             : <span class=\"string\">&#x27;/&#x27;</span>,</span><br><span class=\"line\">    path             : <span class=\"string\">&#x27;search.json&#x27;</span>,</span><br><span class=\"line\">    localsearch      : &#123;</span><br><span class=\"line\">        trigger           : <span class=\"string\">&#x27;auto&#x27;</span>,</span><br><span class=\"line\">        top_n_per_article : <span class=\"number\">1</span>,</span><br><span class=\"line\">        <span class=\"built_in\">unescape</span>          : <span class=\"literal\">false</span>,</span><br><span class=\"line\">        preload           : <span class=\"literal\">true</span>,</span><br><span class=\"line\">        results_per_page  : <span class=\"number\">10</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>В общем, получилось так: <a href=\"https://blog.coolsoftware.ru/search/?q=nodejs\">поиск</a>.</p>\n","tags":["search","блог","hexo","поиск","theme","light-plus"]},{"title":"Полезные ссылки: IO, Sockets, Network, IOCP, AIO, etc.","url":"/2022/01/io-sockets-network-iocp-aio-etc/","content":"<p>Полезные ссылки: IO, Sockets, Network, IOCP, AIO, etc.</p>\n<ul>\n<li>IO_URING. <a href=\"https://habr.com/ru/company/itsoft/blog/589389/\">Часть 1. Введение</a> <a href=\"https://habr.com/ru/company/itsoft/blog/597745/\">Часть 2. Let’s GO</a></li>\n<li><a href=\"https://github.com/axboe/liburing\">liburing</a></li>\n<li><a href=\"https://github.com/frevib/io_uring-echo-server\">io_uring bare minimum echo server</a></li>\n</ul>\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n"},{"title":"Полезные ссылки: Android Development","url":"/2022/02/%D0%BF%D0%BE%D0%BB%D0%B5%D0%B7%D0%BD%D1%8B%D0%B5-%D1%81%D1%81%D1%8B%D0%BB%D0%BA%D0%B8-android-development/","content":"<p>Android Testing:</p>\n<ul>\n<li><a href=\"https://developer.android.com/studio/test/monkeyrunner\">monkeyrunner</a></li>\n<li><a href=\"https://developer.android.com/training/testing/other-components/ui-automator\">UI Automator</a></li>\n<li><a href=\"https://www.swtestacademy.com/appium-tutorial/\">Appium Tutorial</a></li>\n<li><a href=\"https://aamnah.com/android/play_store_emulator_install_missing\">Installing Google Play Store on AVD emulator devices</a></li>\n</ul>\n","tags":["полезные ссылки","android","development","testing"]},{"title":"Mongo: Aggregation with Pagination","url":"/2022/01/mongo-aggregation-with-pagination/","content":"<p>Допустим у нас есть такая коллекция users в Mongo DB:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">username</span>: <span class=\"string\">&quot;john.doe&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">roles</span>: [<span class=\"string\">&quot;user&quot;</span>],</span><br><span class=\"line\">    <span class=\"attr\">contacts</span>: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">name</span>: <span class=\"string\">&quot;John Doe&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">email</span>: <span class=\"string\">&quot;johndoe@gmail.com&quot;</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">name</span>: <span class=\"string\">&quot;J.D.&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">email</span>: <span class=\"string\">&quot;jd@gmail.com&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">phone</span>: <span class=\"string\">&quot;+11111111111&quot;</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">username</span>: <span class=\"string\">&quot;jack.sparrow&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">roles</span>: [<span class=\"string\">&quot;manager&quot;</span>],</span><br><span class=\"line\">    <span class=\"attr\">contacts</span>: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">name</span>: <span class=\"string\">&quot;Jack Sparrow (gmail)&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">email</span>: <span class=\"string\">&quot;jack.sparrow@gmail.com&quot;</span>,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">name</span>: <span class=\"string\">&quot;Jack Sparrow (hotmail)&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">email</span>: <span class=\"string\">&quot;jack.sparrow@hotmail.com&quot;</span>,</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n\n<p>И мы хотим организовать просмотр всех контактов всех пользователей в одной таблице с разбивкой по страницам (“pagination”). То есть так:</p>\n<p><a href=\"https://lh3.googleusercontent.com/-kmadM7IZj9w/YeF_aOFLcrI/AAAAAAAAAeY/3p3CYGwDqfQhYVVzdq2lPi2pWkbm8FunwCNcBGAsYHQ/image.png\"><img src=\"https://lh3.googleusercontent.com/-kmadM7IZj9w/YeF_aOFLcrI/AAAAAAAAAeY/3p3CYGwDqfQhYVVzdq2lPi2pWkbm8FunwCNcBGAsYHQ/w640-h354/image.png\"></a></p>\n<p>Чтобы получить все контакты можно воспользоваться <a href=\"https://docs.mongodb.com/manual/aggregation/\">aggregation</a> с <a href=\"https://docs.mongodb.com/manual/reference/operator/aggregation/unwind/\">$unwind</a>.</p>\n<p>Еще нам нужно посчитать количество всех контактов, после чего “вырезать” только те, которые нужно показать в выбранной странице. Для того, чтобы выполнить обе эти операции одним запросом, воспользуемся чудесной пайплайн-стадией <a href=\"https://docs.mongodb.com/manual/reference/operator/aggregation/facet/\">$facet</a>. Получится так:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">db.<span class=\"title function_\">collection</span>(<span class=\"string\">&#x27;users&#x27;</span>).<span class=\"title function_\">aggregate</span>([</span><br><span class=\"line\">  &#123;<span class=\"string\">&quot;$unwind&quot;</span>:<span class=\"string\">&quot;$contacts&quot;</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"string\">&quot;$facet&quot;</span>:&#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;meta&quot;</span>:[</span><br><span class=\"line\">      &#123;<span class=\"string\">&quot;$count&quot;</span>: <span class=\"string\">&quot;totalCount&quot;</span>&#125;</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"string\">&quot;data&quot;</span>:[</span><br><span class=\"line\">      &#123;<span class=\"string\">&quot;$sort&quot;</span>:&#123;<span class=\"string\">&#x27;contacts.name&#x27;</span>:<span class=\"number\">1</span>,<span class=\"string\">&#x27;username&#x27;</span>:<span class=\"number\">1</span>&#125;&#125;,</span><br><span class=\"line\">      &#123;<span class=\"string\">&quot;$skip&quot;</span>:firstRow-<span class=\"number\">1</span>&#125;,</span><br><span class=\"line\">      &#123;<span class=\"string\">&quot;$limit&quot;</span>:page_size&#125;,</span><br><span class=\"line\">      &#123;<span class=\"string\">&quot;$replaceRoot&quot;</span>:</span><br><span class=\"line\">        &#123;<span class=\"string\">&quot;newRoot&quot;</span>:&#123;</span><br><span class=\"line\">          <span class=\"string\">&quot;$mergeObjects&quot;</span>:[</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">              <span class=\"string\">&quot;username&quot;</span>:<span class=\"string\">&quot;$username&quot;</span>,</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"string\">&quot;$contacts&quot;</span></span><br><span class=\"line\">          ]</span><br><span class=\"line\">        &#125;&#125;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    ],</span><br><span class=\"line\">  &#125;&#125;,</span><br><span class=\"line\">]);</span><br></pre></td></tr></table></figure>\n\n<p>page_size - это количество записей на странице.</p>\n<p>firstRow - это номер первой записи на странице. Вычисляется он так:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> firstRow = (page &gt; <span class=\"number\">0</span> ? ((page-<span class=\"number\">1</span>) * page_size) : <span class=\"number\">0</span>) + <span class=\"number\">1</span>;</span><br></pre></td></tr></table></figure>\n\n<p>Вместо $unwind могут быть другие пайплайн-стадии, которые выбирают нужные для показа данные. Основной же прием, который я хотел продемонстрировать в этом посте, - это использование $facet.</p>\n<p>Полный пример можно посмотреть на github:</p>\n<ul>\n<li>сервер на nodejs: <a href=\"https://github.com/coolsoftware/node-mongo-aggregation-pagination\">https://github.com/coolsoftware/node-mongo-aggregation-pagination</a></li>\n<li>клиент на react: <a href=\"https://github.com/coolsoftware/react-mongo-aggregation-pagination\">https://github.com/coolsoftware/react-mongo-aggregation-pagination</a></li>\n</ul>\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["mongo","aggregation","nodejs","pagination","reac","tutorial"]},{"title":"В одну строку","url":"/2022/01/nodejs/","content":"<p>Генерация случайной строки (например, пароля) в nodejs в одну строку:  </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">(<span class=\"keyword\">function</span>(<span class=\"params\">length,charset</span>)&#123;<span class=\"keyword\">return</span> [...<span class=\"title class_\">Array</span>(length)].<span class=\"title function_\">reduce</span>(<span class=\"function\"><span class=\"params\">x</span>=&gt;</span>x+charset[<span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">random</span>()*charset.<span class=\"property\">length</span>)],<span class=\"string\">&#x27;&#x27;</span>)&#125;)(<span class=\"number\">16</span>,<span class=\"string\">&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<p>Base64 -&gt; hex (nodejs)</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">(<span class=\"keyword\">function</span>(<span class=\"params\">b64</span>)&#123;<span class=\"keyword\">return</span> <span class=\"title class_\">Buffer</span>.<span class=\"title function_\">from</span>(b64, <span class=\"string\">&#x27;base64&#x27;</span>).<span class=\"title function_\">toString</span>(<span class=\"string\">&#x27;hex&#x27;</span>);&#125;)(<span class=\"string\">&#x27;AQAB&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<p>Base64url -&gt; hex (nodejs)</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">(<span class=\"keyword\">function</span>(<span class=\"params\">b64url</span>)&#123;<span class=\"keyword\">return</span> <span class=\"title class_\">Buffer</span>.<span class=\"title function_\">from</span>(b64url.<span class=\"title function_\">replaceAll</span>(<span class=\"regexp\">/[_-]/g</span>, <span class=\"keyword\">function</span>(<span class=\"params\">m</span>)&#123;<span class=\"keyword\">return</span> <span class=\"string\">&#x27;/+&#x27;</span>[<span class=\"string\">&#x27;_-&#x27;</span>.<span class=\"title function_\">indexOf</span>(m)];&#125;), <span class=\"string\">&#x27;base64&#x27;</span>).<span class=\"title function_\">toString</span>(<span class=\"string\">&#x27;hex&#x27;</span>); &#125;)(<span class=\"string\">&#x27;AQAB_A=&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<p>String -&gt; Base64 (nodejs)</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">(<span class=\"keyword\">function</span>(<span class=\"params\">s</span>)&#123;<span class=\"keyword\">return</span> <span class=\"title class_\">Buffer</span>.<span class=\"title function_\">from</span>(s).<span class=\"title function_\">toString</span>(<span class=\"string\">&#x27;base64&#x27;</span>);&#125;)(<span class=\"string\">&#x27;test&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<p>String -&gt; Base64url (nodejs)</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">(<span class=\"keyword\">function</span>(<span class=\"params\">s</span>)&#123;<span class=\"keyword\">return</span> <span class=\"title class_\">Buffer</span>.<span class=\"title function_\">from</span>(s).<span class=\"title function_\">toString</span>(<span class=\"string\">&#x27;base64&#x27;</span>).<span class=\"title function_\">replaceAll</span>(<span class=\"regexp\">/[+/=]/g</span>,<span class=\"function\"><span class=\"params\">m</span>=&gt;</span><span class=\"string\">&#x27;-_&#x27;</span>[<span class=\"string\">&#x27;+/&#x27;</span>.<span class=\"title function_\">indexOf</span>(m)]||<span class=\"string\">&#x27;&#x27;</span>);&#125;)(<span class=\"string\">&#x27;test&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<p>SHA-256 Digest (nodejs)</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">crypto.<span class=\"title function_\">createHash</span>(<span class=\"string\">&#x27;sha256&#x27;</span>).<span class=\"title function_\">update</span>(<span class=\"string\">&#x27;12345&#x27;</span>).<span class=\"title function_\">digest</span>().<span class=\"title function_\">toString</span>(<span class=\"string\">&#x27;hex&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<p>Переименование файлов: “Сериал.Part-1.mkv” -&gt; “Сериал.S01E01.mkv”, “Сериал.Part-2.mkv” -&gt; “Сериал.S01E02.mkv” и т.д. (bash)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> *.mkv; <span class=\"keyword\">do</span> <span class=\"built_in\">mv</span> <span class=\"variable\">$i</span> $(<span class=\"built_in\">echo</span> <span class=\"variable\">$i</span> | sed <span class=\"string\">&#x27;s/Part-\\([0-9]\\)/S01E0\\1/&#x27;</span>); <span class=\"keyword\">done</span>;</span><br></pre></td></tr></table></figure>\n\n<p><a href=\"https://ru.wikipedia.org/wiki/ROT13\">ROT13</a> (“шифр Цезаря”)</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">(<span class=\"keyword\">function</span>(<span class=\"params\">s</span>)&#123;<span class=\"keyword\">return</span> s.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;&#x27;</span>).<span class=\"title function_\">reduce</span>(<span class=\"function\">(<span class=\"params\">x,y</span>) =&gt;</span> x + (<span class=\"string\">&#x27;nopqrstuvwxyzabcdefghijklmNOPQRSTUVWXYZABCDEFGHIJKLM&#x27;</span>[<span class=\"string\">&#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&#x27;</span>.<span class=\"title function_\">indexOf</span>(y)] || y), <span class=\"string\">&#x27;&#x27;</span>)&#125;)(<span class=\"string\">&#x27;Test12345&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<p>Base64 to Pascal array of bytes:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">(<span class=\"keyword\">function</span>(<span class=\"params\">b64</span>)&#123;<span class=\"keyword\">return</span> <span class=\"title class_\">Buffer</span>.<span class=\"title function_\">from</span>(b64, <span class=\"string\">&#x27;base64&#x27;</span>).<span class=\"title function_\">reduce</span>(<span class=\"function\">(<span class=\"params\">s,b,i</span>)=&gt;</span>s+(i?(i%<span class=\"number\">16</span>==<span class=\"number\">0</span>?<span class=\"string\">&#x27;,\\n&#x27;</span>:<span class=\"string\">&#x27;, &#x27;</span>):<span class=\"string\">&#x27;&#x27;</span>)+<span class=\"string\">&#x27;$&#x27;</span>+b.<span class=\"title function_\">toString</span>(<span class=\"string\">&#x27;16&#x27;</span>).<span class=\"title function_\">padStart</span>(<span class=\"number\">2</span>, <span class=\"string\">&#x27;0&#x27;</span>), <span class=\"string\">&#x27;&#x27;</span>)&#125;)(<span class=\"string\">&#x27;AQAB&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<p>format hsk markdown table:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sed <span class=\"string\">&#x27;1,/---/d&#x27;</span> hsk1.md | awk -v OFS=<span class=\"string\">&quot; | &quot;</span> -F<span class=\"string\">&quot;|&quot;</span> <span class=\"string\">&quot;/^\\| [0-9]/&#123;for(i =3;i&lt;NF;i++)&#123;gsub(/ /,\\&quot;\\&quot;,<span class=\"variable\">$i</span>);<span class=\"variable\">$i</span>=\\&quot;[\\&quot;<span class=\"variable\">$i</span>\\&quot;](https://bkrs.info/slovo.php?ch=\\&quot;<span class=\"variable\">$i</span>\\&quot;)\\&quot;&#125; &#125;&#123;print&#125;&quot;</span> &gt; temp.txt</span><br></pre></td></tr></table></figure>\n\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["howto","string","nodejs","javascript","random","trick","bash","в одну строку"]},{"title":"ShellIconOverlayIdentifiers (windows 10)","url":"/2022/01/shelliconoverlayidentifiers-windows-10/","content":"<p>Забавная вещь в Windows 10: ShellIconOverlayIdentifiers</p>\n<p><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEgMmmYlpj6-DWdUEyFOGA6k822gS3E-BlICJpxwu3nJLS_qpFYd8jeaxqKr2AUCZYV-xRd0DujOxobpnkhwU3G8hJonS7nUtcHbFf54VUkpTJqAejpMIGshYmAl60XqZXmTfN8rRrrYdouwQBiiG0RQl5LtX5Vf-qC5t4V5j7AgpdJq4JN89ZlZq7VTwA=s801\"><img src=\"https://blogger.googleusercontent.com/img/a/AVvXsEgMmmYlpj6-DWdUEyFOGA6k822gS3E-BlICJpxwu3nJLS_qpFYd8jeaxqKr2AUCZYV-xRd0DujOxobpnkhwU3G8hJonS7nUtcHbFf54VUkpTJqAejpMIGshYmAl60XqZXmTfN8rRrrYdouwQBiiG0RQl5LtX5Vf-qC5t4V5j7AgpdJq4JN89ZlZq7VTwA=w640-h440\"></a></p>\n<p>О том что это такое можно почитать в документации Microsoft: <a href=\"https://docs.microsoft.com/en-us/windows/win32/shell/how-to-register-icon-overlay-handlers\">https://docs.microsoft.com/en-us/windows/win32/shell/how-to-register-icon-overlay-handlers</a></p>\n<p>А забавно тут вот что: есть лимит на количество “обработчиков наложения значков” (icon overlay  handlers), который равен 15. Выбираются первые (по алфавиту) 15 обработчиков, остальные игнорируются. Поэтому ушлые разработчики софта, которые желают, чтобы их обработчики шли первыми в списке и работали, начали добавлять в начале имени пробелы (см. скриншот). Кто больше пробелов добавит, тот и молодец :) Интересно, кто-нибудь уже додумался при установке  приложения проверять существующие обработчики на предмет наличия в них пробелов в начале, и делать в своих на один больше? </p>\n<p>=&#x3D;&#x3D;<br>Перепечатка материалов блога разрешается с обязательной ссылкой на <a href=\"http://blog.coolsoftware.ru/\">blog.coolsoftware.ru</a></p>\n","tags":["windows","Icons","ShellIconOverlayIdentifiers"]},{"title":"Полезные ссылки: Test API","url":"/2022/03/%D0%BF%D0%BE%D0%BB%D0%B5%D0%B7%D0%BD%D1%8B%D0%B5-%D1%81%D1%81%D1%8B%D0%BB%D0%BA%D0%B8-test-api/","content":"<p>Test API Tools:</p>\n<ul>\n<li><a href=\"https://www.postman.com/\">Postman</a></li>\n<li><a href=\"https://www.soapui.org/\">SoapUI</a></li>\n<li><a href=\"https://jmeter.apache.org/\">JMeter</a></li>\n<li><a href=\"https://www.blazemeter.com/blog/jmeter-websocket-samplers-a-practical-guide\">JMeter WebSocket Samplers (Guide)</a></li>\n<li><a href=\"https://insomnia.rest/\">Insomnia</a></li>\n<li><a href=\"https://www.telerik.com/fiddler/\">Fiddler</a></li>\n</ul>\n","tags":["полезные ссылки","test","api"]},{"title":"Полезные ссылки: Tutorial Videos","url":"/2022/07/%D0%BF%D0%BE%D0%BB%D0%B5%D0%B7%D0%BD%D1%8B%D0%B5-%D1%81%D1%81%D1%8B%D0%BB%D0%BA%D0%B8-tutorial-videos/","content":"<p>Обучающее видео (Tutorial Videos):</p>\n<ul>\n<li><a href=\"https://www.youtube.com/watch?v=PMHEoBkxYaQ\">Build + Use OpenSSL with Visual Studio 2019 or 2017 | Static &amp; Shared | x32 &amp; x64</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=pGahDsjwPN0\">How to turn on javascript intellisense in Visual Studio Code</a></li>\n</ul>\n","tags":["полезные ссылки","tutorial","видео","обучение","video"]},{"title":"Документация MkDocs","url":"/2022/06/%D0%B4%D0%BE%D0%BA%D1%83%D0%BC%D0%B5%D0%BD%D1%82%D0%B0%D1%86%D0%B8%D1%8F-mkdocs/","content":"<p>Понравилось делать документацию с помощью <a href=\"https://www.mkdocs.org/\">MkDocs</a>.</p>\n<p>Он имеет развитую систему плагинов, например, <a href=\"https://pypi.org/project/mkdocs-with-pdf/\">with-pdf</a> - плагин для автоматической генерации PDF.</p>\n","tags":["mkdocs","документация"]},{"title":"Комментарии в блоге","url":"/2022/06/%D0%BA%D0%BE%D0%BC%D0%BC%D0%B5%D0%BD%D1%82%D0%B0%D1%80%D0%B8%D0%B8-%D0%B2-%D0%B1%D0%BB%D0%BE%D0%B3%D0%B5/","content":"<p>Добавлены комментарии в блоге.</p>\n<p>В качестве движка используется <a href=\"https://github.com/gitalk/gitalk\">gitalk</a>.</p>\n<p>Как его добавить в light-тему Hexo:</p>\n<ol>\n<li><p>Создайте репозиторий для хранения <code>Issues</code>. Я создал с названием <a href=\"https://github.com/coolsoftware/gitalk/issues\">gitalk</a>.</p>\n</li>\n<li><p>Создайте приложение в github: <a href=\"https://github.com/settings/applications/new\">тынц</a>.</p>\n<p> <img src=\"/images/new_github_app.png\" alt=\"New GitHub Application\"></p>\n<p> Это приложение потом можно будет увидеть в списке <a href=\"https://github.com/settings/developers\">Settings &#x2F; Developer settings</a>.</p>\n</li>\n<li><p>Сгенерируйте “секрет” (Generate a new client secret); запомните (запишите) его.</p>\n</li>\n<li><p>В light-теме Hexo в <code>layout\\_partial</code> создайте файл <a href=\"https://github.com/coolsoftware/hexo-theme-light-plus/blob/master/layout/_partial/gitalk_comment.ejs\">gitalk_comment.ejs</a> со следующим содержанием:</p>\n <figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;gitalk-container&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;margin: 30px;&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;stylesheet&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;https://unpkg.com/gitalk/dist/gitalk.css&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://unpkg.com/gitalk/dist/gitalk.min.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://cdn.jsdelivr.net/gh/gangdong/gangdong.github.io@dev/assets/js/md5.min.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">var</span> gitalk = <span class=\"keyword\">new</span> <span class=\"title class_\">Gitalk</span>(&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">clientID</span>: <span class=\"string\">&#x27;&lt;%= gtConfig.clientID %&gt;&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">clientSecret</span>: <span class=\"string\">&#x27;&lt;%= gtConfig.clientSecret %&gt;&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">repo</span>: <span class=\"string\">&#x27;&lt;%= gtConfig.repo %&gt;&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">owner</span>: <span class=\"string\">&#x27;&lt;%= gtConfig.owner %&gt;&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">admin</span>: [<span class=\"string\">&#x27;&lt;%= gtConfig.admin %&gt;&#x27;</span>],</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">id</span>: <span class=\"title function_\">md5</span>(location.<span class=\"property\">pathname</span>),      <span class=\"comment\">// Ensure uniqueness and length less than 50</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">pagerDirection</span>: <span class=\"string\">&#x27;&lt;%= gtConfig.pagerDirection %&gt;&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">distractionFreeMode</span>: <span class=\"literal\">false</span>  <span class=\"comment\">// Facebook-like distraction free mode</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">    gitalk.<span class=\"title function_\">render</span>(<span class=\"string\">&#x27;gitalk-container&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>В <code>layout\\_partial\\comment.ejs</code> подключите <code>gitalk_comment.ejs</code>:</p>\n <figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;% if (theme.comment_provider == &quot;gitalk&quot;) &#123;</span><br><span class=\"line\">    if (config.gitalk) &#123; %&gt;</span><br><span class=\"line\">    &lt;%- partial(&#x27;_partial/gitalk_comment&#x27;, &#123;gtConfig: config.gitalk&#125;) %&gt;</span><br><span class=\"line\">    &lt;% &#125; %&gt;</span><br><span class=\"line\">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>В <code>_config.yml</code> light-темы включите использование gitalk-комментариев:</p>\n <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">comment_provider:</span> <span class=\"string\">gitalk</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>В корневом <code>_config.yml</code> вашего блога выполните настройку gitalk:</p>\n <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># gitalk comment</span></span><br><span class=\"line\"><span class=\"attr\">gitalk:</span></span><br><span class=\"line\">    <span class=\"attr\">clientID:</span> <span class=\"string\">your_client_id</span></span><br><span class=\"line\">    <span class=\"attr\">clientSecret:</span> <span class=\"string\">your_secrat</span></span><br><span class=\"line\">    <span class=\"attr\">repo:</span> <span class=\"string\">your_repo_name</span></span><br><span class=\"line\">    <span class=\"attr\">owner:</span> <span class=\"string\">your_github_user</span></span><br><span class=\"line\">    <span class=\"attr\">admin:</span> <span class=\"string\">your_github_user</span></span><br><span class=\"line\">    <span class=\"attr\">pagerDirection:</span> <span class=\"string\">first</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>clientID</code> - значение <code>Client ID</code> из настроек приложения, созданного на шаге 2.</li>\n<li><code>clientSecret</code> - “секрет” (Client secret), созданный на шаге 3.</li>\n<li><code>repo</code> - название репозитория (шаг 1).</li>\n<li><code>owner</code> и <code>admin</code> - имя Вашего пользователя в Github.</li>\n</ul>\n</li>\n</ol>\n","tags":["blog","gitalk","comments","комментарии"]},{"title":"Анекдот «весь в белом»","url":"/2023/07/%D0%B0%D0%BD%D0%B5%D0%BA%D0%B4%D0%BE%D1%82-%C2%AB%D1%8F-%D0%B2-%D0%B1%D0%B5%D0%BB%D0%BE%D0%BC%C2%BB/","content":"<p>Человек приходит в цирк и говорит: </p>\n<p>— У меня есть аттракцион.</p>\n<p>Его спрашивают: </p>\n<p>— Какой?</p>\n<p>— Под куполом цирка подвешивают бочку говна. Выходит клоун. Стреляет. Бочка падает. Весь цирк в говне. И тут выхожу я: весь в белом.</p>\n","tags":["анекдоты","юмор","lol"]},{"title":"Build Boost","url":"/2023/08/build-boost/","content":"<h1 id=\"Building-Boost-1-83-with-Visual-Studio-2022-static-link-multithreading\"><a href=\"#Building-Boost-1-83-with-Visual-Studio-2022-static-link-multithreading\" class=\"headerlink\" title=\"Building Boost 1.83 with Visual Studio 2022 (static link, multithreading)\"></a>Building Boost 1.83 with Visual Studio 2022 (static link, multithreading)</h1><h2 id=\"For-Windows\"><a href=\"#For-Windows\" class=\"headerlink\" title=\"For Windows\"></a>For Windows</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> C:\\boost_1_83_0\\</span><br><span class=\"line\">bootstrap.bat</span><br><span class=\"line\">b2 -j8 toolset=msvc-14.3 variant=debug <span class=\"built_in\">link</span>=static threading=multi runtime-link=shared</span><br><span class=\"line\">b2 -j8 toolset=msvc-14.3 variant=debug <span class=\"built_in\">link</span>=static threading=multi runtime-link=static</span><br><span class=\"line\">b2 -j8 toolset=msvc-14.3 variant=release <span class=\"built_in\">link</span>=static threading=multi runtime-link=shared</span><br><span class=\"line\">b2 -j8 toolset=msvc-14.3 variant=release <span class=\"built_in\">link</span>=static threading=multi runtime-link=static</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"For-WSL\"><a href=\"#For-WSL\" class=\"headerlink\" title=\"For WSL\"></a>For WSL</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">wget https://boostorg.jfrog.io/artifactory/main/release/1.83.0/source/boost_1_83_0.tar.gz</span><br><span class=\"line\">tar vxzf boost_1_83_0.tar.gz</span><br><span class=\"line\"><span class=\"built_in\">cd</span> ./boost_1_83_0</span><br><span class=\"line\">./bootstrap.sh</span><br><span class=\"line\">sudo ./b2 <span class=\"built_in\">link</span>=static threading=multi install</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Output\"><a href=\"#Output\" class=\"headerlink\" title=\"Output\"></a>Output</h2><h3 id=\"Directory\"><a href=\"#Directory\" class=\"headerlink\" title=\"Directory\"></a>Directory</h3><figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">C:\\boost_1_83_0\\stage\\lib</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Static-debug-shared-runtime\"><a href=\"#Static-debug-shared-runtime\" class=\"headerlink\" title=\"Static debug shared runtime\"></a>Static debug shared runtime</h3><figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">libboost_atomic-vc143-mt-gd-x32-1_83.lib</span><br><span class=\"line\">libboost_atomic-vc143-mt-gd-x64-1_83.lib</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Static-debug-static-runtime\"><a href=\"#Static-debug-static-runtime\" class=\"headerlink\" title=\"Static debug static runtime\"></a>Static debug static runtime</h3><figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">libboost_atomic-vc143-mt-sgd-x32-1_83.lib</span><br><span class=\"line\">libboost_atomic-vc143-mt-sgd-x64-1_83.lib</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Static-release-shared-runtime\"><a href=\"#Static-release-shared-runtime\" class=\"headerlink\" title=\"Static release shared runtime\"></a>Static release shared runtime</h3><figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">libboost_atomic-vc143-mt-x32-1_83.lib</span><br><span class=\"line\">libboost_atomic-vc143-mt-x64-1_83.lib</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Static-release-static-runtime\"><a href=\"#Static-release-static-runtime\" class=\"headerlink\" title=\"Static release static runtime\"></a>Static release static runtime</h3><figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">libboost_atomic-vc143-mt-s-x32-1_83.lib</span><br><span class=\"line\">libboost_atomic-vc143-mt-s-x64-1_83.lib</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Environment-Variables-Windows\"><a href=\"#Environment-Variables-Windows\" class=\"headerlink\" title=\"Environment Variables (Windows)\"></a>Environment Variables (Windows)</h2><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Value</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>BOOST_INCLUDEDIR</td>\n<td>C:\\boost_1_83_0</td>\n</tr>\n<tr>\n<td>BOOST_LIBRARYDIR</td>\n<td>C:\\boost_1_83_0\\stage\\lib</td>\n</tr>\n<tr>\n<td>BOOST_ROOT</td>\n<td>C:\\boost_1_83_0</td>\n</tr>\n</tbody></table>\n<h2 id=\"Link-Boost-with-CMake\"><a href=\"#Link-Boost-with-CMake\" class=\"headerlink\" title=\"Link Boost with CMake\"></a>Link Boost with CMake</h2><figure class=\"highlight cmake\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">set</span>(Boost_USE_STATIC_LIBS <span class=\"keyword\">ON</span>)</span><br><span class=\"line\"><span class=\"keyword\">set</span>(Boost_USE_MULTITHREADED <span class=\"keyword\">ON</span>)</span><br><span class=\"line\"><span class=\"keyword\">set</span>(Boost_USE_STATIC_RUNTIME <span class=\"keyword\">OFF</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">find_package</span>(Boost COMPONENTS thread chrono regex REQUIRED )</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">include_directories</span>(SYSTEM <span class=\"variable\">$&#123;Boost_INCLUDE_DIRS&#125;</span>)</span><br><span class=\"line\"><span class=\"keyword\">target_link_libraries</span>(<span class=\"variable\">$&#123;PROJECT_NAME&#125;</span> <span class=\"variable\">$&#123;Boost_LIBRARIES&#125;</span>)</span><br></pre></td></tr></table></figure>\n","tags":["boost","build"]},{"title":"Publish Python package on pypi.org","url":"/2023/08/publish-python-package-on-pypi-org/","content":"<h1 id=\"Install-twine\"><a href=\"#Install-twine\" class=\"headerlink\" title=\"Install twine\"></a>Install twine</h1><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">pip install twine</span><br><span class=\"line\">pip install wheel</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Build-the-wheel\"><a href=\"#Build-the-wheel\" class=\"headerlink\" title=\"Build the wheel\"></a>Build the wheel</h1><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">python .\\setup.py sdist bdist_wheel</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Check-the-wheel\"><a href=\"#Check-the-wheel\" class=\"headerlink\" title=\"Check the wheel\"></a>Check the wheel</h1><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">twine check dist/*</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Upload-to-pypi-org\"><a href=\"#Upload-to-pypi-org\" class=\"headerlink\" title=\"Upload to pypi.org\"></a>Upload to pypi.org</h1><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">twine upload dist/*</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Setup-py-Example\"><a href=\"#Setup-py-Example\" class=\"headerlink\" title=\"Setup.py Example\"></a>Setup.py Example</h1><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> distutils.core <span class=\"keyword\">import</span> setup</span><br><span class=\"line\"></span><br><span class=\"line\">setup(name=<span class=\"string\">&#x27;package_name&#x27;</span>,</span><br><span class=\"line\">    version=<span class=\"string\">&#x27;1.0.1&#x27;</span>,</span><br><span class=\"line\">    description=<span class=\"string\">&#x27;Short descripton&#x27;</span>,</span><br><span class=\"line\">    long_description=<span class=\"built_in\">open</span>(<span class=\"string\">&#x27;README.md&#x27;</span>, <span class=\"string\">&quot;r&quot;</span>).read(),</span><br><span class=\"line\">    long_description_content_type=<span class=\"string\">&#x27;text/markdown&#x27;</span>,</span><br><span class=\"line\">    install_requires=[],</span><br><span class=\"line\">    author=<span class=\"string\">&#x27;your_name&#x27;</span>,</span><br><span class=\"line\">    author_email=<span class=\"string\">&#x27;your_email&#x27;</span>,</span><br><span class=\"line\">    keywords=[],</span><br><span class=\"line\">    url=<span class=\"string\">&#x27;https://github.com/your/package_name&#x27;</span>,</span><br><span class=\"line\">    packages=[<span class=\"string\">&#x27;package_name&#x27;</span>]</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>","tags":["python","pypi","pip"]},{"title":"Полезные ссылки: YouTube","url":"/2023/09/%D0%BF%D0%BE%D0%BB%D0%B5%D0%B7%D0%BD%D1%8B%D0%B5-%D1%81%D1%81%D1%8B%D0%BB%D0%BA%D0%B8-youtube/","content":"<p>Полезные YouTube-каналы</p>\n<ul>\n<li><a href=\"https://www.youtube.com/@UtahCppProgrammers\">Utah Cpp Programmers</a></li>\n<li><a href=\"https://www.youtube.com/@AlexeySitnikov\">Алексей Ситников</a></li>\n<li><a href=\"https://www.youtube.com/@CodeTechandTutorials\">Code, Tech, and Tutorials</a></li>\n<li><a href=\"https://www.youtube.com/@SemenikhinDenis\">Denis Semenikhin</a></li>\n</ul>\n","tags":["полезные ссылки","youtube"]},{"title":"Баллада о гордом рыцаре (И.Иртеньев)","url":"/2023/10/%D0%B1%D0%B0%D0%BB%D0%BB%D0%B0%D0%B4%D0%B0-%D0%BE-%D0%B3%D0%BE%D1%80%D0%B4%D0%BE%D0%BC-%D1%80%D1%8B%D1%86%D0%B0%D1%80%D0%B5-%D0%B8-%D0%B8%D1%80%D1%82%D0%B5%D0%BD%D1%8C%D0%B5%D0%B2/","content":"<p>Автор: Игорь Иртеньев, 1991.</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">За высоким за забором</span><br><span class=\"line\">Гордый рыцарь в замке жил,</span><br><span class=\"line\">Он на все вокруг с прибором</span><br><span class=\"line\">Без разбора положил.</span><br><span class=\"line\"></span><br><span class=\"line\">Не кормил казну налогом,</span><br><span class=\"line\">На турнирах не блистал</span><br><span class=\"line\">И однажды перед Богом</span><br><span class=\"line\">Раньше времени предстал.</span><br><span class=\"line\"></span><br><span class=\"line\">И промолвил Вседержитель,</span><br><span class=\"line\">Смерив взглядом гордеца:</span><br><span class=\"line\">— С чем явился ты в обитель</span><br><span class=\"line\">Вездесущего отца?</span><br><span class=\"line\"></span><br><span class=\"line\">Есть каналы, по которым</span><br><span class=\"line\">До меня дошел сигнал,</span><br><span class=\"line\">Что ты клал на все с прибором.</span><br><span class=\"line\">Отвечает рыцарь: клал!</span><br><span class=\"line\"></span><br><span class=\"line\">Клал на ханжеский декорум,</span><br><span class=\"line\">На ублюдочную власть</span><br><span class=\"line\">И ad finem seculorum*</span><br><span class=\"line\">Собираюсь дальше класть.</span><br><span class=\"line\"></span><br><span class=\"line\">Сохранить рассудок можно</span><br><span class=\"line\">В этой жизни только так,</span><br><span class=\"line\">Бренна плоть, искусство ложно,</span><br><span class=\"line\">Страсть продажна, мир — бардак.</span><br><span class=\"line\"></span><br><span class=\"line\">Не привыкший к долгим спорам,</span><br><span class=\"line\">Бог вздохнул: ну что ж, иди,</span><br><span class=\"line\">Хочешь класть на все с прибором,</span><br><span class=\"line\">Что поделаешь, клади.</span><br><span class=\"line\"></span><br><span class=\"line\">Отпускаю, дерзкий сыне,</span><br><span class=\"line\">Я тебе гордыни грех,</span><br><span class=\"line\">С чистой совестью отныне</span><br><span class=\"line\">Можешь класть на все и всех.</span><br><span class=\"line\"></span><br><span class=\"line\">И на сем визит свой к Богу</span><br><span class=\"line\">Гордый рыцарь завершил</span><br><span class=\"line\">И в обратную дорогу,</span><br><span class=\"line\">Помолившись, поспешил.</span><br><span class=\"line\"></span><br><span class=\"line\">И в земной своей юдоли</span><br><span class=\"line\">До седых дожив годов,</span><br><span class=\"line\">Исполнял он Божью волю,</span><br><span class=\"line\">Не жалеючи трудов.</span><br><span class=\"line\"></span><br><span class=\"line\">* До скончания веков. (лат)</span><br></pre></td></tr></table></figure>","tags":["юмор","lol","стихи"]},{"title":"Полезные ссылки: GitHub","url":"/2023/12/%D0%BF%D0%BE%D0%BB%D0%B5%D0%B7%D0%BD%D1%8B%D0%B5-%D1%81%D1%81%D1%8B%D0%BB%D0%BA%D0%B8-github/","content":"<p>Полезные репозитории&#x2F;ссылки на GitHub:</p>\n<ul>\n<li><a href=\"https://github.com/trending/\">See what the GitHub community is most excited about today</a></li>\n</ul>\n","tags":["полезные ссылки","github"]},{"title":"Полезные ссылки: учим китайский язык","url":"/2023/12/%D0%BF%D0%BE%D0%BB%D0%B5%D0%B7%D0%BD%D1%8B%D0%B5-%D1%81%D1%81%D1%8B%D0%BB%D0%BA%D0%B8-%D1%83%D1%87%D0%B8%D0%BC-%D0%BA%D0%B8%D1%82%D0%B0%D0%B9%D1%81%D0%BA%D0%B8%D0%B9-%D1%8F%D0%B7%D1%8B%D0%BA/","content":"<ul>\n<li><a href=\"https://www.youtube.com/watch?v=rKZSpp4LCTo\">Learn Chinese: Basic Mandarin Chinese Vocabulary in 2.5 Hours Based on HSK 1 &amp; HSK 2 &amp; More</a></li>\n<li><a href=\"https://www.youtube.com/@EverydayChinese\">Everyday Chinese</a></li>\n<li><a href=\"https://www.mdbg.net/chinese/dictionary\">MDBG English to Chinese dictionary</a></li>\n<li><a href=\"https://www.youtube.com/@HarbinMandarin\">Harbin Mandarin</a></li>\n<li><a href=\"https://www.youtube.com/@russianmandarincorner\">Russian - Mandarin Corner</a></li>\n<li><a href=\"https://www.archchinese.com/\">Read and write Chinese characters</a> здесь можно посмотреть порядок написания черт каждого иероглифа</li>\n<li><a href=\"https://bkrs.info/\">БКРС</a> словарь</li>\n<li><a href=\"https://www.zhonga.ru/\">Китайский словарь и переводчик - Чжунга</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=Q05yjFaPnOI\">Китайские иероглифы. 214 иероглифических ключей. Графемы.</a></li>\n<li><a href=\"https://www.youtube.com/@igorputiloff\">Игорь Путилов -&#x2F;&#x2F;-Китайский Альманах</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=_Mg9pq5tw9Y\">Урок Китайской Каллиграфии</a></li>\n</ul>\n","tags":["полезные ссылки","китайский язык","chinese"]},{"title":"Полезные ссылки: сварка","url":"/2024/05/%D0%BF%D0%BE%D0%BB%D0%B5%D0%B7%D0%BD%D1%8B%D0%B5-%D1%81%D1%81%D1%8B%D0%BB%D0%BA%D0%B8-%D1%81%D0%B2%D0%B0%D1%80%D0%BA%D0%B0/","content":"<p>Обучающее видео на youtube:</p>\n<ul>\n<li><a href=\"https://www.youtube.com/@MastakSvarka\">@MastakSvarka</a></li>\n</ul>\n","tags":["полезные ссылки","хобби","сварка"]},{"title":"Полезные ссылки: 氣功, 功夫, 太极拳","url":"/2024/06/%D0%BF%D0%BE%D0%BB%D0%B5%D0%B7%D0%BD%D1%8B%D0%B5-%D1%81%D1%81%D1%8B%D0%BB%D0%BA%D0%B8-%E6%B0%A3%E5%8A%9F-%E5%8A%9F%E5%A4%AB/","content":"<ul>\n<li><a href=\"https://www.youtube.com/playlist?list=PLh1Et8WABpZ9VMzaV4kIGMC-zDqpi9Qel\">Курс Нейгун мастера Ян Цзюнмина</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=PbLqHcdXWDI\">Мастер Шаолинь Ши Хен И: Как Перестать Слишком Много Думать?</a></li>\n<li><a href=\"https://www.youtube.com/playlist?list=PLhHTlrVx3NTNXspjaJXMqt4ByXG1VefSi\">Шифу Ян Лэй</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=D3Ysvoz7I2E\">Растяжка тела на каждый день</a></li>\n</ul>\n","tags":["полезные ссылки","цигун","кунгфу","тайцзицюань","йога","зарядка","спорт"]},{"title":"Полезные ссылки: AI, ML, DL, OCR","url":"/2024/07/%D0%BF%D0%BE%D0%BB%D0%B5%D0%B7%D0%BD%D1%8B%D0%B5-%D1%81%D1%81%D1%8B%D0%BB%D0%BA%D0%B8-ai-ml-dl-ocr/","content":"<p><img src=\"/2024/07/%D0%BF%D0%BE%D0%BB%D0%B5%D0%B7%D0%BD%D1%8B%D0%B5-%D1%81%D1%81%D1%8B%D0%BB%D0%BA%D0%B8-ai-ml-dl-ocr/AIMLDL.jpg\"></p>\n<h1 id=\"Python-libraries-and-packages\"><a href=\"#Python-libraries-and-packages\" class=\"headerlink\" title=\"Python libraries and packages\"></a>Python libraries and packages</h1><ul>\n<li><a href=\"https://keras.io/\">Keras</a></li>\n<li><a href=\"https://www.tensorflow.org/\">TensorFlow</a></li>\n<li><a href=\"https://pytorch.org/\">PyTorch</a></li>\n<li><a href=\"https://opencv.org/\">OpenCV</a></li>\n<li><a href=\"https://scikit-image.org/\">scikit-image</a></li>\n<li><a href=\"https://scikit-learn.org/\">scikit-learn</a></li>\n</ul>\n<h1 id=\"Articles\"><a href=\"#Articles\" class=\"headerlink\" title=\"Articles\"></a>Articles</h1><ul>\n<li><a href=\"https://www.geeksforgeeks.org/handwritten-digit-recognition-with-opencv/\">Handwritten Digit Recognition with OpenCV</a></li>\n<li><a href=\"https://pyimagesearch.com/2019/07/08/keras-imagedatagenerator-and-data-augmentation/\">Keras ImageDataGenerator and Data Augmentation</a></li>\n<li><a href=\"https://pyimagesearch.com/2020/08/17/ocr-with-keras-tensorflow-and-deep-learning/\">OCR with Keras, TensorFlow, and Deep Learning</a></li>\n<li><a href=\"https://www.studytonight.com/post/horizontal-and-vertical-flip-data-augmentation\">Horizontal and Vertical Flip Data Augmentation</a></li>\n<li><a href=\"https://education.yandex.ru/handbook/ml\">Учебник по машинному обучению</a></li>\n<li><a href=\"https://hectormrejia.medium.com/custom-input-pipelines-with-data-augmentation-for-a-i-image-classification-using-keras-and-imgaug-afcfb082cfb3\">Custom Input Pipelines With Data Augmentation for A.I. Image Classification Using Keras and Imgaug</a></li>\n<li>TensorFlow &gt; Learn &gt; TensorFlow Core &gt; <a href=\"https://www.tensorflow.org/tutorials/images/data_augmentation\">Data augmentation</a></li>\n</ul>\n","tags":["полезные ссылки","machine learning","artificial intelligence","deep learning"]},{"title":"HSK1 - 150","url":"/2025/03/hsk1/","content":"<table>\n<thead>\n<tr>\n<th></th>\n<th>0</th>\n<th>1</th>\n<th>2</th>\n<th>3</th>\n<th>4</th>\n<th>5</th>\n<th>6</th>\n<th>7</th>\n<th>8</th>\n<th>9</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>000</td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E7%88%B1\">爱</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E5%85%AB\">八</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E7%88%B8%E7%88%B8\">爸爸</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E6%9D%AF%E5%AD%90\">杯子</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E5%8C%97%E4%BA%AC\">北京</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E6%9C%AC\">本</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E4%B8%8D%E5%AE%A2%E6%B0%94\">不客气</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E4%B8%8D\">不</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E8%8F%9C\">菜</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E8%8C%B6\">茶</a></td>\n</tr>\n<tr>\n<td>010</td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E5%90%83\">吃</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E5%87%BA%E7%A7%9F%E8%BD%A6\">出租车</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E6%89%93%E7%94%B5%E8%AF%9D\">打电话</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E5%A4%A7\">大</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E7%9A%84\">的</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E7%82%B9\">点</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E7%94%B5%E8%84%91\">电脑</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E7%94%B5%E8%A7%86\">电视</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E7%94%B5%E5%BD%B1\">电影</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E4%B8%9C%E8%A5%BF\">东西</a></td>\n</tr>\n<tr>\n<td>020</td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E9%83%BD\">都</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E8%AF%BB\">读</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E5%AF%B9%E4%B8%8D%E8%B5%B7\">对不起</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E5%A4%9A\">多</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E5%A4%9A%E5%B0%91\">多少</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E5%84%BF%E5%AD%90\">儿子</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E4%BA%8C\">二</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E9%A5%AD%E9%A6%86\">饭馆</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E9%A3%9E%E6%9C%BA\">飞机</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E5%88%86%E9%92%9F\">分钟</a></td>\n</tr>\n<tr>\n<td>030</td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E9%AB%98%E5%85%B4\">高兴</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E4%B8%AA\">个</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E5%B7%A5%E4%BD%9C\">工作</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E7%8B%97\">狗</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E6%B1%89%E8%AF%AD\">汉语</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E5%A5%BD\">好</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E5%96%9D\">喝</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E5%92%8C\">和</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E5%BE%88\">很</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E5%90%8E%E9%9D%A2\">后面</a></td>\n</tr>\n<tr>\n<td>040</td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E5%9B%9E\">回</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E4%BC%9A\">会</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E5%80%99%E8%BD%A6%E7%AB%99\">候车站</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E5%87%A0\">几</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E5%AE%B6\">家</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E5%8F%AB\">叫</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E4%BB%8A%E5%A4%A9\">今天</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E4%B9%9D\">九</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E5%BC%80\">开</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E7%9C%8B\">看</a></td>\n</tr>\n<tr>\n<td>050</td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E7%9C%8B%E8%A7%81\">看见</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E5%BF%AB\">快</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E6%9D%A5\">来</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E8%80%81%E5%B8%88\">老师</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E4%BA%86\">了</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E5%86%B7\">冷</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E9%87%8C\">里</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E9%9B%B6\">零</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E5%85%AD\">六</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E5%A6%88%E5%A6%88\">妈妈</a></td>\n</tr>\n<tr>\n<td>060</td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E5%90%97\">吗</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E4%B9%B0\">买</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E7%8C%AB\">猫</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E6%B2%A1\">没</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E6%B2%A1%E5%85%B3%E7%B3%BB\">没关系</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E7%B1%B3%E9%A5%AD\">米饭</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E5%90%8D%E5%AD%97\">名字</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E6%98%8E%E5%A4%A9\">明天</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E5%93%AA\">哪</a>（哪儿）</td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E9%82%A3\">那</a>（那儿）</td>\n</tr>\n<tr>\n<td>070</td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E5%91%A2\">呢</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E8%83%BD\">能</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E4%BD%A0\">你</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E5%B9%B4\">年</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E5%A5%B3%E5%84%BF\">女儿</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E6%9C%8B%E5%8F%8B\">朋友</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E6%BC%82%E4%BA%AE\">漂亮</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E8%8B%B9%E6%9E%9C\">苹果</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E4%B8%83\">七</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E5%89%8D%E9%9D%A2\">前面</a></td>\n</tr>\n<tr>\n<td>080</td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E9%92%B1\">钱</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E8%AF%B7\">请</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E5%8E%BB\">去</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E7%83%AD\">热</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E4%BA%BA\">人</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E8%AE%A4%E8%AF%86\">认识</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E6%97%A5\">日</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E4%B8%89\">三</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E5%95%86%E5%BA%97\">商店</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E4%B8%8A\">上</a></td>\n</tr>\n<tr>\n<td>090</td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E4%B8%8A%E5%8D%88\">上午</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E5%B0%91\">少</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E8%B0%81\">谁</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E4%BB%80%E4%B9%88\">什么</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E5%8D%81\">十</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E6%97%B6%E5%80%99\">时候</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E6%98%AF\">是</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E4%B9%A6\">书</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E6%B0%B4\">水</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E6%B0%B4%E6%9E%9C\">水果</a></td>\n</tr>\n<tr>\n<td>100</td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E7%9D%A1%E8%A7%89\">睡觉</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E8%AF%B4%E8%AF%9D\">说话</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E5%9B%9B\">四</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E5%B2%81\">岁</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E4%BB%96\">他</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E5%A5%B9\">她</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E5%A4%AA\">太</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E5%A4%A9%E6%B0%94\">天气</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E5%90%AC\">听</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E5%90%8C%E5%AD%A6\">同学</a></td>\n</tr>\n<tr>\n<td>110</td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E5%96%82\">喂</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E6%88%91\">我</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E6%88%91%E4%BB%AC\">我们</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E4%BA%94\">五</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E5%96%9C%E6%AC%A2\">喜欢</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E4%B8%8B\">下</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E4%B8%8B%E5%8D%88\">下午</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E4%B8%8B%E9%9B%A8\">下雨</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E5%85%88%E7%94%9F\">先生</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E7%8E%B0%E5%9C%A8\">现在</a></td>\n</tr>\n<tr>\n<td>120</td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E6%83%B3\">想</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E5%B0%8F\">小</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E5%B0%8F%E5%A7%90\">小姐</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E4%BA%9B\">些</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E5%86%99\">写</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E8%B0%A2%E8%B0%A2\">谢谢</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E6%98%9F%E6%9C%9F\">星期</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E5%AD%A6%E7%94%9F\">学生</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E5%AD%A6%E4%B9%A0\">学习</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E5%AD%A6%E6%A0%A1\">学校</a></td>\n</tr>\n<tr>\n<td>130</td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E4%B8%80\">一</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E8%A1%A3%E6%9C%8D\">衣服</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E5%8C%BB%E7%94%9F\">医生</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E5%8C%BB%E9%99%A2\">医院</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E6%A4%85%E5%AD%90\">椅子</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E6%9C%89\">有</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E6%9C%88\">月</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E5%86%8D%E8%A7%81\">再见</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E5%9C%A8\">在</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E6%80%8E%E4%B9%88\">怎么</a></td>\n</tr>\n<tr>\n<td>140</td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E6%80%8E%E4%B9%88%E6%A0%B7\">怎么样</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E8%BF%99\">这</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E4%B8%AD%E5%9B%BD\">中国</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E4%B8%AD%E5%8D%88\">中午</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E4%BD%8F\">住</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E6%A1%8C%E5%AD%90\">桌子</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E5%AD%97\">字</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E6%98%A8%E5%A4%A9\">昨天</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E5%81%9A\">做</a></td>\n<td><a href=\"https://bkrs.info/slovo.php?ch=%E5%9D%90\">坐</a></td>\n</tr>\n</tbody></table>\n","tags":["китайский язык","chinese","hsk"]},{"title":"HSK2 - 150","url":"/2025/03/hsk2/","content":"<table>\n<thead>\n<tr>\n<th></th>\n<th>0</th>\n<th>1</th>\n<th>2</th>\n<th>3</th>\n<th>4</th>\n<th>5</th>\n<th>6</th>\n<th>7</th>\n<th>8</th>\n<th>9</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>000</td>\n<td>吧</td>\n<td>白</td>\n<td>百</td>\n<td>帮助</td>\n<td>比</td>\n<td>报纸</td>\n<td>别</td>\n<td>长</td>\n<td>唱歌</td>\n<td>出</td>\n</tr>\n<tr>\n<td>010</td>\n<td>穿</td>\n<td>船</td>\n<td>次</td>\n<td>从</td>\n<td>错</td>\n<td>打篮球</td>\n<td>大家</td>\n<td>但是</td>\n<td>到</td>\n<td>得</td>\n</tr>\n<tr>\n<td>020</td>\n<td>等</td>\n<td>弟弟</td>\n<td>第一</td>\n<td>懂</td>\n<td>对</td>\n<td>房间</td>\n<td>非常</td>\n<td>服务员</td>\n<td>高</td>\n<td>告诉</td>\n</tr>\n<tr>\n<td>030</td>\n<td>哥哥</td>\n<td>给</td>\n<td>公共汽车</td>\n<td>公斤</td>\n<td>公司</td>\n<td>贵</td>\n<td>过</td>\n<td>还</td>\n<td>孩子</td>\n<td>好吃</td>\n</tr>\n<tr>\n<td>040</td>\n<td>号</td>\n<td>黑</td>\n<td>红</td>\n<td>欢迎</td>\n<td>回答</td>\n<td>机场</td>\n<td>鸡蛋</td>\n<td>件</td>\n<td>教室</td>\n<td>姐姐</td>\n</tr>\n<tr>\n<td>050</td>\n<td>介绍</td>\n<td>进</td>\n<td>近</td>\n<td>就</td>\n<td>觉得</td>\n<td>咖啡</td>\n<td>开始</td>\n<td>考试</td>\n<td>可能</td>\n<td>可以</td>\n</tr>\n<tr>\n<td>060</td>\n<td>课</td>\n<td>快</td>\n<td>快乐</td>\n<td>累</td>\n<td>离</td>\n<td>两</td>\n<td>路</td>\n<td>旅游</td>\n<td>卖</td>\n<td>慢</td>\n</tr>\n<tr>\n<td>070</td>\n<td>忙</td>\n<td>每</td>\n<td>妹妹</td>\n<td>门</td>\n<td>男人</td>\n<td>您</td>\n<td>牛奶</td>\n<td>女人</td>\n<td>旁边</td>\n<td>跑步</td>\n</tr>\n<tr>\n<td>080</td>\n<td>便宜</td>\n<td>票</td>\n<td>妻子</td>\n<td>起床</td>\n<td>千</td>\n<td>晴</td>\n<td>去年</td>\n<td>让</td>\n<td>上班</td>\n<td>身体</td>\n</tr>\n<tr>\n<td>090</td>\n<td>生病</td>\n<td>生日</td>\n<td>时间</td>\n<td>事情</td>\n<td>手表</td>\n<td>手机</td>\n<td>送</td>\n<td>所以</td>\n<td>它</td>\n<td>踢足球</td>\n</tr>\n<tr>\n<td>100</td>\n<td>题</td>\n<td>跳舞</td>\n<td>外</td>\n<td>完</td>\n<td>玩 （玩儿）</td>\n<td>晚上</td>\n<td>为什么</td>\n<td>问</td>\n<td>问题</td>\n<td>西瓜</td>\n</tr>\n<tr>\n<td>110</td>\n<td>希望</td>\n<td>洗</td>\n<td>向</td>\n<td>小时</td>\n<td>笑</td>\n<td>新</td>\n<td>姓</td>\n<td>休息</td>\n<td>雪</td>\n<td>颜色</td>\n</tr>\n<tr>\n<td>120</td>\n<td>眼睛</td>\n<td>羊肉</td>\n<td>药</td>\n<td>要</td>\n<td>也</td>\n<td>已经</td>\n<td>一起</td>\n<td>意思</td>\n<td>因为</td>\n<td>阴</td>\n</tr>\n<tr>\n<td>130</td>\n<td>游泳</td>\n<td>右边</td>\n<td>鱼</td>\n<td>元</td>\n<td>远</td>\n<td>运动</td>\n<td>再</td>\n<td>早上</td>\n<td>张</td>\n<td>丈夫</td>\n</tr>\n<tr>\n<td>140</td>\n<td>找</td>\n<td>着</td>\n<td>真</td>\n<td>正在</td>\n<td>知道</td>\n<td>准备</td>\n<td>自行车</td>\n<td>走</td>\n<td>最</td>\n<td>左边</td>\n</tr>\n</tbody></table>\n","tags":["китайский язык","chinese","hsk"]}]